{"version":3,"sources":["utils/eventEmitter.ts","utils/toastify.ts","components/FETable.tsx","services/partner-services/index.ts","components/ActionPartner.tsx","../node_modules/react-use/esm/misc/util.js","../node_modules/react-use/esm/useSearchParam.js","views/partner-management/partner/list.tsx","views/partner-management/partner/index.tsx"],"names":["EventEmitter","showToast","type","msg","toast","FETable","data","columns","onClickRowItem","showCustomFilter","rowId","filterTypes","React","useMemo","text","rows","id","filterValue","filter","row","rowValue","values","undefined","String","toLowerCase","startsWith","useContext","TableContext","queryPageIndex","queryPageSize","totalCount","dispatch","useTable","initialState","pageIndex","pageSize","manualSortBy","disableSortRemove","manualPagination","manualFilters","pageCount","autoResetSelectedRows","getRowId","useFilters","useSortBy","usePagination","useRowSelect","hooks","visibleColumns","push","columnss","Header","getToggleAllPageRowsSelectedProps","IndeterminateCheckbox","Cell","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","canPreviousPage","canNextPage","gotoPage","setPageSize","nextPage","previousPage","toggleAllPageRowsSelected","selectedFlatRows","state","sortBy","filters","selectedRowIds","handleDeselectAllRow","flag","useEffect","eventEmitter","addListener","payload","emptyRows","Math","max","length","useState","dense","size","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","sx","padding","active","isSorted","direction","isSortedDesc","IconComponent","ArrowDropDownIcon","render","component","visuallyHidden","minWidth","px","canFilter","Boolean","textAlign","colSpan","hover","getRowProps","onClick","textDecoration","cursor","cells","cell","getCellProps","style","height","rowsPerPageOptions","count","rowsPerPage","onPageChange","event","newPage","onRowsPerPageChange","Number","target","value","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","stopPropagation","PartnerService","BaseApiService","OutlineInputStyle","styled","OutlinedInput","shouldForwardProp","theme","width","marginLeft","marginRight","paddingLeft","paddingRight","background","breakpoints","down","palette","mode","dark","Input","display","ActionPartner","onClickUser","urlAddTicket","onClickDownload","onUploadFile","onClickTrash","title","useTheme","useAuth","user","selectedIds","setValue","emit","handleFileSelect","files","mb","_","keys","spacing","marginBottom","styles","btn","variant","htmlFor","accept","onChange","e","flexGrow","placeholder","startAdornment","position","stroke","color","grey","inputProps","borderColor","borderRadius","fontSize","fontWeight","startIcon","Link","to","on","obj","args","_i","arguments","addEventListener","apply","off","removeEventListener","isBrowser","window","getValue","search","param","URLSearchParams","get","location","_a","PartnerList","loading","cols","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","productsColumns","key","startCase","camelCase","accessor","IconButton","Filter","maxHeight","overflow","productsData","MainCard","content","border","Menu","keepMounted","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","PartnerPage","sortByObject","resetState","searchTerm","setSearchTerm","f","useSearchParam","useQuery","page_size","view_type","sortByProps","desc","filtersByData","it","isDateType","includes","moment","format","join","partnerServices","getAll","keepPreviousData","onError","err","toastify","message","onSuccess","res","meta","pagination","total","isLoading","dataTable","navi","refetch","useNavigate","handleSearch","debounce","maxWait","removeAllListeners","JSON","parse","keyword","Box","Grid","container","item","xs","contentSX","p","console","log","partner_id","toString"],"mappings":"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","file":"static/js/19.886e8dfe.chunk.js","sourcesContent":["import EventEmitter from 'events';\n\nexport default new EventEmitter();\n","import { toast, TypeOptions } from 'react-toastify';\n\nconst showToast = (type?: TypeOptions, msg?: string) => {\n    toast(msg, {\n        type\n    });\n};\n\nexport default { showToast };\n","import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport {\n    Box,\n    Checkbox,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TablePagination,\n    TableRow,\n    TableSortLabel\n} from '@mui/material';\nimport { visuallyHidden } from '@mui/utils';\nimport TableContext from 'contexts/TableContext';\nimport React, { useContext } from 'react';\nimport { useFilters, usePagination, useRowSelect, useSortBy, useTable } from 'react-table';\nimport eventEmitter from 'utils/eventEmitter';\n\nconst FETable = ({ data, columns, onClickRowItem, showCustomFilter = false, rowId }) => {\n    const filterTypes = React.useMemo(\n        () => ({\n            // Add a new fuzzyTextFilterFn filter type.\n            //   fuzzyText: fuzzyTextFilterFn,\n            // Or, override the default text filter to use\n            // \"startWith\"\n            text: (rows, id, filterValue) => {\n                return rows.filter((row) => {\n                    const rowValue = row?.values[id];\n                    return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n                });\n            }\n        }),\n        []\n    );\n\n    const [{ queryPageIndex, queryPageSize, totalCount }, dispatch] = useContext(TableContext);\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page, // Instead of using 'rows', we'll use page,\n        // which has only the rows for the active page\n\n        // The rest of these things are super handy, too ;)\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        selectedFlatRows,\n        toggleAllPageRowsSelected,\n        state: { pageIndex, pageSize, sortBy, filters, selectedRowIds }\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: {\n                pageIndex: queryPageIndex,\n                pageSize: queryPageSize\n            },\n            manualSortBy: true,\n            disableSortRemove: true,\n            manualPagination: true,\n            manualFilters: true,\n            pageCount: totalCount,\n            filterTypes,\n            autoResetSelectedRows: false,\n            getRowId: (row) => row[rowId]\n        },\n        useFilters,\n        useSortBy,\n        usePagination,\n        useRowSelect,\n        (hooks) => {\n            hooks.visibleColumns.push((columnss) => [\n                // Let's make a column for selection\n                {\n                    id: 'selection',\n                    // The header can use the table's getToggleAllRowsSelectedProps method\n                    // to render a checkbox\n                    Header: ({ getToggleAllPageRowsSelectedProps }) => (\n                        <div>\n                            <IndeterminateCheckbox {...getToggleAllPageRowsSelectedProps()} />\n                        </div>\n                    ),\n                    // The cell can use the individual row's getToggleRowSelectedProps method\n                    // to the render a checkbox\n                    Cell: ({ row }) => (\n                        <div>\n                            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                        </div>\n                    )\n                },\n                ...columnss\n            ]);\n        }\n    );\n\n    const handleDeselectAllRow = (flag: boolean) => {\n        if (flag) {\n            toggleAllPageRowsSelected(false);\n        }\n    };\n\n    React.useEffect(() => {\n        eventEmitter.addListener('DESELECT_ALL_ROWS', handleDeselectAllRow);\n    }, []);\n\n    React.useEffect(() => {\n        dispatch({ type: 'PAGE_SIZE_CHANGED', payload: pageSize });\n        gotoPage(0);\n    }, [pageSize, gotoPage]);\n\n    React.useEffect(() => {\n        if (selectedRowIds) {\n            dispatch({\n                type: 'SELECTED_CHANGE',\n                payload: selectedRowIds\n            });\n        }\n    }, [selectedRowIds]);\n\n    React.useEffect(() => {\n        if (sortBy) {\n            dispatch({\n                type: 'SORT_BY_OBJECT_CHANGED',\n                payload: sortBy\n            });\n        }\n    }, [sortBy]);\n\n    React.useEffect(() => {\n        if (filters) {\n            dispatch({\n                type: 'FILTERS_CHANGED',\n                payload: filters\n            });\n        }\n    }, [filters]);\n\n    const handleChangePage = (event, newPage) => {\n        gotoPage(newPage);\n        dispatch({ type: 'PAGE_CHANGED', payload: newPage });\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setPageSize(Number(event.target.value));\n    };\n\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows = pageIndex > 0 ? Math.max(0, (1 + pageIndex) * pageSize - pageOptions.length) : 0;\n\n    const [dense] = React.useState(false);\n\n    const renderNotfound = () => (\n        <TableRow>\n            <TableCell sx={{ textAlign: 'left' }} colSpan={columns.length + 1}>\n                Empty Data\n            </TableCell>\n        </TableRow>\n    );\n\n    return (\n        <div>\n            <TableContainer {...getTableProps()}>\n                <Table aria-labelledby=\"tableTitle\" size={dense ? 'small' : 'medium'}>\n                    <TableHead>\n                        {headerGroups.map((headerGroup) => (\n                            <TableRow {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map((column) => (\n                                    <TableCell\n                                        {...(column.id === 'selection'\n                                            ? column.getHeaderProps()\n                                            : column.getHeaderProps(column.getSortByToggleProps()))}\n                                        sx={{ padding: 0.5 }}\n                                    >\n                                        <TableSortLabel\n                                            active={column.isSorted}\n                                            direction={column.isSortedDesc ? 'desc' : 'asc'}\n                                            IconComponent={ArrowDropDownIcon}\n                                        >\n                                            {column.render('Header')}\n                                            {column.id !== 'selection' ? (\n                                                <Box component=\"span\" sx={visuallyHidden}>\n                                                    {column.isSortedDesc ? 'sorted descending' : 'sorted ascending'}\n                                                </Box>\n                                            ) : null}\n                                        </TableSortLabel>\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        ))}\n                    </TableHead>\n\n                    {showCustomFilter && (\n                        <TableHead>\n                            {headerGroups.map((headerGroup) => (\n                                <TableRow {...headerGroup.getHeaderGroupProps()}>\n                                    {headerGroup.headers.map((column) => {\n                                        if (column.id === 'selection') return <TableCell {...column.getHeaderProps()}>Filter</TableCell>;\n                                        return (\n                                            <TableCell {...column.getHeaderProps()} sx={{ minWidth: 200, px: 1 }}>\n                                                {column.canFilter ? column.render('Filter') : null}\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            ))}\n                        </TableHead>\n                    )}\n\n                    <TableBody {...getTableBodyProps()}>\n                        {!Boolean(data.length) && renderNotfound()}\n\n                        {page.map((row) => {\n                            prepareRow(row);\n                            return (\n                                <TableRow\n                                    hover\n                                    {...row.getRowProps()}\n                                    onClick={() => onClickRowItem(row)}\n                                    sx={{ textDecoration: 'none', cursor: 'pointer' }}\n                                >\n                                    {row.cells.map((cell) => {\n                                        return (\n                                            <TableCell {...cell.getCellProps()} sx={{ padding: 0.5 }}>\n                                                {cell.render('Cell')}\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            );\n                        })}\n\n                        {emptyRows > 0 && (\n                            <TableRow\n                                style={{\n                                    height: (dense ? 33 : 53) * emptyRows\n                                }}\n                            >\n                                <TableCell colSpan={columns.length + 1} />\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                component=\"div\"\n                rowsPerPageOptions={[10, 15, 20]}\n                count={pageOptions.length}\n                rowsPerPage={pageSize}\n                page={pageIndex}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </div>\n    );\n};\n\nexport default FETable;\n\nconst IndeterminateCheckbox = React.forwardRef(({ indeterminate, ...rest }: { indeterminate: any }, ref) => {\n    const defaultRef = React.useRef<any>();\n    const resolvedRef: any = ref || defaultRef;\n\n    React.useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n        <>\n            <Checkbox\n                ref={resolvedRef}\n                {...rest}\n                onClick={(event) => {\n                    event.stopPropagation();\n                }}\n            />\n        </>\n    );\n});\n","import { BaseApiService } from 'services/core/baseApi.service';\n\nclass PartnerService extends BaseApiService {\n    constructor() {\n        super('/v1/partners');\n    }\n}\n\nexport default new PartnerService();\n","import { Box, Button, InputAdornment, OutlinedInput, Stack, Tooltip, Typography } from '@mui/material';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { shouldForwardProp } from '@mui/system';\nimport { IconDownload, IconPlus, IconSearch, IconTrash, IconUpload, IconUser } from '@tabler/icons';\nimport TableContext from 'contexts/TableContext';\nimport useAuth from 'hooks/useAuth';\nimport { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport eventEmitter from 'utils/eventEmitter';\n\nconst OutlineInputStyle = styled(OutlinedInput, { shouldForwardProp })(({ theme }) => ({\n    width: 434,\n    height: 36,\n    marginLeft: 16,\n    marginRight: 16,\n    paddingLeft: 16,\n    paddingRight: 16,\n    '& input': {\n        background: 'transparent !important',\n        paddingLeft: '4px !important'\n    },\n    [theme.breakpoints.down('lg')]: {\n        width: 250\n    },\n    [theme.breakpoints.down('md')]: {\n        width: 100,\n        // marginLeft: 4,\n        background: theme.palette.mode === 'dark' ? theme.palette.dark[800] : '#fff'\n    }\n}));\n\nconst Input = styled('input')({\n    display: 'none'\n});\n\nconst ActionPartner = ({ onClickUser, urlAddTicket, onClickDownload, onUploadFile, onClickTrash, title = 'Partner List' }) => {\n    const theme = useTheme();\n    const { user } = useAuth();\n\n    const [{ selectedIds }] = useContext(TableContext);\n\n    const [value, setValue] = useState<string>('');\n\n    useEffect(() => {\n        eventEmitter.emit('SEARCH_TICKET_LIST', { value });\n    }, [value]);\n\n    const handleFileSelect = (event) => {\n        onUploadFile?.(event.target.files[0]);\n    };\n\n    const renderActionList = () => (\n        <>\n            <Typography sx={{ mb: 1 }}>{`${title} - ${_.keys(selectedIds).length} Selected`}</Typography>\n            <Stack direction=\"row\" spacing={1.5} sx={{ marginBottom: 1 }}>\n                <Tooltip title=\"Download\">\n                    <Button sx={{ ...styles.btn, minWidth: 36, padding: 0 }} variant=\"outlined\" onClick={onClickDownload}>\n                        <IconDownload size={18} />\n                    </Button>\n                </Tooltip>\n\n                <Tooltip title=\"Upload\">\n                    <label style={{ display: 'flex' }} htmlFor=\"contained-button-file\">\n                        <Input\n                            accept=\".xlsx, .xls, .csv\"\n                            type=\"file\"\n                            id=\"contained-button-file\"\n                            onChange={handleFileSelect}\n                            onClick={(e: any) => {\n                                e.target.value = null;\n                            }}\n                        />\n                        <Button sx={{ ...styles.btn, minWidth: 36, padding: 0 }} component=\"span\" variant=\"outlined\">\n                            <IconUpload size={18} />\n                        </Button>\n                    </label>\n                </Tooltip>\n\n                <Tooltip title=\"Delete\">\n                    <Button onClick={onClickTrash} sx={{ ...styles.btn, minWidth: 36, padding: 0 }} variant=\"outlined\">\n                        <IconTrash size={18} />\n                    </Button>\n                </Tooltip>\n\n                <Tooltip title=\"Toggle Mode\">\n                    <Button sx={{ ...styles.btn, minWidth: 36, padding: 0 }} variant=\"outlined\" onClick={onClickUser}>\n                        <IconUser size={18} />\n                    </Button>\n                </Tooltip>\n\n                <Box sx={{ flexGrow: 1 }} />\n\n                <Box>\n                    <OutlineInputStyle\n                        id=\"input-search-header\"\n                        value={value}\n                        onChange={(e) => setValue(e.target.value)}\n                        placeholder=\"Search\"\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\n                            </InputAdornment>\n                        }\n                        aria-describedby=\"search-helper-text\"\n                        inputProps={{ 'aria-label': 'weight' }}\n                        sx={{ height: 36 }}\n                    />\n                </Box>\n\n                <Button\n                    variant=\"outlined\"\n                    sx={{ borderColor: '#E5E5E5', color: '#008345', borderRadius: 2, height: 36, fontSize: 12, fontWeight: 'bold' }}\n                    startIcon={<IconPlus color=\"#008345\" size={18} />}\n                    component={Link}\n                    to={urlAddTicket}\n                >\n                    Add New\n                </Button>\n            </Stack>\n        </>\n    );\n\n    return renderActionList();\n};\n\nexport default ActionPartner;\n\nconst styles = {\n    btn: {\n        borderColor: '#E5E5E5',\n        height: 36\n    }\n};\n","export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useEffect, useState } from 'react';\nimport { isBrowser, off, on } from './misc/util';\nvar getValue = function (search, param) { return new URLSearchParams(search).get(param); };\nvar useSearchParam = function (param) {\n    var location = window.location;\n    var _a = useState(function () { return getValue(location.search, param); }), value = _a[0], setValue = _a[1];\n    useEffect(function () {\n        var onChange = function () {\n            setValue(getValue(location.search, param));\n        };\n        on(window, 'popstate', onChange);\n        on(window, 'pushstate', onChange);\n        on(window, 'replacestate', onChange);\n        return function () {\n            off(window, 'popstate', onChange);\n            off(window, 'pushstate', onChange);\n            off(window, 'replacestate', onChange);\n        };\n    }, []);\n    return value;\n};\nvar useSearchParamServer = function () { return null; };\nexport default isBrowser ? useSearchParam : useSearchParamServer;\n","import { IconButton, Menu, MenuItem } from '@mui/material';\nimport { IconDotsVertical } from '@tabler/icons';\nimport FETable from 'components/FETable';\nimport { camelCase, startCase } from 'lodash';\nimport React, { SyntheticEvent, useState } from 'react';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\nconst PartnerList = ({ data = [], loading, cols = [], onClickRowItem }) => {\n    const [anchorEl, setAnchorEl] = useState<Element | ((element: Element) => Element) | null | undefined>(null);\n    const handleClick = (event: SyntheticEvent) => {\n        event.stopPropagation();\n        setAnchorEl(event?.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const productsColumns = React.useMemo(\n        () =>\n            cols[0]\n                ? cols.map((key: any) => {\n                      if (key === 'action') {\n                          return {\n                              Header: startCase(camelCase(key)),\n                              accessor: key,\n                              Cell: ({ value }) => (\n                                  <IconButton onClick={handleClick}>\n                                      <IconDotsVertical />\n                                  </IconButton>\n                              ),\n                              Filter: ''\n                          };\n                      }\n                      return {\n                          Header: startCase(camelCase(key)),\n                          accessor: key,\n                          Cell: ({ value }) => (\n                              <div\n                                  style={{\n                                      maxHeight: 40,\n                                      overflow: 'hidden'\n                                  }}\n                              >\n                                  {value}\n                              </div>\n                          ),\n                          Filter: ''\n                      };\n                  })\n                : [],\n        [cols]\n    );\n\n    const productsData = React.useMemo(() => [...data], [data]);\n\n    return (\n        <MainCard content={false} border={false}>\n            <Menu\n                id=\"menu-followers-card\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                variant=\"selectedMenu\"\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n            >\n                <MenuItem onClick={handleClose} sx={{ color: '#27AE60', fontSize: 12, fontWeight: 500 }}>\n                    Edit\n                </MenuItem>\n                <MenuItem onClick={handleClose} sx={{ color: '#808080', fontSize: 12, fontWeight: 500 }}>\n                    View\n                </MenuItem>\n                <MenuItem onClick={handleClose} sx={{ color: '#FF0015', fontSize: 12, fontWeight: 500 }}>\n                    Delete\n                </MenuItem>\n            </Menu>\n            {loading ? (\n                <div>loading...</div>\n            ) : (\n                <FETable rowId=\"partner_id\" onClickRowItem={onClickRowItem} data={productsData} columns={productsColumns} />\n            )}\n        </MainCard>\n    );\n};\n\nexport default PartnerList;\n","import { Box, Grid } from '@mui/material';\nimport ActionPartner from 'components/ActionPartner';\nimport TableContext from 'contexts/TableContext';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useNavigate } from 'react-router-dom';\nimport { useSearchParam } from 'react-use';\nimport partnerServices from 'services/partner-services';\nimport MainCard from 'ui-component/cards/MainCard';\nimport eventEmitter from 'utils/eventEmitter';\nimport toastify from 'utils/toastify';\nimport PartnerList from './list';\n\nconst PartnerPage = () => {\n    const [{ queryPageIndex, queryPageSize, sortByObject, filters, selectedIds, resetState }, dispatch] = useContext(TableContext);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const f = useSearchParam('f');\n    const {\n        isLoading,\n        data: dataTable,\n        refetch: refetchTable\n    } = useQuery(\n        ['partner_table', queryPageIndex, queryPageSize, searchTerm, sortByObject, filters],\n        () => {\n            const page_size = `per_page=${queryPageSize}&page=${queryPageIndex + 1}`;\n            const search = searchTerm?.length === 0 ? '' : `&keyword=${searchTerm}`;\n            const view_type = `view_type=${1}`;\n            const sortByProps = Boolean(sortByObject.length)\n                ? `&order_by=${sortByObject[0]?.id ?? 'ticket_id'}&sorted_by=${sortByObject[0]?.desc ? 'desc' : 'asc'}`\n                : '';\n            const filtersByData = Boolean(filters)\n                ? _.map(filters, (it) => {\n                      const isDateType = ['created_date', 'last_status_date'].includes(it.id);\n                      return `&${it.id}=${isDateType ? moment(it.value).format('DD/MM/YYYY') : it.value}`;\n                  }).join('')\n                : '';\n\n            return partnerServices.getAll(`${page_size}${search}&${view_type}${sortByProps}${filtersByData}`);\n        },\n        {\n            keepPreviousData: true,\n            // staleTime: Infinity\n            onError: (err: any) => {\n                toastify.showToast('error', err.message);\n            },\n            onSuccess: (res) => {\n                dispatch({\n                    type: 'TOTAL_COUNT_CHANGED',\n                    payload: res.data?.meta?.pagination?.total\n                });\n            }\n        }\n    );\n\n    const navi = useNavigate();\n\n    const onClickRowItem = (row) => {\n        console.log(row);\n\n        navi(row.values?.partner_id?.toString());\n    };\n\n    const handleSearch = _.debounce(\n        ({ value }) => {\n            setSearchTerm(value);\n        },\n        1500,\n        {\n            maxWait: 1500\n        }\n    );\n\n    useEffect(() => {\n        eventEmitter.addListener('SEARCH_TICKET_LIST', handleSearch);\n\n        return () => {\n            eventEmitter.removeAllListeners();\n        };\n    }, []);\n\n    useEffect(() => {\n        if (f) {\n            dispatch({ type: 'PAGE_CHANGED', payload: JSON.parse(f!)?.queryPageIndex! || 0 });\n            setSearchTerm(JSON.parse(f!)?.keyword! || '');\n        }\n    }, [f]);\n\n    const onClickDownload = () => {};\n    const onUploadFile = () => {};\n    const onClickTrash = () => {};\n    const onClickUser = () => {};\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <Grid container>\n                <Grid item xs={12}>\n                    <MainCard contentSX={{ p: 2 }}>\n                        <ActionPartner\n                            onClickDownload={onClickDownload}\n                            onClickUser={onClickUser}\n                            urlAddTicket=\"create\"\n                            onUploadFile={onUploadFile}\n                            onClickTrash={onClickTrash}\n                        />\n                        <PartnerList\n                            onClickRowItem={onClickRowItem}\n                            loading={isLoading}\n                            data={dataTable?.data?.data}\n                            cols={dataTable?.data?.cols}\n                        />\n                    </MainCard>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default PartnerPage;\n"],"sourceRoot":""}