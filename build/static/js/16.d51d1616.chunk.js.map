{"version":3,"sources":["hooks/useScriptRef.ts","views/pages/authentication/AuthCardWrapper.tsx","views/pages/authentication/AuthWrapper1.tsx","views/pages/authentication/auth-forms/AuthLogin.tsx","views/pages/authentication/authentication3/Login3.tsx"],"names":["useScriptRef","scripted","useRef","useEffect","current","AuthCardWrapper","children","other","boxShadow","shadow","sx","border","borderRadius","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","theme","backgroundImage","backgroundSize","minHeight","recaptchaRef","React","createRef","FirebaseLogin","loginProp","others","useTheme","scriptedRef","useMediaQuery","breakpoints","down","useConfig","useState","checked","setChecked","useAuth","firebaseEmailPasswordSignIn","firebaseGoogleSignIn","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","initialValues","email","password","token","submit","validationSchema","Yup","shape","max","required","nullable","onSubmit","values","a","setErrors","setStatus","setSubmitting","then","err","success","message","console","error","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","setValues","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Stack","direction","alignItems","justifyContent","spacing","FormControlLabel","control","Checkbox","target","color","Typography","variant","component","Link","to","textDecoration","Box","mt","ref","onExpired","reset","sitekey","style","display","my","AnimateButton","Button","disabled","Login","matchDownSM","isLoggedIn","Grid","container","item","m","mb","Logo","palette","secondary","main","gutterBottom","fontSize","textAlign","AuthLogin"],"mappings":"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","file":"static/js/16.d51d1616.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// material-ui\r\nimport { Box } from '@mui/material';\r\n// project import\r\nimport MainCard, { MainCardProps } from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => (\r\n    <MainCard\r\n        boxShadow\r\n        shadow=\"0px 4px 16px rgba(0, 0, 0, 0.25)\"\r\n        sx={{\r\n            boxShadow: '0px 4px 16px rgba(0, 0, 0, 0.25)',\r\n            border: '1px solid #CCCCCC',\r\n            borderRadius: '24px',\r\n            maxWidth: { xs: 400, lg: 384 },\r\n            margin: { xs: 1.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    // backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    backgroundImage: 'url(images/img_bg_login.png)',\r\n    backgroundSize: 'cover',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Formik } from 'formik';\r\nimport useAuth from 'hooks/useAuth';\r\n// project imports\r\nimport useConfig from 'hooks/useConfig';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport React from 'react';\r\n// third party\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\nimport { Link } from 'react-router-dom';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport * as Yup from 'yup';\r\n\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nconst recaptchaRef: any = React.createRef();\r\n\r\nconst FirebaseLogin = ({ loginProp, ...others }: { loginProp?: number }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const { borderRadius } = useConfig();\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const { firebaseEmailPasswordSignIn, firebaseGoogleSignIn } = useAuth();\r\n    const googleHandler = async () => {\r\n        try {\r\n            await firebaseGoogleSignIn();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={{\r\n                    email: 'info@codedthemes.com',\r\n                    password: '123456',\r\n                    token: null,\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required'),\r\n                    token: Yup.string().required().nullable()\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        await firebaseEmailPasswordSignIn(values.email, values.password).then(\r\n                            () => {\r\n                                // WARNING: do not set any formik state here as formik might be already destroyed here. You may get following error by doing so.\r\n                                // Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application.\r\n                                // To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\r\n                                // github issue: https://github.com/formium/formik/issues/2430\r\n                            },\r\n                            (err: any) => {\r\n                                if (scriptedRef.current) {\r\n                                    setStatus({ success: false });\r\n                                    setErrors({ submit: err.message });\r\n                                    setSubmitting(false);\r\n                                }\r\n                            }\r\n                        );\r\n                    } catch (err: any) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values, setValues }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address / Username\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={loginProp ? `/pages/forgot-password/forgot-password${loginProp}` : '/forgot'}\r\n                                color=\"secondary\"\r\n                                sx={{ textDecoration: 'none' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n                        <FormControl fullWidth error={Boolean(touched.token && errors.token)} sx={{ ...theme.typography.customInput }}>\r\n                            <ReCAPTCHA\r\n                                ref={recaptchaRef}\r\n                                onExpired={() => (recaptchaRef.current as any)?.reset()}\r\n                                sitekey=\"6Lcb7MgeAAAAAB8bZdGoCps1MMat1mluOYSZFZeI\"\r\n                                onChange={(value: any) => {\r\n                                    setValues({ ...values, token: value });\r\n                                }}\r\n                                size=\"normal\"\r\n                                style={{ margin: '0 auto', display: 'table' }}\r\n                            />\r\n                        </FormControl>\r\n                        <Box sx={{ my: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    sx={{ borderRadius: '8px' }}\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseLogin;\r\n","import { Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthLogin from '../auth-forms/AuthLogin';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\n\r\n// assets\r\n\r\n// ================================|| AUTH3 - LOGIN ||================================ //\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const { isLoggedIn } = useAuth();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '86vh', borderRadius: '24px' }}>\r\n                <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                    <AuthCardWrapper>\r\n                        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                            <Grid item sx={{ my: 1 }}>\r\n                                <Link to=\"#\">\r\n                                    <Logo />\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid\r\n                                    container\r\n                                    direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                    alignItems=\"center\"\r\n                                    justifyContent=\"center\"\r\n                                >\r\n                                    <Grid item>\r\n                                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                            <Typography\r\n                                                color={theme.palette.secondary.main}\r\n                                                gutterBottom\r\n                                                variant={matchDownSM ? 'h3' : 'h2'}\r\n                                            >\r\n                                                Hello\r\n                                            </Typography>\r\n                                            <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : 'inherit'}>\r\n                                                Please Sign In Your Account\r\n                                            </Typography>\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <AuthLogin />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AuthCardWrapper>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}