{"version":3,"sources":["utils/toastify.ts","components/forms/FETextField.tsx","services/tickets-services/index.ts","components/forms/FEDropDown.tsx","ui-component/extended/Form/InputLabel.tsx","views/tickets/components/CreateOrEditTicket.tsx","views/tickets/edit/index.tsx"],"names":["showToast","type","msg","toast","FETextField","formik","title","disabled","name","rest","spacing","sx","color","fontWeight","fullWidth","value","values","onBlur","handleBlur","error","touched","Boolean","errors","helperText","onChange","handleChange","TicketService","downloadTicket","model","axiosServices","post","ids","responseType","deleteTicket","uploadTicket","file","formData","FormData","append","headers","addDescription","data","addAttachment","createTicket","editTicket","ticket_id","assignTo","BaseApiService","FEDropDown","id","defaultValue","map","key","_","toNumber","BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","palette","text","primary","marginBottom","InputLabel","children","others","defaultProps","validationSchema","yup","transaction_type","required","issue_type","sub_issue_type","when","is","then","right_amount","typeError","requested_by","ref_number","transaction_date","transaction_amount","contract_number","wrong_transaction","right_contract_number","right_product_type","requester_national_id","min","max","requester_phone","initialValues","Date","status","description","attachments","BoxStyle","CreateOrEditTicket","onSubmit","onCancel","useFormik","val","useEffect","d","pickBy","keys","includes","setValues","setFieldValue","handleSubmit","isValid","useDropzone","onDrop","files","maxFiles","getRootProps","getInputProps","MainCard","isEmpty","Grid","container","gridSpacing","item","xs","md","transactionType","issueType","subIssueType","requestedBy","Stack","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","maxDate","inputFormat","renderInput","TextField","productTypeRightContractNumberType","multiline","rows","placeholder","padding","backgroundColor","cursor","className","direction","justifyContent","alignItems","Input","Typography","index","style","margin","path","size","IconButton","onClick","dd","filter","it","indexFile","onRemoveItem","display","Button","variant","background","marginX","Box","backgroundImage","borderRadius","EditTicketPage","useParams","navi","useNavigate","mEditTicket","useMutation","ticketsServices","onSuccess","res","console","log","toastify","onError","err","message","qTicketDetail","useQuery","getById","keepPreviousData","forEach","element","has","push","omit","moment","format","mutate"],"mappings":"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","file":"static/js/24.5434ebd6.chunk.js","sourcesContent":["import { toast, TypeOptions } from 'react-toastify';\r\n\r\nconst showToast = (type?: TypeOptions, msg?: string) => {\r\n    toast(msg, {\r\n        type\r\n    });\r\n};\r\n\r\nexport default { showToast };\r\n","import { InputLabel, Stack, TextField } from '@mui/material';\r\n\r\nconst FETextField = ({ formik, title, disabled = false, name = '', ...rest }) => {\r\n    return (\r\n        <Stack spacing={1}>\r\n            <InputLabel sx={{ color: disabled ? '#CCCCCC' : '#4C4C4C', fontWeight: 700 }}>{title}</InputLabel>\r\n            <TextField\r\n                fullWidth\r\n                name={name}\r\n                value={formik.values[name]}\r\n                onBlur={formik.handleBlur}\r\n                error={formik.touched[name] && Boolean(formik.errors[name])}\r\n                helperText={formik.touched[name] && formik.errors[name]}\r\n                onChange={formik.handleChange}\r\n                disabled={disabled}\r\n                {...rest}\r\n            />\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default FETextField;\r\n","import { BaseApiService } from 'services/core/baseApi.service';\r\nimport { AddAttachmentModel, AddDescriptionModel, CreateTicketModel, AssignToModel, EditTicketModel } from 'types/ticket';\r\nimport axiosServices from 'utils/axios';\r\n\r\nclass TicketService extends BaseApiService {\r\n    constructor() {\r\n        super('/v1/tickets');\r\n    }\r\n\r\n    downloadTicket = (model?: number[]) => {\r\n        return axiosServices.post(`/v1/tickets/exportExcel`, { ids: model }, { responseType: 'blob' });\r\n    };\r\n\r\n    deleteTicket = (model?: number[]) => {\r\n        return axiosServices.post(`/v1/tickets/deleteTickets`, { ids: model });\r\n    };\r\n\r\n    uploadTicket = (file?: any) => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        return axiosServices.post('/v1/tickets/import', formData, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n    };\r\n\r\n    addDescription = (data: AddDescriptionModel) => {\r\n        return axiosServices.post('v1/tickets/descriptions', data);\r\n    };\r\n\r\n    addAttachment = (data: AddAttachmentModel[]) => {\r\n        return axiosServices.post('v1/tickets/attachments', data, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n    };\r\n\r\n    createTicket = (data: CreateTicketModel) => {\r\n        return axiosServices.post('v1/tickets', data, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n    };\r\n\r\n    editTicket = (data: EditTicketModel, ticket_id?: string) => {\r\n        return axiosServices.post(`v1/tickets/draft/${ticket_id}`, data, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n    };\r\n\r\n    assignTo = (data: AssignToModel) => {\r\n        return axiosServices.post('v1/tickets/assigneesandsupporters', data);\r\n    };\r\n}\r\n\r\nexport default new TicketService();\r\n","import { FormHelperText, InputLabel, MenuItem, Select, Stack } from '@mui/material';\r\nimport { map } from 'lodash';\r\n\r\ninterface Props {\r\n    formik: any;\r\n    title: string;\r\n    data?: any;\r\n    name?: string;\r\n    disabled?: boolean;\r\n}\r\nconst FEDropDown = ({ formik, title = '', data = {}, name = '', disabled }: Props) => {\r\n    return (\r\n        <Stack spacing={1}>\r\n            <InputLabel sx={{ color: disabled ? '#CCCCCC' : '#4C4C4C', fontWeight: 700 }}>{title}</InputLabel>\r\n            <Select\r\n                id={name}\r\n                name={name}\r\n                defaultValue={formik.values[name]}\r\n                value={formik.values[name] === 0 ? '' : formik.values[name]}\r\n                onChange={formik.handleChange}\r\n                disabled={disabled}\r\n            >\r\n                {map(data, (key, value) => (\r\n                    <MenuItem key={value} value={_.toNumber(value)}>\r\n                        {key}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n            {formik.errors[name] && <FormHelperText error>{formik.errors[name]}</FormHelperText>}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default FEDropDown;\r\n","import { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { InputLabel as MuiInputLabel, InputLabelProps } from '@mui/material';\r\n\r\nconst BInputLabel = styled((props: MUIInputLabelProps) => <MuiInputLabel {...props} />, {\r\n    shouldForwardProp: (prop) => prop !== 'horizontal'\r\n})(({ theme, horizontal }) => ({\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n    marginBottom: horizontal ? 0 : 8\r\n}));\r\n\r\ninterface MUIInputLabelProps extends InputLabelProps {\r\n    horizontal?: boolean;\r\n}\r\n\r\nconst InputLabel = ({ children, horizontal, ...others }: MUIInputLabelProps) => (\r\n    <BInputLabel horizontal={horizontal} {...others}>\r\n        {children}\r\n    </BInputLabel>\r\n);\r\n\r\nInputLabel.defaultProps = {\r\n    horizontal: false\r\n};\r\n\r\nexport default InputLabel;\r\n","import { DatePicker, LocalizationProvider } from '@mui/lab';\r\n// material-ui\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport { Box, Button, Grid, IconButton, Stack, styled, TextField, Typography } from '@mui/material';\r\nimport { IconUpload, IconX } from '@tabler/icons';\r\nimport { issueType, productTypeRightContractNumberType, requestedBy, subIssueType, transactionType } from 'constants/tickets';\r\nimport { useFormik } from 'formik';\r\nimport React, { useEffect } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport InputLabel from 'ui-component/extended/Form/InputLabel';\r\n// third-party\r\nimport * as yup from 'yup';\r\nimport FEDropDown from 'components/forms/FEDropDown';\r\nimport FETextField from 'components/forms/FETextField';\r\n\r\n// yup validation-schema\r\nconst validationSchema = yup.object({\r\n    transaction_type: yup.string().required('Transaction Type is Required'),\r\n    issue_type: yup.string().required('Issue Type is Required'),\r\n    sub_issue_type: yup.number().when('issue_type', { is: 3, then: yup.number().required('Sub Issue Type is Required') }),\r\n    right_amount: yup.string().when('issue_type', {\r\n        is: 2,\r\n        then: yup.number().typeError('Right Amount must be a number').required('Right Amount Number is Required')\r\n    }),\r\n    requested_by: yup.string().required('Requested By is Required'),\r\n    ref_number: yup.string().required('Ref Number is Required'),\r\n    transaction_date: yup.string().required('Transaction Date is Required'),\r\n    transaction_amount: yup.number().typeError('Transaction Amount must be a number').required('Transaction Amount is Required'),\r\n    contract_number: yup.string().required('Contract Number is Required'),\r\n    wrong_transaction: yup.string().required('Wrong Transaction is Required'),\r\n    right_contract_number: yup.string().required('Right Contract Number is Required'),\r\n    right_product_type: yup.number().when('issue_type', { is: 3, then: yup.number().required('Right Product Type is Required') }),\r\n    requester_national_id: yup\r\n        .string()\r\n        .min(12, \"Requested's Nation ID should be of minimum 12 characters\")\r\n        .max(12, \"Requested's Nation ID should be of minimum 12 characters\")\r\n        .required(\"Requested's Nation ID is Required\")\r\n        .typeError(\"Requested's Nation ID must be a number\"),\r\n    requester_phone: yup\r\n        .string()\r\n        .min(10, 'Phone number should be of minimum 10 characters')\r\n        .max(10, 'Phone number should be of minimum 10 characters')\r\n        .required(\"Requester's Phone Number is Required\")\r\n        .typeError(\"Requester's Phone Number must be a number\")\r\n});\r\n\r\n// ==============================|| CREATE TICKET ||============================== //\r\n\r\ninterface Props {\r\n    onSubmit: (values: any) => void;\r\n    onCancel?: () => void;\r\n    data?: any;\r\n}\r\n\r\nexport const initialValues = {\r\n    transaction_type: 1,\r\n    issue_type: 1,\r\n    sub_issue_type: 0,\r\n    requested_by: 1,\r\n    ref_number: '',\r\n    transaction_date: new Date(),\r\n    transaction_amount: '',\r\n    contract_number: '',\r\n    wrong_transaction: '',\r\n    right_contract_number: '',\r\n    right_amount: '',\r\n    right_product_type: 0,\r\n    requester_national_id: '',\r\n    requester_phone: '',\r\n    status: null,\r\n    description: '',\r\n    attachments: []\r\n};\r\n\r\nconst CreateOrEditTicket = ({ onSubmit, onCancel, data }: Props) => {\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit: (val) => onSubmit(val)\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            const d: any = _.pickBy(data, (key, value) => _.keys(initialValues).includes(value));\r\n            formik.setValues(d);\r\n        }\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        if (formik.values.issue_type !== 3) {\r\n            formik.setFieldValue('sub_issue_type', 0);\r\n            formik.setFieldValue('right_product_type', 0);\r\n        }\r\n        if (formik.values.issue_type !== 2) {\r\n            formik.setFieldValue('right_amount', '');\r\n        }\r\n    }, [formik.values.issue_type]);\r\n\r\n    const handleSubmit = ({ status }) => {\r\n        if (!formik.isValid) return;\r\n        formik.setFieldValue('status', status);\r\n    };\r\n\r\n    const onDropFile = (files: any) => {\r\n        formik.setFieldValue('attachments', [...files, ...formik.values.attachments]);\r\n    };\r\n\r\n    const onRemoveItem = (index) => {\r\n        const dd = formik.values.attachments.filter((it: any, indexFile: number) => indexFile !== index);\r\n        formik.setFieldValue('attachments', dd);\r\n    };\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({ onDrop: onDropFile, maxFiles: 5 });\r\n\r\n    return (\r\n        <MainCard title={_.isEmpty(data) ? 'Create Ticket' : 'Edit Ticket'}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FEDropDown name=\"transaction_type\" formik={formik} title=\"Transaction Type\" data={transactionType} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FEDropDown name=\"issue_type\" formik={formik} title=\"Issue Type\" data={issueType} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FEDropDown\r\n                            disabled={formik.values.issue_type !== 3}\r\n                            name=\"sub_issue_type\"\r\n                            formik={formik}\r\n                            title=\"Sub Issue Type\"\r\n                            data={subIssueType}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FEDropDown name=\"requested_by\" formik={formik} title=\"Requested By\" data={requestedBy} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"REF Number\" name=\"ref_number\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <Stack>\r\n                            <InputLabel sx={{ color: '#4C4C4C', fontWeight: 'bold' }}>Transaction Date</InputLabel>\r\n                            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <DatePicker\r\n                                    maxDate={new Date()}\r\n                                    inputFormat=\"dd/MM/yyyy\"\r\n                                    renderInput={(props) => <TextField fullWidth {...props} />}\r\n                                    value={formik.values.transaction_date}\r\n                                    onChange={(val) => formik.setFieldValue('transaction_date', val)}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </Stack>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Transaction Amount\" name=\"transaction_amount\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Contract Number\" name=\"contract_number\" />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Product Type of Wrong Transaction\" name=\"wrong_transaction\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Right Contract Number\" name=\"right_contract_number\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Right Amount\" name=\"right_amount\" disabled={formik.values.issue_type !== 2} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FEDropDown\r\n                            disabled={formik.values.issue_type !== 3}\r\n                            name=\"right_product_type\"\r\n                            formik={formik}\r\n                            title=\"Product Type of Right Contract #\"\r\n                            data={productTypeRightContractNumberType}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Requester's National ID\" name=\"requester_national_id\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Requester's Phone Number\" name=\"requester_phone\" />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <FETextField\r\n                            formik={formik}\r\n                            title=\"Description\"\r\n                            multiline\r\n                            rows={4}\r\n                            placeholder=\"Enter Description\"\r\n                            name=\"description\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <BoxStyle\r\n                            sx={{ padding: 3, backgroundColor: 'rgba(39, 174, 96, .15)', cursor: 'pointer' }}\r\n                            {...getRootProps({ className: 'dropzone' })}\r\n                        >\r\n                            <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={1}>\r\n                                <Input id=\"contained-button-file\" {...getInputProps()} />\r\n                                <IconUpload />\r\n                                <Typography>Browse or Drop file here</Typography>\r\n                            </Stack>\r\n                        </BoxStyle>\r\n                        {formik.values.attachments?.map((file: any, index: number) => (\r\n                            <Stack key={index} direction=\"row\" alignItems=\"center\">\r\n                                <li style={{ margin: '8px 4px' }}>\r\n                                    {file.path || file.name} - {file.size} bytes\r\n                                </li>\r\n                                <IconButton onClick={() => onRemoveItem(index)}>\r\n                                    <IconX />\r\n                                </IconButton>\r\n                            </Stack>\r\n                        ))}\r\n                    </Grid>\r\n\r\n                    <Grid item sx={{ display: 'flex', justifyContent: 'flex-end' }} xs={12}>\r\n                        <Button variant=\"contained\" sx={{ background: '#999999' }} onClick={onCancel}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            sx={{ marginX: 1, background: '#2F80ED' }}\r\n                            type=\"submit\"\r\n                            onClick={() => handleSubmit({ status: 0 })}\r\n                        >\r\n                            Save as Draft\r\n                        </Button>\r\n                        <Button\r\n                            sx={{ background: '#27AE60' }}\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            onClick={() => handleSubmit({ status: 1 })}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default CreateOrEditTicket;\r\n\r\nconst BoxStyle = styled(Box)({\r\n    backgroundImage: `url(\r\n        \"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='14' ry='14' stroke='%23CCCCCCFF' stroke-width='4' stroke-dasharray='6%2c 14' stroke-dashoffset='0' stroke-linecap='round'/%3e%3c/svg%3e\"\r\n        )`,\r\n    borderRadius: 14\r\n});\r\n\r\nconst Input = styled('input')({\r\n    display: 'none'\r\n});\r\n","import { useMutation, useQuery } from 'react-query';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport ticketsServices from 'services/tickets-services';\r\nimport { CreateTicketModel } from 'types/ticket';\r\nimport toastify from 'utils/toastify';\r\nimport CreateOrEditTicket from '../components/CreateOrEditTicket';\r\n\r\nconst EditTicketPage = () => {\r\n    const { ticket_id } = useParams();\r\n    const navi = useNavigate();\r\n\r\n    const mEditTicket = useMutation((data: CreateTicketModel) => ticketsServices.editTicket(data, ticket_id), {\r\n        onSuccess: (res) => {\r\n            console.log(res);\r\n            toastify.showToast('success', 'Upload Success!');\r\n            navi(-1);\r\n        },\r\n        onError: (err: any) => {\r\n            toastify.showToast('error', err.message);\r\n        }\r\n    });\r\n\r\n    const onSubmit = (values: any) => {\r\n        const { attachments } = values;\r\n        const formData: any = new FormData();\r\n\r\n        const dd: any = [];\r\n\r\n        attachments.forEach((element: any) => {\r\n            if (_.has(element, 'id')) {\r\n                dd.push(element.id);\r\n            } else {\r\n                formData.append(`attachments[]`, element);\r\n            }\r\n        });\r\n        formData.append(`attachmentIds[]`, dd);\r\n\r\n        _.forEach(_.omit(values, 'attachments'), (item, key) => {\r\n            return formData.append(`${key}`, key === 'transaction_date' ? moment(item).format('DD/MM/YYYY') : item);\r\n        });\r\n\r\n        // BE require\r\n        formData.append(`action`, 0);\r\n\r\n        mEditTicket.mutate(formData);\r\n    };\r\n\r\n    const qTicketDetail = useQuery(`qTicketDetail_${ticket_id}`, () => ticketsServices.getById(ticket_id), { keepPreviousData: false });\r\n\r\n    return <CreateOrEditTicket onSubmit={onSubmit} onCancel={() => navi(-1)} data={qTicketDetail.data?.data?.data} />;\r\n};\r\n\r\nexport default EditTicketPage;\r\n"],"sourceRoot":""}