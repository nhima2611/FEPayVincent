{"version":3,"sources":["../node_modules/events/events.js","../node_modules/react-table/index.js","../node_modules/@mui/icons-material/ArrowDropDown.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js","../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../node_modules/@mui/material/TablePagination/TablePagination.js"],"names":["ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","module","exports","once","emitter","name","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","push","length","warned","w","Error","String","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","Array","i","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","require","_interopRequireDefault","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","actions","defaultRenderer","emptyRenderer","React","defaultColumn","Cell","width","minWidth","maxWidth","MAX_SAFE_INTEGER","mergeProps","propList","reduce","props","next","style","className","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","isArray","reduceHooks","initial","allowUndefined","loopHooks","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","Comp","info","flexRender","component","proto","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","flattenDeep","newArr","replace","join","reOpenBracket","reCloseBracket","cursor","pathPart","e","row","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","isFunction","a","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","hiddenColumns","onChange","toggleHidden","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","rowA","rowB","aa","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","touch","cancelable","preventDefault","stopPropagation","passiveIfSupported","supported","options","window","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","s","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","_LastPageIcon","_FirstPageIcon","_KeyboardArrowRight","_KeyboardArrowLeft","_KeyboardArrowLeft2","_KeyboardArrowRight2","_FirstPageIcon2","_LastPageIcon2","_excluded","TablePaginationActions","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","onPageChange","rowsPerPage","showFirstButton","showLastButton","other","_objectWithoutPropertiesLoose","theme","useTheme","_jsxs","_extends","children","_jsx","IconButton","event","disabled","direction","LastPageIcon","FirstPageIcon","color","KeyboardArrowRight","KeyboardArrowLeft","getTablePaginationUtilityClass","slot","generateUtilityClass","_InputBase","tablePaginationClasses","generateUtilityClasses","TablePaginationRoot","styled","TableCell","overridesResolver","styles","root","overflow","palette","primary","fontSize","typography","pxToRem","padding","TablePaginationToolbar","Toolbar","toolbar","minHeight","paddingRight","breakpoints","up","flexShrink","marginLeft","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","body2","TablePaginationSelect","Select","selectIcon","select","input","selectRoot","marginRight","paddingLeft","textAlign","textAlignLast","TablePaginationMenuItem","MenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","to","defaultGetAriaLabel","TablePagination","inProps","useThemeProps","ActionsComponent","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","ownerState","classes","composeClasses","useUtilityClasses","MenuItemComponent","native","selectId","useId","labelId","as","clsx","variant","InputBase","icon","rowsPerPageOption","_createElement","isHostComponent","label"],"mappings":"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","file":"static/js/5.2ac13e25.chunk.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 10 5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _LastPageIcon, _FirstPageIcon, _KeyboardArrowRight, _KeyboardArrowLeft, _KeyboardArrowLeft2, _KeyboardArrowRight2, _FirstPageIcon2, _LastPageIcon2;\n\nconst _excluded = [\"backIconButtonProps\", \"count\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      children: theme.direction === 'rtl' ? _LastPageIcon || (_LastPageIcon = /*#__PURE__*/_jsx(LastPageIcon, {})) : _FirstPageIcon || (_FirstPageIcon = /*#__PURE__*/_jsx(FirstPageIcon, {}))\n    }), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, backIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {}))\n    })), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleNextButtonClick,\n      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = /*#__PURE__*/_jsx(KeyboardArrowLeft, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {}))\n    })), showLastButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      children: theme.direction === 'rtl' ? _FirstPageIcon2 || (_FirstPageIcon2 = /*#__PURE__*/_jsx(FirstPageIcon, {})) : _LastPageIcon2 || (_LastPageIcon2 = /*#__PURE__*/_jsx(LastPageIcon, {}))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired\n} : void 0;\nexport default TablePaginationActions;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _InputBase;\n\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: theme.palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\n\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\n\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n\n  const {\n    ActionsComponent = TablePaginationActions,\n    backIconButtonProps,\n    className,\n    colSpan: colSpanProp,\n    component = TableCell,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelRowsPerPage = 'Rows per page:',\n    nextIconButtonProps,\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    SelectProps = {},\n    showFirstButton = false,\n    showLastButton = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const MenuItemComponent = SelectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const selectId = useId(SelectProps.id);\n  const labelId = useId(SelectProps.labelId);\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\",\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {})),\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, SelectProps, {\n        classes: _extends({}, SelectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (SelectProps.classes || {}).root),\n          select: clsx(classes.select, (SelectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (SelectProps.classes || {}).icon)\n        }),\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        getItemAriaLabel: getItemAriaLabel\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;"],"sourceRoot":""}