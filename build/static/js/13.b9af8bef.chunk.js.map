{"version":3,"sources":["hooks/useScriptRef.ts","views/pages/authentication/AuthCardWrapper.tsx","views/pages/authentication/AuthWrapper1.tsx","ui-component/cards/AuthFooter.tsx","views/pages/authentication/auth-forms/AuthForgotPassword.tsx","views/pages/authentication/authentication3/ForgotPassword3.tsx"],"names":["useScriptRef","scripted","useRef","useEffect","current","AuthCardWrapper","children","other","boxShadow","shadow","sx","border","borderRadius","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","theme","backgroundImage","backgroundSize","minHeight","AuthFooter","direction","justifyContent","variant","component","Link","href","target","underline","AuthForgotPassword","others","useTheme","scriptedRef","dispatch","useDispatch","navigate","useNavigate","resetPassword","useAuth","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","success","openSnackbar","open","message","alert","color","close","setTimeout","replace","console","error","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","label","inputProps","FormHelperText","Box","mt","AnimateButton","Button","disableElevation","disabled","size","ForgotPassword","isLoggedIn","matchDownSM","useMediaQuery","breakpoints","down","Grid","container","item","alignItems","m","mb","spacing","to","Logo","textAlign","Typography","palette","secondary","main","gutterBottom","fontSize","Divider","textDecoration"],"mappings":"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","file":"static/js/13.b9af8bef.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// material-ui\r\nimport { Box } from '@mui/material';\r\n// project import\r\nimport MainCard, { MainCardProps } from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => (\r\n    <MainCard\r\n        boxShadow\r\n        shadow=\"0px 4px 16px rgba(0, 0, 0, 0.25)\"\r\n        sx={{\r\n            boxShadow: '0px 4px 16px rgba(0, 0, 0, 0.25)',\r\n            border: '1px solid #CCCCCC',\r\n            borderRadius: '24px',\r\n            maxWidth: { xs: 400, lg: 384 },\r\n            margin: { xs: 1.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    // backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    backgroundImage: 'url(images/img_bg_login.png)',\r\n    backgroundSize: 'cover',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\r\n            {/* berrydashboard.io */}\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\r\n            {/* &copy; codedthemes.com */}\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormControl, FormHelperText, InputLabel, OutlinedInput } from '@mui/material';\r\nimport { useDispatch } from 'store';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport { openSnackbar } from 'store/slices/snackbar';\r\n\r\n// ========================|| FIREBASE - FORGOT PASSWORD ||======================== //\r\n\r\nconst AuthForgotPassword = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const { resetPassword } = useAuth();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                password: '',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\r\n            })}\r\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                try {\r\n                    await resetPassword(values.email);\r\n\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: true });\r\n                        setSubmitting(false);\r\n                        dispatch(\r\n                            openSnackbar({\r\n                                open: true,\r\n                                message: 'Check mail for reset password link',\r\n                                variant: 'alert',\r\n                                alert: {\r\n                                    color: 'success'\r\n                                },\r\n                                close: false\r\n                            })\r\n                        );\r\n                        setTimeout(() => {\r\n                            navigate('/login', { replace: true });\r\n                        }, 1500);\r\n                    }\r\n                } catch (err: any) {\r\n                    console.error(err);\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: false });\r\n                        setErrors({ submit: err.message });\r\n                        setSubmitting(false);\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-email-forgot\">Email Address / Username</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-email-forgot\"\r\n                            type=\"email\"\r\n                            value={values.email}\r\n                            name=\"email\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            label=\"Email Address / Username\"\r\n                            inputProps={{}}\r\n                        />\r\n                        {touched.email && errors.email && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-forgot\">\r\n                                {errors.email}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    {errors.submit && (\r\n                        <Box sx={{ mt: 3 }}>\r\n                            <FormHelperText error>{errors.submit}</FormHelperText>\r\n                        </Box>\r\n                    )}\r\n\r\n                    <Box sx={{ mt: 2 }}>\r\n                        <AnimateButton>\r\n                            <Button\r\n                                disableElevation\r\n                                disabled={isSubmitting}\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                Send Mail\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AuthForgotPassword;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthForgotPassword from '../auth-forms/AuthForgotPassword';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\n// ============================|| AUTH3 - FORGOT PASSWORD ||============================ //\r\n\r\nconst ForgotPassword = () => {\r\n    const theme = useTheme();\r\n    const { isLoggedIn } = useAuth();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"#\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"center\" textAlign=\"center\" spacing={2}>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    color={theme.palette.secondary.main}\r\n                                                    gutterBottom\r\n                                                    variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                >\r\n                                                    Forgot password?\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"caption\" fontSize=\"16px\" textAlign=\"center\">\r\n                                                    Enter your email address below and we&apos;ll send you password reset OTP.\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthForgotPassword />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to={isLoggedIn ? '/pages/login/login3' : '/login'}\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Already have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"sourceRoot":""}