{"version":3,"sources":["services/core/toast.service.ts","ui-component/extended/AnimateButton.tsx","hooks/useScriptRef.ts","views/pages/authentication/AuthCardWrapper.tsx","views/pages/authentication/AuthWrapper.tsx","utils/password-strength.ts","ui-component/cards/AuthFooter.tsx","views/pages/authentication/auth-forms/AuthForgotPassword.tsx","views/pages/authentication/authentication3/ForgotPassword.tsx"],"names":["showConfirm","args","a","Swal","fire","backdrop","title","text","icon","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","onConfirm","isDenied","onDenied","toast","position","background","color","showConfirmButton","timer","timerProgressBar","didOpen","toastr","addEventListener","stopTimer","resumeTimer","showDeleteConfirm","confirmButtonColor","cancelButtonColor","showError","showSuccess","showLoading","showInfo","showWarning","AnimateButton","React","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","useScriptRef","scripted","useRef","useEffect","current","AuthCardWrapper","other","boxShadow","shadow","sx","border","borderRadius","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","theme","backgroundImage","backgroundSize","minHeight","strengthColor","count","label","value","errorMain","warningDark","orangeMain","successMain","successDark","strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","AuthFooter","Stack","justifyContent","Typography","variant","component","Link","href","target","underline","AuthForgotPassword","useTheme","nativation","useNavigate","useState","activeStep","setActiveStep","loading","setLoading","errorAlerts","setErrorAlerts","verify","setVerify","emailState","setEmail","useAuth","resetPassword","forgotPassword","verifyCode","onSubmitStep1","email","res","data","success","toastService","verify_code","Alert","severity","className","message","catch","err","onSubmitStep2","code","prevActiveStep","onSubmitStep3","reSubmitStep1","Stepper","step","onSubmit","renderStep","Step1","initialValues","submit","validationSchema","Yup","shape","max","required","values","setErrors","setStatus","setSubmitting","_","get","errors","handleBlur","handleChange","handleSubmit","touched","isSubmitting","noValidate","FormControl","fullWidth","error","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","name","onBlur","onChange","FormHelperText","Box","mt","LoadingButton","disableElevation","disabled","size","endIcon","loadingPosition","Step2","min","inputProps","maxLength","placeholder","endAdornment","date","Date","now","renderer","minutes","seconds","completed","formatted","Button","onClick","e","cursor","Step3","showPassword","setShowPassword","strength","setStrength","level","setLevel","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","password","confirm_password","oneOf","omit","temp","changePassword","InputAdornment","IconButton","onMouseDown","edge","mb","Grid","container","spacing","alignItems","item","style","backgroundColor","width","height","fontSize","memo","ForgotPassword","isLoggedIn","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper","m","to","Logo","textAlign","palette","primary","main","gutterBottom","Divider","textDecoration"],"mappings":"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","file":"static/js/26.21ef0240.chunk.js","sourcesContent":["import Swal, { SweetAlertIcon, SweetAlertOptions, SweetAlertPosition, SweetAlertResult } from 'sweetalert2';\r\n\r\ninterface SweetAlertConfirm {\r\n    onConfirm: () => Promise<void>;\r\n    onDenied?: () => Promise<void>;\r\n}\r\n\r\nconst toast = (icon: SweetAlertIcon, title: string, position?: SweetAlertPosition): Promise<any> => {\r\n    let background = '#ffffff';\r\n    switch (icon) {\r\n        case 'success':\r\n            background = '#5cb85c';\r\n            break;\r\n\r\n        case 'error':\r\n            background = '#d9534f';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Swal.fire({\r\n        icon,\r\n        title,\r\n        toast: true,\r\n        position: position || 'bottom-end',\r\n        background,\r\n        color: 'white',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        didOpen: (toastr: HTMLElement) => {\r\n            toastr.addEventListener('mouseenter', Swal.stopTimer);\r\n            toastr.addEventListener('mouseleave', Swal.resumeTimer);\r\n        }\r\n    });\r\n};\r\n\r\nconst showSuccess = (args: SweetAlertOptions): Promise<any> => {\r\n    return Swal.fire({\r\n        ...args,\r\n        icon: 'success'\r\n    });\r\n};\r\n\r\nconst showError = (args: SweetAlertOptions): Promise<any> => {\r\n    return Swal.fire({\r\n        ...args,\r\n        icon: 'error'\r\n    });\r\n};\r\n\r\nconst showInfo = (args: SweetAlertOptions): Promise<any> => {\r\n    return Swal.fire({\r\n        ...args,\r\n        icon: 'info'\r\n    });\r\n};\r\n\r\nconst showWarning = (args: SweetAlertOptions): Promise<any> => {\r\n    return Swal.fire({\r\n        ...args,\r\n        icon: 'warning'\r\n    });\r\n};\r\n\r\nconst showConfirm = async (args: SweetAlertOptions & SweetAlertConfirm): Promise<any> => {\r\n    return Swal.fire({\r\n        backdrop: true,\r\n        title: args.title || 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'info',\r\n        showCancelButton: true,\r\n        confirmButtonText: args.confirmButtonText ?? 'Ok',\r\n        denyButtonText: args.denyButtonText ?? 'Cancel'\r\n    }).then((result: SweetAlertResult<any>) => {\r\n        /* Read more about isConfirmed, isDenied below */\r\n        if (result.isConfirmed) {\r\n            return args.onConfirm?.();\r\n        }\r\n        if (result.isDenied) {\r\n            return args.onDenied?.();\r\n        }\r\n        return args.onDenied?.();\r\n    });\r\n};\r\n\r\nconst showDeleteConfirm = (args: SweetAlertOptions & SweetAlertConfirm): Promise<any> => {\r\n    return Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n        /* Read more about isConfirmed, isDenied below */\r\n        if (result.isConfirmed) {\r\n            return args.onConfirm?.();\r\n        }\r\n        if (result.isDenied) {\r\n            return args.onDenied?.();\r\n        }\r\n        return args.onDenied?.();\r\n    });\r\n};\r\n\r\nconst showLoading = () => {\r\n    return Swal.fire({\r\n        title: 'Loading',\r\n        timerProgressBar: true\r\n    });\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    toast,\r\n    showConfirm,\r\n    showDeleteConfirm,\r\n    showError,\r\n    showSuccess,\r\n    showLoading,\r\n    showInfo,\r\n    showWarning\r\n};\r\n","import React, { Ref } from 'react';\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\ninterface ScaleProps {\r\n    hover: number | string | undefined;\r\n    tap: number | string | undefined;\r\n}\r\n\r\ninterface AnimateButtonProps {\r\n    children?: React.ReactNode;\r\n    type?: 'slide' | 'scale' | 'rotate';\r\n    direction?: 'up' | 'down' | 'left' | 'right';\r\n    offset?: number;\r\n    scale?: ScaleProps;\r\n}\r\n\r\n// ==============================|| ANIMATION BUTTON ||============================== //\r\n\r\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }: AnimateButtonProps, ref: Ref<HTMLDivElement>) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'down':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ y: y !== undefined ? y : '' }}\r\n                        onHoverEnd={() => cycleY()}\r\n                        onHoverStart={() => cycleY()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n            return (\r\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// material-ui\r\nimport { Box } from '@mui/material';\r\n// project import\r\nimport MainCard, { MainCardProps } from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => (\r\n    <MainCard\r\n        boxShadow\r\n        shadow=\"0px 4px 16px rgba(0, 0, 0, 0.25)\"\r\n        sx={{\r\n            boxShadow: '0px 4px 16px rgba(0, 0, 0, 0.25)',\r\n            border: '1px solid #CCCCCC',\r\n            borderRadius: '24px',\r\n            maxWidth: { xs: 450, lg: 420 },\r\n            margin: { xs: 1.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    // backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    backgroundImage: 'url(images/img_bg_login.png)',\r\n    backgroundSize: 'cover',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","/**\r\n * Password validator for login pages\r\n */\r\nimport { NumbColorFunc, StringBoolFunc, StringNumFunc } from 'types';\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber: StringBoolFunc = (number) => new RegExp(/[0-9]/).test(number);\r\n\r\n// has mix of small and capitals\r\nconst hasMixed: StringBoolFunc = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\r\n\r\n// has special chars\r\nconst hasSpecial: StringBoolFunc = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\r\n\r\n// set color based on password strength\r\nexport const strengthColor: NumbColorFunc = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n    return { label: 'Poor', color: value.errorMain };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator: StringNumFunc = (number) => {\r\n    let strengths = 0;\r\n    if (number.length > 5) strengths += 1;\r\n    if (number.length > 7) strengths += 1;\r\n    if (hasNumber(number)) strengths += 1;\r\n    if (hasSpecial(number)) strengths += 1;\r\n    if (hasMixed(number)) strengths += 1;\r\n    return strengths;\r\n};\r\n","// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\r\n            {/* berrydashboard.io */}\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\r\n            {/* &copy; codedthemes.com */}\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","// material-ui\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport {\r\n    Alert,\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    Link,\r\n    OutlinedInput,\r\n    Stepper,\r\n    Typography\r\n} from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/system';\r\nimport { Formik } from 'formik';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport React, { useState } from 'react';\r\nimport Countdown from 'react-countdown';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toastService from 'services/core/toast.service';\r\nimport Swal from 'sweetalert2';\r\nimport { StringColorProps } from 'types';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\r\nimport * as Yup from 'yup';\r\n\r\n// ========================|| FORGOT PASSWORD ||======================== //\r\n\r\nconst AuthForgotPassword = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const nativation = useNavigate();\r\n\r\n    const [activeStep, setActiveStep] = useState<number>(0);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [errorAlerts, setErrorAlerts] = useState<any>(null);\r\n    const [verify, setVerify] = useState<number>(0);\r\n    const [emailState, setEmail] = useState<string>('');\r\n\r\n    const { resetPassword, forgotPassword, verifyCode } = useAuth();\r\n    const onSubmitStep1 = (email: string) => {\r\n        setLoading(true);\r\n        setErrorAlerts(null);\r\n        try {\r\n            forgotPassword(email)\r\n                .then((res) => {\r\n                    setLoading(false);\r\n                    if (!res.data.success) {\r\n                        setErrorAlerts(\r\n                            <Alert severity=\"error\" className=\"mb-4\">\r\n                                {res.data.message} !\r\n                            </Alert>\r\n                        );\r\n                    } else {\r\n                        toastService.toast('success', 'Check mail for verify code', 'top');\r\n                        setVerify(res.data.verify_code);\r\n                        setEmail(email);\r\n                        if (activeStep !== 1) {\r\n                            setActiveStep(1);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    setLoading(false);\r\n                    setErrorAlerts(\r\n                        <Alert severity=\"error\" className=\"mb-4\">\r\n                            {err.data.message} !\r\n                        </Alert>\r\n                    );\r\n                });\r\n        } catch (err: any) {\r\n            setLoading(false);\r\n            setErrorAlerts(\r\n                <Alert severity=\"error\" className=\"mb-4\">\r\n                    {err.message} !\r\n                </Alert>\r\n            );\r\n        }\r\n    };\r\n    const onSubmitStep2 = (code: number) => {\r\n        setLoading(true);\r\n        setErrorAlerts(null);\r\n        try {\r\n            verifyCode({ email: emailState, verify_code: code })\r\n                .then((res) => {\r\n                    setLoading(false);\r\n                    if (!res.data.success) {\r\n                        setErrorAlerts(\r\n                            <Alert severity=\"error\" className=\"mb-4\">\r\n                                {res.data.message} !\r\n                            </Alert>\r\n                        );\r\n                    } else {\r\n                        toastService.toast('success', res.data.message, 'top');\r\n                        setVerify(code);\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    setLoading(false);\r\n                    setErrorAlerts(\r\n                        <Alert severity=\"error\" className=\"mb-4\">\r\n                            {err.message} !\r\n                        </Alert>\r\n                    );\r\n                });\r\n        } catch (err: any) {\r\n            setLoading(false);\r\n            setErrorAlerts(\r\n                <Alert severity=\"error\" className=\"mb-4\">\r\n                    {err.message} !\r\n                </Alert>\r\n            );\r\n        }\r\n    };\r\n    const onSubmitStep3 = (data: { password: string; confirm_password: string }) => {\r\n        setLoading(true);\r\n        setErrorAlerts(null);\r\n        try {\r\n            resetPassword({ ...data, verify_code: verify, email: emailState })\r\n                .then((res) => {\r\n                    setLoading(false);\r\n                    if (!res.data.success) {\r\n                        setErrorAlerts(\r\n                            <Alert severity=\"error\" className=\"mb-4\">\r\n                                {res.message} !\r\n                            </Alert>\r\n                        );\r\n                    } else {\r\n                        toastService\r\n                            .showSuccess({\r\n                                toast: false,\r\n                                showConfirmButton: false,\r\n                                timer: 3000,\r\n                                timerProgressBar: true,\r\n                                icon: 'success',\r\n                                title: 'Successfully',\r\n                                text: res.data.message,\r\n                                didOpen: (toast) => {\r\n                                    toast.addEventListener('mouseenter', Swal.stopTimer);\r\n                                    toast.addEventListener('mouseleave', Swal.resumeTimer);\r\n                                }\r\n                            })\r\n                            .then((value) => {\r\n                                nativation(`/login`);\r\n                            });\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    setLoading(false);\r\n                    setErrorAlerts(\r\n                        <Alert severity=\"error\" className=\"mb-4\">\r\n                            {err.message} !\r\n                        </Alert>\r\n                    );\r\n                });\r\n        } catch (err: any) {\r\n            setLoading(false);\r\n            setErrorAlerts(\r\n                <Alert severity=\"error\" className=\"mb-4\">\r\n                    {err.message} !\r\n                </Alert>\r\n            );\r\n        }\r\n    };\r\n    const reSubmitStep1 = () => onSubmitStep1(emailState);\r\n\r\n    const renderStep = (step: number) => {\r\n        switch (step) {\r\n            case 0:\r\n                return <Step1 loading={loading} onSubmit={onSubmitStep1} />;\r\n            case 1:\r\n                return <Step2 loading={loading} onSubmit={onSubmitStep2} reSubmitStep1={reSubmitStep1} />;\r\n            case 2:\r\n                return <Step3 loading={loading} onSubmit={onSubmitStep3} />;\r\n            default:\r\n                return <></>;\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {errorAlerts}\r\n            <Stepper activeStep={activeStep} />\r\n            <>{renderStep(activeStep)}</>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Step1 = ({ onSubmit, loading }: { onSubmit: (res) => void; loading: boolean }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\r\n            })}\r\n            onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\r\n                onSubmit(_.get(values, 'email'));\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit}>\r\n                    <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-email-forgot\">Email Address / Username</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-email-forgot\"\r\n                            type=\"email\"\r\n                            value={values.email}\r\n                            name=\"email\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            label=\"Email Address / Username\"\r\n                        />\r\n                        {touched.email && errors.email && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-forgot\">\r\n                                {errors.email}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    <Box sx={{ mt: 2 }}>\r\n                        <AnimateButton>\r\n                            <LoadingButton\r\n                                disableElevation\r\n                                disabled={loading}\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                endIcon={<ArrowForwardIcon />}\r\n                                loading={loading}\r\n                                loadingPosition=\"end\"\r\n                            >\r\n                                Send Mail\r\n                            </LoadingButton>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nconst Step2 = ({ onSubmit, loading, reSubmitStep1 }: { onSubmit: (res) => void; loading: boolean; reSubmitStep1: () => void }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                verify: '',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                verify: Yup.string()\r\n                    .required('Verify code is required')\r\n                    .max(5, 'Verify code must be at most 5 characters')\r\n                    .min(5, 'Verify code must be at most 5 characters')\r\n                    .length(5, 'Verify code must be at most 5 characters')\r\n            })}\r\n            onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\r\n                onSubmit(_.get(values, 'verify'));\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit}>\r\n                    <FormControl fullWidth error={Boolean(touched.verify && errors.verify)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-verify-forgot\">Verify Code</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-verify-forgot\"\r\n                            type=\"text\"\r\n                            value={values.verify}\r\n                            name=\"verify\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            label=\"Verify Code\"\r\n                            inputProps={{ maxLength: 5 }}\r\n                            placeholder=\"xxxxx\"\r\n                            endAdornment={\r\n                                <Countdown\r\n                                    date={Date.now() + 60000 * 5}\r\n                                    renderer={({ minutes, seconds, completed, formatted }) => (\r\n                                        <>\r\n                                            {!Boolean(loading) && (\r\n                                                <div>\r\n                                                    {/* {zeroPad(minutes)}:{zeroPad(seconds) */}\r\n                                                    {Boolean(completed) ? (\r\n                                                        <Button onClick={(e) => reSubmitStep1()}>\r\n                                                            {' '}\r\n                                                            <ReplayIcon /> Resend\r\n                                                        </Button>\r\n                                                    ) : (\r\n                                                        `${formatted.minutes}:${formatted.seconds}`\r\n                                                    )}\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                />\r\n                            }\r\n                        />\r\n                        {touched.verify && errors.verify && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-verify-forgot\">\r\n                                {errors.verify}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n                    <FormHelperText>\r\n                        Email didn&apos;t arrive.{' '}\r\n                        <Link onClick={(e) => reSubmitStep1()} color=\"secondary\" sx={{ cursor: 'pointer' }}>\r\n                            Resend!\r\n                        </Link>\r\n                    </FormHelperText>\r\n                    <Box sx={{ mt: 2 }}>\r\n                        <AnimateButton>\r\n                            <LoadingButton\r\n                                disableElevation\r\n                                disabled={loading}\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                endIcon={<ArrowForwardIcon />}\r\n                                loading={loading}\r\n                                loadingPosition=\"end\"\r\n                            >\r\n                                Next\r\n                            </LoadingButton>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nconst Step3 = ({ onSubmit, loading }: { onSubmit: (res) => void; loading: boolean }) => {\r\n    const theme = useTheme();\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n    const [strength, setStrength] = React.useState(0);\r\n    const [level, setLevel] = React.useState<StringColorProps>();\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value: string) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                password: '',\r\n                confirm_password: '',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                password: Yup.string().max(255).required('Password is required'),\r\n                confirm_password: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n            })}\r\n            onSubmit={(values) => {\r\n                onSubmit(_.omit(values, 'submit'));\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit}>\r\n                    <FormControl fullWidth error={Boolean(touched.password && errors.password)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-password-register\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            onBlur={handleBlur}\r\n                            onChange={(e) => {\r\n                                handleChange(e);\r\n                                changePassword(e.target.value);\r\n                            }}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                        size=\"large\"\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            inputProps={{}}\r\n                        />\r\n                        {touched.password && errors.password && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                {errors.password}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n                    {strength !== 0 && (\r\n                        <FormControl fullWidth>\r\n                            <Box sx={{ mb: 2 }}>\r\n                                <Grid container spacing={2} alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Box style={{ backgroundColor: level?.color }} sx={{ width: 85, height: 8, borderRadius: '7px' }} />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                            {level?.label}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </FormControl>\r\n                    )}\r\n                    <FormControl\r\n                        fullWidth\r\n                        error={Boolean(touched.confirm_password && errors.confirm_password)}\r\n                        sx={{ ...theme.typography.customInput }}\r\n                    >\r\n                        <InputLabel htmlFor=\"outlined-adornment-confirm_password-register\">Confirm Password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-confirm_password-register\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={values.confirm_password}\r\n                            name=\"confirm_password\"\r\n                            label=\"Confirm Password\"\r\n                            onBlur={handleBlur}\r\n                            onChange={(e) => {\r\n                                handleChange(e);\r\n                                // changePassword(e.target.value);\r\n                            }}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle confirm_password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                        size=\"large\"\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            inputProps={{}}\r\n                        />\r\n                        {touched.confirm_password && errors.confirm_password && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-confirm_password-register\">\r\n                                {errors.confirm_password}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    <Box sx={{ mt: 2 }}>\r\n                        <AnimateButton>\r\n                            <LoadingButton\r\n                                disableElevation\r\n                                disabled={loading}\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                loading={loading}\r\n                                loadingPosition=\"end\"\r\n                            >\r\n                                Submit\r\n                            </LoadingButton>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default React.memo(AuthForgotPassword);\r\n","import { Divider, Grid, Typography, useMediaQuery } from '@mui/material';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthForgotPassword from '../auth-forms/AuthForgotPassword';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\n// project imports\r\nimport AuthWrapper from '../AuthWrapper';\r\n\r\n// ============================|| AUTH3 - FORGOT PASSWORD ||============================ //\r\n\r\nconst ForgotPassword = () => {\r\n    const theme = useTheme();\r\n    const { isLoggedIn } = useAuth();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"#\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"center\" textAlign=\"center\" spacing={2}>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    color={theme.palette.primary.main}\r\n                                                    gutterBottom\r\n                                                    variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                >\r\n                                                    Forgot password?\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"caption\" fontSize=\"16px\" textAlign=\"center\">\r\n                                                    Enter your email address below and we&apos;ll send verify code to reset password.\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthForgotPassword />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to={isLoggedIn ? '/pages/login/login3' : '/login'}\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                                color=\"secondary\"\r\n                                            >\r\n                                                Already have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"sourceRoot":""}