{"version":3,"sources":["services/core/toast.service.ts","ui-component/extended/AnimateButton.tsx","hooks/useScriptRef.ts","views/pages/authentication/AuthCardWrapper.tsx","views/pages/authentication/AuthWrapper.tsx","views/pages/authentication/auth-forms/AuthLogin.tsx","views/pages/authentication/authentication3/Login.tsx"],"names":["showConfirm","args","a","Swal","fire","backdrop","title","text","icon","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","onConfirm","isDenied","onDenied","toast","position","background","color","showConfirmButton","timer","timerProgressBar","didOpen","toastr","addEventListener","stopTimer","resumeTimer","showDeleteConfirm","confirmButtonColor","cancelButtonColor","showError","showSuccess","showLoading","showInfo","showWarning","AnimateButton","React","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","useScriptRef","scripted","useRef","useEffect","current","AuthCardWrapper","other","boxShadow","shadow","sx","border","borderRadius","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","theme","backgroundImage","backgroundSize","minHeight","recaptchaRef","createRef","AuthLogin","loginProp","others","useTheme","intl","useIntl","scriptedRef","useMediaQuery","breakpoints","down","useConfig","useState","checked","setChecked","login","useAuth","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","initialValues","email","password","token","submit","validationSchema","Yup","shape","max","required","nullable","onSubmit","values","setErrors","setStatus","setSubmitting","setFieldValue","reset","res","catch","err","console","log","error","toastService","formatMessage","id","_","get","sub_message","replace","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","setValues","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","IconButton","onClick","onMouseDown","edge","size","Stack","alignItems","justifyContent","spacing","FormControlLabel","control","Checkbox","target","Typography","variant","component","Link","to","textDecoration","Box","mt","onExpired","sitekey","process","style","display","my","Button","disabled","Login","matchDownSM","isLoggedIn","AuthWrapper","Grid","container","item","m","mb","Logo","palette","primary","main","gutterBottom","fontSize","textAlign"],"mappings":"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","file":"static/js/26.a852f919.chunk.js","sourcesContent":["import Swal, { SweetAlertIcon, SweetAlertOptions, SweetAlertPosition, SweetAlertResult } from 'sweetalert2';\n\ninterface SweetAlertConfirm {\n    onConfirm: () => Promise<void>;\n    onDenied?: () => Promise<void>;\n}\n\nconst toast = (icon: SweetAlertIcon, title: string, position?: SweetAlertPosition): Promise<any> => {\n    let background = '#ffffff';\n    switch (icon) {\n        case 'success':\n            background = '#5cb85c';\n            break;\n\n        case 'error':\n            background = '#d9534f';\n            break;\n        default:\n            break;\n    }\n    return Swal.fire({\n        icon,\n        title,\n        toast: true,\n        position: position || 'bottom-end',\n        background,\n        color: 'white',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: (toastr: HTMLElement) => {\n            toastr.addEventListener('mouseenter', Swal.stopTimer);\n            toastr.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n    });\n};\n\nconst showSuccess = (args: SweetAlertOptions): Promise<any> => {\n    return Swal.fire({\n        ...args,\n        icon: 'success'\n    });\n};\n\nconst showError = (args: SweetAlertOptions): Promise<any> => {\n    return Swal.fire({\n        ...args,\n        icon: 'error'\n    });\n};\n\nconst showInfo = (args: SweetAlertOptions): Promise<any> => {\n    return Swal.fire({\n        ...args,\n        icon: 'info'\n    });\n};\n\nconst showWarning = (args: SweetAlertOptions): Promise<any> => {\n    return Swal.fire({\n        ...args,\n        icon: 'warning'\n    });\n};\n\nconst showConfirm = async (args: SweetAlertOptions & SweetAlertConfirm): Promise<any> => {\n    return Swal.fire({\n        backdrop: true,\n        title: args.title || 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'info',\n        showCancelButton: true,\n        confirmButtonText: args.confirmButtonText ?? 'Ok',\n        denyButtonText: args.denyButtonText ?? 'Cancel'\n    }).then((result: SweetAlertResult<any>) => {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n            return args.onConfirm?.();\n        }\n        if (result.isDenied) {\n            return args.onDenied?.();\n        }\n        return args.onDenied?.();\n    });\n};\n\nconst showDeleteConfirm = (args: SweetAlertOptions & SweetAlertConfirm): Promise<any> => {\n    return Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n            return args.onConfirm?.();\n        }\n        if (result.isDenied) {\n            return args.onDenied?.();\n        }\n        return args.onDenied?.();\n    });\n};\n\nconst showLoading = () => {\n    return Swal.fire({\n        title: 'Loading',\n        timerProgressBar: true\n    });\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    toast,\n    showConfirm,\n    showDeleteConfirm,\n    showError,\n    showSuccess,\n    showLoading,\n    showInfo,\n    showWarning\n};\n","import React, { Ref } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\ninterface ScaleProps {\n    hover: number | string | undefined;\n    tap: number | string | undefined;\n}\n\ninterface AnimateButtonProps {\n    children?: React.ReactNode;\n    type?: 'slide' | 'scale' | 'rotate';\n    direction?: 'up' | 'down' | 'left' | 'right';\n    offset?: number;\n    scale?: ScaleProps;\n}\n\n// ==============================|| ANIMATION BUTTON ||============================== //\n\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }: AnimateButtonProps, ref: Ref<HTMLDivElement>) => {\n    let offset1;\n    let offset2;\n    switch (direction) {\n        case 'up':\n        case 'left':\n            offset1 = offset;\n            offset2 = 0;\n            break;\n        case 'right':\n        case 'down':\n        default:\n            offset1 = 0;\n            offset2 = offset;\n            break;\n    }\n\n    const [x, cycleX] = useCycle(offset1, offset2);\n    const [y, cycleY] = useCycle(offset1, offset2);\n\n    switch (type) {\n        case 'rotate':\n            return (\n                <motion.div\n                    ref={ref}\n                    animate={{ rotate: 360 }}\n                    transition={{\n                        repeat: Infinity,\n                        repeatType: 'loop',\n                        duration: 2,\n                        repeatDelay: 0\n                    }}\n                >\n                    {children}\n                </motion.div>\n            );\n        case 'slide':\n            if (direction === 'up' || direction === 'down') {\n                return (\n                    <motion.div\n                        ref={ref}\n                        animate={{ y: y !== undefined ? y : '' }}\n                        onHoverEnd={() => cycleY()}\n                        onHoverStart={() => cycleY()}\n                    >\n                        {children}\n                    </motion.div>\n                );\n            }\n            return (\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n                    {children}\n                </motion.div>\n            );\n\n        case 'scale':\n        default:\n            if (typeof scale === 'number') {\n                scale = {\n                    hover: scale,\n                    tap: scale\n                };\n            }\n            return (\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n                    {children}\n                </motion.div>\n            );\n    }\n});\n\nAnimateButton.defaultProps = {\n    type: 'scale',\n    offset: 10,\n    direction: 'right',\n    scale: {\n        hover: 1,\n        tap: 0.9\n    }\n};\n\nexport default AnimateButton;\n","import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","// material-ui\nimport { Box } from '@mui/material';\n// project import\nimport MainCard, { MainCardProps } from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => (\n    <MainCard\n        boxShadow\n        shadow=\"0px 4px 16px rgba(0, 0, 0, 0.25)\"\n        sx={{\n            boxShadow: '0px 4px 16px rgba(0, 0, 0, 0.25)',\n            border: '1px solid #CCCCCC',\n            borderRadius: '24px',\n            maxWidth: { xs: 450, lg: 420 },\n            margin: { xs: 1.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    // backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\n    backgroundImage: 'url(images/img_bg_login.png)',\n    backgroundSize: 'cover',\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Stack,\n    Typography,\n    useMediaQuery\n} from '@mui/material';\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Formik } from 'formik';\nimport useAuth from 'hooks/useAuth';\n// project imports\nimport useConfig from 'hooks/useConfig';\nimport useScriptRef from 'hooks/useScriptRef';\nimport React from 'react';\n// third party\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport toastService from 'services/core/toast.service';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport * as Yup from 'yup';\n\n// ============================|| LOGIN ||============================ //\n\nconst recaptchaRef: any = React.createRef();\n\nconst AuthLogin = ({ loginProp, ...others }: { loginProp?: number }) => {\n    const theme = useTheme();\n    const intl = useIntl();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const { borderRadius } = useConfig();\n    const [checked, setChecked] = React.useState(true);\n\n    const { login } = useAuth();\n\n    const [showPassword, setShowPassword] = React.useState(false);\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event: React.SyntheticEvent) => {\n        event.preventDefault();\n    };\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    email: 'ntcnet@gmail.com',\n                    password: '123456',\n                    token: null,\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required'),\n                    token: Yup.string().required().nullable()\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting, setFieldValue }) => {\n                    try {\n                        setFieldValue('token', '');\n                        recaptchaRef.current.reset();\n                        login(values.email, values.password)\n                            .then((res) => {})\n                            .catch((err) => {\n                                console.log(err);\n\n                                if (err.error === 10) {\n                                    toastService.showInfo({\n                                        title: intl.formatMessage({ id: `${_.get(err, 'message', 'msg_something_err')}` }),\n                                        text: intl.formatMessage({ id: `msg_contact_unlock` }),\n                                        position: 'center-start'\n                                    });\n                                } else {\n                                    toastService.showError({\n                                        title: intl.formatMessage({ id: `${_.get(err, 'message', 'msg_something_err')}` }),\n                                        text: err.sub_message\n                                            ? intl\n                                                  .formatMessage({ id: `${_.get(err, 'sub_message', 'msg_empty')}` })\n                                                  .replace('{count_wrong}', _.get(err, 'countWrong', ''))\n                                                  .replace('{count_wrong_max}', _.get(err, 'countWrongMax', ''))\n                                            : '',\n                                        position: 'center-start'\n                                    });\n                                }\n                            });\n\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err: any) {\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values, setValues }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label=\"Email Address / Username\"\n                                inputProps={{}}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {errors.email}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={checked}\n                                        onChange={(event) => setChecked(event.target.checked)}\n                                        name=\"checked\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Remember me\"\n                            />\n                            <Typography\n                                variant=\"subtitle1\"\n                                component={Link}\n                                to={loginProp ? `/pages/forgot-password/forgot-password${loginProp}` : '/forgot'}\n                                color=\"secondary\"\n                                sx={{ textDecoration: 'none' }}\n                            >\n                                Forgot Password?\n                            </Typography>\n                        </Stack>\n                        {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n                        <FormControl fullWidth error={Boolean(touched.token && errors.token)} sx={{ ...theme.typography.customInput }}>\n                            <ReCAPTCHA\n                                ref={recaptchaRef}\n                                onExpired={() => (recaptchaRef.current as any)?.reset()}\n                                sitekey={process.env.REACT_APP_SITE_KEY!}\n                                onChange={(value: any) => {\n                                    setValues({ ...values, token: value });\n                                }}\n                                size=\"normal\"\n                                style={{ margin: '0 auto', display: 'table' }}\n                            />\n                        </FormControl>\n                        <Box sx={{ my: 2 }}>\n                            <AnimateButton>\n                                <Button\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    sx={{ borderRadius: '8px' }}\n                                >\n                                    Sign in\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default AuthLogin;\n","import { Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport useAuth from 'hooks/useAuth';\nimport { Link } from 'react-router-dom';\nimport Logo from 'ui-component/Logo';\nimport AuthLogin from '../auth-forms/AuthLogin';\nimport AuthCardWrapper from '../AuthCardWrapper';\n// project imports\nimport AuthWrapper from '../AuthWrapper';\n\n// assets\n\n// ================================|| AUTH3 - LOGIN ||================================ //\n\nconst Login = () => {\n    const theme = useTheme();\n    const { isLoggedIn } = useAuth();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper>\n            <Grid container direction=\"column\" justifyContent=\"center\" sx={{ minHeight: '100vh', borderRadius: '24px' }}>\n                <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                    <AuthCardWrapper>\n                        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                            <Grid item sx={{ mb: 1 }}>\n                                <Link to=\"#\">\n                                    <Logo />\n                                </Link>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Grid\n                                    container\n                                    direction={matchDownSM ? 'column-reverse' : 'row'}\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Grid item>\n                                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                            <Typography color={theme.palette.primary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\n                                                Hello\n                                            </Typography>\n                                            <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : 'inherit'}>\n                                                Please Sign In Your Account\n                                            </Typography>\n                                        </Stack>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <AuthLogin />\n                            </Grid>\n                            {/* <Grid item xs={12}>\n                                <Divider />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                    <Typography\n                                        component={Link}\n                                        to={isLoggedIn ? '' : '/register'}\n                                        variant=\"subtitle1\"\n                                        sx={{ textDecoration: 'none' }}\n                                    >\n                                        Don&apos;t have account?\n                                    </Typography>\n                                </Grid>\n                            </Grid> */}\n                        </Grid>\n                    </AuthCardWrapper>\n                </Grid>\n            </Grid>\n        </AuthWrapper>\n    );\n};\n\nexport default Login;\n"],"sourceRoot":""}