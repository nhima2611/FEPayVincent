{"version":3,"sources":["services/core/baseApi.service.ts","utils/toastify.ts","services/tickets-services/index.ts","views/tickets/components/FETextField.tsx","views/tickets/components/FEDropDown.tsx","ui-component/extended/Form/InputLabel.tsx","views/tickets/create/CreateTicket.tsx","views/tickets/create/index.tsx"],"names":["BaseApiService","apiName","filter","axiosServices","get","this","id","includeOption","params","JSON","stringify","delete","model","patch","put","_","omit","convertDateStringsToDates","post","payload","key","hasOwnProperty","value","moment","ISO_8601","isValid","format","toString","showToast","type","msg","toast","TicketService","downloadTicket","ids","responseType","deleteTicket","uploadTicket","file","formData","FormData","append","headers","addDescription","data","addAttachment","createTicket","assignTo","FETextField","formik","title","disabled","name","rest","spacing","sx","color","fontWeight","fullWidth","values","onBlur","handleBlur","error","touched","Boolean","errors","helperText","onChange","handleChange","FEDropDown","defaultValue","map","toNumber","BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","palette","text","primary","marginBottom","InputLabel","children","others","defaultProps","validationSchema","yup","transaction_type","required","issue_type","sub_issue_type","when","is","then","right_amount","typeError","requested_by","ref_number","transaction_date","transaction_amount","contract_number","wrong_transaction","right_contract_number","right_product_type","requester_national_id","requester_phone","min","CreateTicket","onSubmit","useFormik","initialValues","Date","status","description","attachments","val","useEffect","setFieldValue","handleSubmit","useDropzone","onDrop","files","maxFiles","getRootProps","getInputProps","MainCard","Grid","container","gridSpacing","item","xs","md","transactionType","issueType","subIssueType","requestedBy","Stack","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","inputFormat","renderInput","TextField","productTypeRightContractNumberType","multiline","rows","placeholder","BoxStyle","padding","backgroundColor","cursor","className","direction","justifyContent","alignItems","Input","Typography","index","style","margin","path","size","IconButton","onClick","dd","it","indexFile","onRemoveItem","display","Button","variant","background","marginX","Box","backgroundImage","borderRadius","CreateTicketPage","mCreateTicket","useMutation","ticketsServices","onSuccess","res","toastify","onError","err","message","forEach","element","i","mutate"],"mappings":"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","file":"static/js/23.b85c9b30.chunk.js","sourcesContent":["/* eslint-disable no-continue */\r\n/* eslint-disable no-prototype-builtins */\r\nimport _ from 'lodash';\r\nimport axiosServices from 'utils/axios';\r\n\r\nexport abstract class BaseApiService {\r\n    constructor(protected apiName: string) {}\r\n\r\n    getAll(filter?: any) {\r\n        return axiosServices.get(`${this.apiName}?${filter}`);\r\n    }\r\n\r\n    getById(id: string | any, includeOption?: any) {\r\n        return axiosServices.get(`${this.apiName}/${id}`, {\r\n            params: { filter: JSON.stringify(includeOption) }\r\n        });\r\n    }\r\n\r\n    delete(id: any) {\r\n        return axiosServices.delete(`${this.apiName}/${id}`);\r\n    }\r\n\r\n    updatePatch(model: any) {\r\n        return axiosServices.patch(`${this.apiName}/${model.id}`, model);\r\n    }\r\n\r\n    updatePut(model: any) {\r\n        return axiosServices.put(`${this.apiName}/${model.id}`, model);\r\n    }\r\n\r\n    insert(model: any) {\r\n        model = _.omit(model, ['id']);\r\n        model = this.convertDateStringsToDates(model);\r\n        return axiosServices.post(`${this.apiName}`, model);\r\n    }\r\n\r\n    convertDateStringsToDates(payload: any) {\r\n        // Ignore things that aren't objects.\r\n        if (typeof payload !== 'object') return payload;\r\n\r\n        for (const key in payload) {\r\n            if (!payload.hasOwnProperty(key)) continue;\r\n            const value = payload[key];\r\n            // Check for string properties which look like dates.\r\n            if (moment(value, moment.ISO_8601).isValid()) {\r\n                payload[key] = moment(value).format('yyyy-MM-DD hh:mm:ss').toString();\r\n            } else if (typeof value === 'object') {\r\n                // Recurse into object\r\n                this.convertDateStringsToDates(value);\r\n            }\r\n        }\r\n        return payload;\r\n    }\r\n}\r\n","import { toast, TypeOptions } from 'react-toastify';\r\n\r\nconst showToast = (type?: TypeOptions, msg?: string) => {\r\n    toast(msg, {\r\n        type\r\n    });\r\n};\r\n\r\nexport default { showToast };\r\n","import { BaseApiService } from 'services/core/baseApi.service';\r\nimport { AddAttachmentModel, AddDescriptionModel, CreateTicketModel, AssignToModel } from 'types/ticket';\r\nimport axiosServices from 'utils/axios';\r\n\r\nclass TicketService extends BaseApiService {\r\n    constructor() {\r\n        super('/v1/tickets');\r\n    }\r\n\r\n    downloadTicket = (model?: number[]) => {\r\n        return axiosServices.post(`/v1/tickets/exportExcel`, { ids: model }, { responseType: 'blob' });\r\n    };\r\n\r\n    deleteTicket = (model?: number[]) => {\r\n        return axiosServices.post(`/v1/tickets/deleteTickets`, { ids: model });\r\n    };\r\n\r\n    uploadTicket = (file?: any) => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        return axiosServices.post('/v1/tickets/import', formData, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n    };\r\n\r\n    addDescription = (data: AddDescriptionModel) => {\r\n        return axiosServices.post('v1/tickets/descriptions', data);\r\n    };\r\n\r\n    addAttachment = (data: AddAttachmentModel[]) => {\r\n        return axiosServices.post('v1/tickets/attachments', data, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n    };\r\n\r\n    createTicket = (data: CreateTicketModel) => {\r\n        return axiosServices.post('v1/tickets', data, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n    };\r\n\r\n    assignTo = (data: AssignToModel) => {\r\n        return axiosServices.post('v1/tickets/assigneesandsupporters', data);\r\n    };\r\n}\r\n\r\nexport default new TicketService();\r\n","import { InputLabel, Stack, TextField } from '@mui/material';\r\n\r\nconst FETextField = ({ formik, title, disabled = false, name = '', ...rest }) => {\r\n    return (\r\n        <Stack spacing={1}>\r\n            <InputLabel sx={{ color: disabled ? '#CCCCCC' : '#4C4C4C', fontWeight: 700 }}>{title}</InputLabel>\r\n            <TextField\r\n                fullWidth\r\n                name={name}\r\n                value={formik.values[name]}\r\n                onBlur={formik.handleBlur}\r\n                error={formik.touched[name] && Boolean(formik.errors[name])}\r\n                helperText={formik.touched[name] && formik.errors[name]}\r\n                onChange={formik.handleChange}\r\n                disabled={disabled}\r\n                {...rest}\r\n            />\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default FETextField;\r\n","import { FormHelperText, InputLabel, MenuItem, Select, Stack } from '@mui/material';\r\nimport { map } from 'lodash';\r\n\r\ninterface Props {\r\n    formik: any;\r\n    title: string;\r\n    data?: any;\r\n    name?: string;\r\n    disabled?: boolean;\r\n}\r\nconst FEDropDown = ({ formik, title = '', data = {}, name = '', disabled }: Props) => {\r\n    return (\r\n        <Stack spacing={1}>\r\n            <InputLabel sx={{ color: disabled ? '#CCCCCC' : '#4C4C4C', fontWeight: 700 }}>{title}</InputLabel>\r\n            <Select\r\n                id={name}\r\n                name={name}\r\n                defaultValue={formik.values[name]}\r\n                value={formik.values[name]}\r\n                onChange={formik.handleChange}\r\n                disabled={disabled}\r\n            >\r\n                {map(data, (key, value) => (\r\n                    <MenuItem key={value} value={_.toNumber(value)}>\r\n                        {key}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n            {formik.errors[name] && <FormHelperText error>{formik.errors[name]}</FormHelperText>}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default FEDropDown;\r\n","import { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { InputLabel as MuiInputLabel, InputLabelProps } from '@mui/material';\r\n\r\nconst BInputLabel = styled((props: MUIInputLabelProps) => <MuiInputLabel {...props} />, {\r\n    shouldForwardProp: (prop) => prop !== 'horizontal'\r\n})(({ theme, horizontal }) => ({\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n    marginBottom: horizontal ? 0 : 8\r\n}));\r\n\r\ninterface MUIInputLabelProps extends InputLabelProps {\r\n    horizontal?: boolean;\r\n}\r\n\r\nconst InputLabel = ({ children, horizontal, ...others }: MUIInputLabelProps) => (\r\n    <BInputLabel horizontal={horizontal} {...others}>\r\n        {children}\r\n    </BInputLabel>\r\n);\r\n\r\nInputLabel.defaultProps = {\r\n    horizontal: false\r\n};\r\n\r\nexport default InputLabel;\r\n","import { DatePicker, LocalizationProvider } from '@mui/lab';\r\n// material-ui\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport { Box, Button, Grid, IconButton, Stack, styled, TextField, Typography } from '@mui/material';\r\nimport { IconUpload, IconX } from '@tabler/icons';\r\nimport { issueType, productTypeRightContractNumberType, requestedBy, subIssueType, transactionType } from 'constants/tickets';\r\nimport { useFormik } from 'formik';\r\nimport React, { useEffect } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport InputLabel from 'ui-component/extended/Form/InputLabel';\r\n// third-party\r\nimport * as yup from 'yup';\r\nimport FEDropDown from '../components/FEDropDown';\r\nimport FETextField from '../components/FETextField';\r\n\r\n// yup validation-schema\r\nconst validationSchema = yup.object({\r\n    transaction_type: yup.string().required('Transaction Type is Required'),\r\n    issue_type: yup.string().required('Issue Type is Required'),\r\n    sub_issue_type: yup.number().when('issue_type', { is: 3, then: yup.number().required('Sub Issue Type is Required') }),\r\n    right_amount: yup.string().when('issue_type', {\r\n        is: 2,\r\n        then: yup.number().typeError('Right Amount must be a number').required('Right Amount Number is Required')\r\n    }),\r\n    requested_by: yup.string().required('Requested By is Required'),\r\n    ref_number: yup.string().required('Ref Number is Required'),\r\n    transaction_date: yup.date().required('Transaction Date is Required'),\r\n    transaction_amount: yup.number().typeError('Transaction Amount must be a number').required('Transaction Amount is Required'),\r\n    contract_number: yup.string().required('Contract Number is Required'),\r\n    wrong_transaction: yup.string().required('Wrong Transaction is Required'),\r\n    right_contract_number: yup.number().typeError('Right Contract Number must be a number').required('Right Contract Number is Required'),\r\n    right_product_type: yup.number().when('issue_type', { is: 3, then: yup.number().required('Right Product Type is Required') }),\r\n    requester_national_id: yup.number().typeError(\"Requested's Nation ID must be a number\").required(\"Requested's Nation ID is Required\"),\r\n    requester_phone: yup\r\n        .number()\r\n        .typeError(\"Requester's Phone Number must be a number\")\r\n        .min(10, 'Phone number should be of minimum 10 characters')\r\n        .required(\"Requester's Phone Number is Required\")\r\n});\r\n\r\n// ==============================|| CREATE TICKET ||============================== //\r\n\r\nconst CreateTicket = ({ onSubmit }) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            transaction_type: 1,\r\n            issue_type: 1,\r\n            sub_issue_type: 0,\r\n            requested_by: 1,\r\n            ref_number: '',\r\n            transaction_date: new Date(),\r\n            transaction_amount: '',\r\n            contract_number: '',\r\n            wrong_transaction: '',\r\n            right_contract_number: '',\r\n            right_amount: '',\r\n            right_product_type: 0,\r\n            requester_national_id: '',\r\n            requester_phone: '',\r\n            status: null,\r\n            description: '',\r\n            attachments: []\r\n        },\r\n        validationSchema,\r\n        onSubmit: (val) => onSubmit(val)\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (formik.values.issue_type !== 3) {\r\n            formik.setFieldValue('sub_issue_type', 0);\r\n            formik.setFieldValue('right_product_type', 0);\r\n        }\r\n\r\n        if (formik.values.issue_type !== 2) {\r\n            formik.setFieldValue('right_amount', '');\r\n        }\r\n    }, [formik.values.issue_type]);\r\n\r\n    const handleSubmit = ({ status }) => {\r\n        if (!formik.isValid) return;\r\n        formik.setFieldValue('status', status);\r\n    };\r\n\r\n    const onDropFile = (files: any) => {\r\n        formik.setFieldValue('attachments', files);\r\n    };\r\n\r\n    const onRemoveItem = (index) => {\r\n        const dd = formik.values.attachments.filter((it: any, indexFile: number) => indexFile !== index);\r\n        formik.setFieldValue('attachments', dd);\r\n    };\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({ onDrop: onDropFile, maxFiles: 5 });\r\n\r\n    return (\r\n        <MainCard title=\"Create Ticket\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FEDropDown name=\"transaction_type\" formik={formik} title=\"Transaction Type\" data={transactionType} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FEDropDown name=\"issue_type\" formik={formik} title=\"Issue Type\" data={issueType} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FEDropDown\r\n                            disabled={formik.values.issue_type !== 3}\r\n                            name=\"sub_issue_type\"\r\n                            formik={formik}\r\n                            title=\"Sub Issue Type\"\r\n                            data={subIssueType}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FEDropDown name=\"requested_by\" formik={formik} title=\"Requested By\" data={requestedBy} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"REF Number\" name=\"ref_number\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <Stack>\r\n                            <InputLabel sx={{ color: '#4C4C4C', fontWeight: 'bold' }}>Transaction Date</InputLabel>\r\n                            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <DatePicker\r\n                                    inputFormat=\"dd/MM/yyyy\"\r\n                                    renderInput={(props) => <TextField fullWidth {...props} />}\r\n                                    value={formik.values.transaction_date}\r\n                                    onChange={(val) => formik.setFieldValue('transaction_date', val)}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </Stack>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Transaction Amount\" name=\"transaction_amount\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Contract Number\" name=\"contract_number\" />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Product Type of Wrong Transaction\" name=\"wrong_transaction\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Right Contract Number\" name=\"right_contract_number\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Right Amount\" name=\"right_amount\" disabled={formik.values.issue_type !== 2} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FEDropDown\r\n                            disabled={formik.values.issue_type !== 3}\r\n                            name=\"right_product_type\"\r\n                            formik={formik}\r\n                            title=\"Product Type of Right Contract #\"\r\n                            data={productTypeRightContractNumberType}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Requester's National ID\" name=\"requester_national_id\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <FETextField formik={formik} title=\"Requester's Phone Number\" name=\"requester_phone\" />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <FETextField\r\n                            formik={formik}\r\n                            title=\"Description\"\r\n                            multiline\r\n                            rows={4}\r\n                            placeholder=\"Enter Description\"\r\n                            name=\"description\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <BoxStyle\r\n                            sx={{ padding: 3, backgroundColor: 'rgba(39, 174, 96, .15)', cursor: 'pointer' }}\r\n                            {...getRootProps({ className: 'dropzone' })}\r\n                        >\r\n                            <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={1}>\r\n                                <Input id=\"contained-button-file\" {...getInputProps()} />\r\n                                <IconUpload />\r\n                                <Typography>Browse or Drop file here</Typography>\r\n                            </Stack>\r\n                        </BoxStyle>\r\n                        {formik.values.attachments.map((file: any, index: number) => (\r\n                            <Stack key={index} direction=\"row\" alignItems=\"center\">\r\n                                <li style={{ margin: '8px 4px' }}>\r\n                                    {file.path} - {file.size} bytes\r\n                                </li>\r\n                                <IconButton onClick={() => onRemoveItem(index)}>\r\n                                    <IconX />\r\n                                </IconButton>\r\n                            </Stack>\r\n                        ))}\r\n                    </Grid>\r\n\r\n                    <Grid item sx={{ display: 'flex', justifyContent: 'flex-end' }} xs={12}>\r\n                        <Button variant=\"contained\" sx={{ background: '#999999' }}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            sx={{ marginX: 1, background: '#2F80ED' }}\r\n                            type=\"submit\"\r\n                            onClick={() => handleSubmit({ status: 0 })}\r\n                        >\r\n                            Save as Draft\r\n                        </Button>\r\n                        <Button\r\n                            sx={{ background: '#27AE60' }}\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            onClick={() => handleSubmit({ status: 1 })}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default CreateTicket;\r\n\r\nconst BoxStyle = styled(Box)({\r\n    backgroundImage: `url(\r\n        \"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='14' ry='14' stroke='%23CCCCCCFF' stroke-width='4' stroke-dasharray='6%2c 14' stroke-dashoffset='0' stroke-linecap='round'/%3e%3c/svg%3e\"\r\n        )`,\r\n    borderRadius: 14\r\n});\r\n\r\nconst Input = styled('input')({\r\n    display: 'none'\r\n});\r\n","import { useMutation } from 'react-query';\r\nimport ticketsServices from 'services/tickets-services';\r\nimport { CreateTicketModel } from 'types/ticket';\r\nimport toastify from 'utils/toastify';\r\nimport CreateTicket from './CreateTicket';\r\n\r\nconst CreateTicketPage = () => {\r\n    const mCreateTicket = useMutation((data: CreateTicketModel) => ticketsServices.createTicket(data), {\r\n        onSuccess: (res) => {\r\n            toastify.showToast('success', 'Upload Success!');\r\n        },\r\n        onError: (err: any) => {\r\n            toastify.showToast('error', err.message);\r\n        }\r\n    });\r\n\r\n    const onSubmit = (values: any) => {\r\n        const { attachments } = values;\r\n        const formData: any = new FormData();\r\n\r\n        attachments.forEach((element: any, i: number) => {\r\n            formData.append(`attachments[]`, element);\r\n        });\r\n\r\n        _.forEach(_.omit(values, 'attachments'), (item, key) => {\r\n            formData.append(`${key}`, item);\r\n        });\r\n        mCreateTicket.mutate(formData);\r\n    };\r\n    return <CreateTicket onSubmit={onSubmit} />;\r\n};\r\n\r\nexport default CreateTicketPage;\r\n"],"sourceRoot":""}