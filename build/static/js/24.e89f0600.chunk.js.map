{"version":3,"sources":["services/core/toast.service.ts","ui-component/extended/AnimateButton.tsx","hooks/useScriptRef.ts","views/pages/authentication/AuthCardWrapper.tsx","views/pages/authentication/AuthWrapper.tsx","utils/password-strength.ts","ui-component/cards/AuthFooter.tsx","views/pages/authentication/auth-forms/AuthForgotPassword.tsx","views/pages/authentication/authentication3/ForgotPassword.tsx"],"names":["showConfirm","args","a","Swal","fire","backdrop","title","text","icon","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","onConfirm","isDenied","onDenied","toast","position","background","color","showConfirmButton","timer","timerProgressBar","didOpen","toastr","addEventListener","stopTimer","resumeTimer","showDeleteConfirm","confirmButtonColor","cancelButtonColor","showError","showSuccess","showLoading","showInfo","showWarning","AnimateButton","React","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","useScriptRef","scripted","useRef","useEffect","current","AuthCardWrapper","other","boxShadow","shadow","sx","border","borderRadius","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","theme","backgroundImage","backgroundSize","minHeight","strengthColor","count","label","value","errorMain","warningDark","orangeMain","successMain","successDark","strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","AuthFooter","Stack","justifyContent","Typography","variant","component","Link","href","target","underline","AuthForgotPassword","useTheme","nativation","useNavigate","useState","activeStep","setActiveStep","loading","setLoading","errorAlerts","setErrorAlerts","verify","setVerify","emailState","setEmail","useAuth","resetPassword","forgotPassword","verifyCode","onSubmitStep1","email","res","data","success","toastService","verify_code","Alert","severity","className","message","catch","err","onSubmitStep2","code","prevActiveStep","onSubmitStep3","reSubmitStep1","Stepper","step","onSubmit","renderStep","Step1","initialValues","submit","validationSchema","Yup","shape","max","required","values","setErrors","setStatus","setSubmitting","_","get","errors","handleBlur","handleChange","handleSubmit","touched","isSubmitting","noValidate","FormControl","fullWidth","error","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","name","onBlur","onChange","FormHelperText","Box","mt","LoadingButton","disableElevation","disabled","size","endIcon","loadingPosition","Step2","min","inputProps","maxLength","placeholder","endAdornment","date","Date","now","renderer","minutes","seconds","completed","formatted","Button","onClick","e","cursor","Step3","showPassword","setShowPassword","strength","setStrength","level","setLevel","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","password","confirm_password","oneOf","omit","temp","changePassword","InputAdornment","IconButton","onMouseDown","edge","mb","Grid","container","spacing","alignItems","item","style","backgroundColor","width","height","fontSize","memo","ForgotPassword","isLoggedIn","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper","m","to","Logo","textAlign","palette","primary","main","gutterBottom","Divider","textDecoration"],"mappings":"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","file":"static/js/24.e89f0600.chunk.js","sourcesContent":["import Swal, { SweetAlertIcon, SweetAlertOptions, SweetAlertPosition, SweetAlertResult } from 'sweetalert2';\n\ninterface SweetAlertConfirm {\n    onConfirm: () => Promise<void>;\n    onDenied?: () => Promise<void>;\n}\n\nconst toast = (icon: SweetAlertIcon, title: string, position?: SweetAlertPosition): Promise<any> => {\n    let background = '#ffffff';\n    switch (icon) {\n        case 'success':\n            background = '#5cb85c';\n            break;\n\n        case 'error':\n            background = '#d9534f';\n            break;\n        default:\n            break;\n    }\n    return Swal.fire({\n        icon,\n        title,\n        toast: true,\n        position: position || 'bottom-end',\n        background,\n        color: 'white',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: (toastr: HTMLElement) => {\n            toastr.addEventListener('mouseenter', Swal.stopTimer);\n            toastr.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n    });\n};\n\nconst showSuccess = (args: SweetAlertOptions): Promise<any> => {\n    return Swal.fire({\n        ...args,\n        icon: 'success'\n    });\n};\n\nconst showError = (args: SweetAlertOptions): Promise<any> => {\n    return Swal.fire({\n        ...args,\n        icon: 'error'\n    });\n};\n\nconst showInfo = (args: SweetAlertOptions): Promise<any> => {\n    return Swal.fire({\n        ...args,\n        icon: 'info'\n    });\n};\n\nconst showWarning = (args: SweetAlertOptions): Promise<any> => {\n    return Swal.fire({\n        ...args,\n        icon: 'warning'\n    });\n};\n\nconst showConfirm = async (args: SweetAlertOptions & SweetAlertConfirm): Promise<any> => {\n    return Swal.fire({\n        backdrop: true,\n        title: args.title || 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'info',\n        showCancelButton: true,\n        confirmButtonText: args.confirmButtonText ?? 'Ok',\n        denyButtonText: args.denyButtonText ?? 'Cancel'\n    }).then((result: SweetAlertResult<any>) => {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n            return args.onConfirm?.();\n        }\n        if (result.isDenied) {\n            return args.onDenied?.();\n        }\n        return args.onDenied?.();\n    });\n};\n\nconst showDeleteConfirm = (args: SweetAlertOptions & SweetAlertConfirm): Promise<any> => {\n    return Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n            return args.onConfirm?.();\n        }\n        if (result.isDenied) {\n            return args.onDenied?.();\n        }\n        return args.onDenied?.();\n    });\n};\n\nconst showLoading = () => {\n    return Swal.fire({\n        title: 'Loading',\n        timerProgressBar: true\n    });\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    toast,\n    showConfirm,\n    showDeleteConfirm,\n    showError,\n    showSuccess,\n    showLoading,\n    showInfo,\n    showWarning\n};\n","import React, { Ref } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\ninterface ScaleProps {\n    hover: number | string | undefined;\n    tap: number | string | undefined;\n}\n\ninterface AnimateButtonProps {\n    children?: React.ReactNode;\n    type?: 'slide' | 'scale' | 'rotate';\n    direction?: 'up' | 'down' | 'left' | 'right';\n    offset?: number;\n    scale?: ScaleProps;\n}\n\n// ==============================|| ANIMATION BUTTON ||============================== //\n\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }: AnimateButtonProps, ref: Ref<HTMLDivElement>) => {\n    let offset1;\n    let offset2;\n    switch (direction) {\n        case 'up':\n        case 'left':\n            offset1 = offset;\n            offset2 = 0;\n            break;\n        case 'right':\n        case 'down':\n        default:\n            offset1 = 0;\n            offset2 = offset;\n            break;\n    }\n\n    const [x, cycleX] = useCycle(offset1, offset2);\n    const [y, cycleY] = useCycle(offset1, offset2);\n\n    switch (type) {\n        case 'rotate':\n            return (\n                <motion.div\n                    ref={ref}\n                    animate={{ rotate: 360 }}\n                    transition={{\n                        repeat: Infinity,\n                        repeatType: 'loop',\n                        duration: 2,\n                        repeatDelay: 0\n                    }}\n                >\n                    {children}\n                </motion.div>\n            );\n        case 'slide':\n            if (direction === 'up' || direction === 'down') {\n                return (\n                    <motion.div\n                        ref={ref}\n                        animate={{ y: y !== undefined ? y : '' }}\n                        onHoverEnd={() => cycleY()}\n                        onHoverStart={() => cycleY()}\n                    >\n                        {children}\n                    </motion.div>\n                );\n            }\n            return (\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n                    {children}\n                </motion.div>\n            );\n\n        case 'scale':\n        default:\n            if (typeof scale === 'number') {\n                scale = {\n                    hover: scale,\n                    tap: scale\n                };\n            }\n            return (\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n                    {children}\n                </motion.div>\n            );\n    }\n});\n\nAnimateButton.defaultProps = {\n    type: 'scale',\n    offset: 10,\n    direction: 'right',\n    scale: {\n        hover: 1,\n        tap: 0.9\n    }\n};\n\nexport default AnimateButton;\n","import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","// material-ui\nimport { Box } from '@mui/material';\n// project import\nimport MainCard, { MainCardProps } from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => (\n    <MainCard\n        boxShadow\n        shadow=\"0px 4px 16px rgba(0, 0, 0, 0.25)\"\n        sx={{\n            boxShadow: '0px 4px 16px rgba(0, 0, 0, 0.25)',\n            border: '1px solid #CCCCCC',\n            borderRadius: '24px',\n            maxWidth: { xs: 450, lg: 420 },\n            margin: { xs: 1.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    // backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\n    backgroundImage: 'url(images/img_bg_login.png)',\n    backgroundSize: 'cover',\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","/**\n * Password validator for login pages\n */\nimport { NumbColorFunc, StringBoolFunc, StringNumFunc } from 'types';\nimport value from 'assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber: StringBoolFunc = (number) => new RegExp(/[0-9]/).test(number);\n\n// has mix of small and capitals\nconst hasMixed: StringBoolFunc = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\n\n// has special chars\nconst hasSpecial: StringBoolFunc = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\n\n// set color based on password strength\nexport const strengthColor: NumbColorFunc = (count) => {\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\n    if (count < 5) return { label: 'Good', color: value.successMain };\n    if (count < 6) return { label: 'Strong', color: value.successDark };\n    return { label: 'Poor', color: value.errorMain };\n};\n\n// password strength indicator\nexport const strengthIndicator: StringNumFunc = (number) => {\n    let strengths = 0;\n    if (number.length > 5) strengths += 1;\n    if (number.length > 7) strengths += 1;\n    if (hasNumber(number)) strengths += 1;\n    if (hasSpecial(number)) strengths += 1;\n    if (hasMixed(number)) strengths += 1;\n    return strengths;\n};\n","// material-ui\nimport { Link, Typography, Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n            {/* berrydashboard.io */}\n        </Typography>\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n            {/* &copy; codedthemes.com */}\n        </Typography>\n    </Stack>\n);\n\nexport default AuthFooter;\n","// material-ui\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { LoadingButton } from '@mui/lab';\nimport {\n    Alert,\n    Button,\n    FormControl,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    OutlinedInput,\n    Stepper,\n    Typography\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { Box } from '@mui/system';\nimport { Formik } from 'formik';\nimport useAuth from 'hooks/useAuth';\nimport useScriptRef from 'hooks/useScriptRef';\nimport React, { useState } from 'react';\nimport Countdown from 'react-countdown';\nimport { useNavigate } from 'react-router-dom';\nimport toastService from 'services/core/toast.service';\nimport Swal from 'sweetalert2';\nimport { StringColorProps } from 'types';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\nimport * as Yup from 'yup';\n\n// ========================|| FORGOT PASSWORD ||======================== //\n\nconst AuthForgotPassword = ({ ...others }) => {\n    const theme = useTheme();\n    const scriptedRef = useScriptRef();\n    const nativation = useNavigate();\n\n    const [activeStep, setActiveStep] = useState<number>(0);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [errorAlerts, setErrorAlerts] = useState<any>(null);\n    const [verify, setVerify] = useState<number>(0);\n    const [emailState, setEmail] = useState<string>('');\n\n    const { resetPassword, forgotPassword, verifyCode } = useAuth();\n    const onSubmitStep1 = (email: string) => {\n        setLoading(true);\n        setErrorAlerts(null);\n        try {\n            forgotPassword(email)\n                .then((res) => {\n                    setLoading(false);\n                    if (!res.data.success) {\n                        setErrorAlerts(\n                            <Alert severity=\"error\" className=\"mb-4\">\n                                {res.data.message} !\n                            </Alert>\n                        );\n                    } else {\n                        toastService.toast('success', 'Check mail for verify code', 'top');\n                        setVerify(res.data.verify_code);\n                        setEmail(email);\n                        if (activeStep !== 1) {\n                            setActiveStep(1);\n                        }\n                    }\n                })\n                .catch((err) => {\n                    setLoading(false);\n                    setErrorAlerts(\n                        <Alert severity=\"error\" className=\"mb-4\">\n                            {err.data.message} !\n                        </Alert>\n                    );\n                });\n        } catch (err: any) {\n            setLoading(false);\n            setErrorAlerts(\n                <Alert severity=\"error\" className=\"mb-4\">\n                    {err.message} !\n                </Alert>\n            );\n        }\n    };\n    const onSubmitStep2 = (code: number) => {\n        setLoading(true);\n        setErrorAlerts(null);\n        try {\n            verifyCode({ email: emailState, verify_code: code })\n                .then((res) => {\n                    setLoading(false);\n                    if (!res.data.success) {\n                        setErrorAlerts(\n                            <Alert severity=\"error\" className=\"mb-4\">\n                                {res.data.message} !\n                            </Alert>\n                        );\n                    } else {\n                        toastService.toast('success', res.data.message, 'top');\n                        setVerify(code);\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n                    }\n                })\n                .catch((err) => {\n                    setLoading(false);\n                    setErrorAlerts(\n                        <Alert severity=\"error\" className=\"mb-4\">\n                            {err.message} !\n                        </Alert>\n                    );\n                });\n        } catch (err: any) {\n            setLoading(false);\n            setErrorAlerts(\n                <Alert severity=\"error\" className=\"mb-4\">\n                    {err.message} !\n                </Alert>\n            );\n        }\n    };\n    const onSubmitStep3 = (data: { password: string; confirm_password: string }) => {\n        setLoading(true);\n        setErrorAlerts(null);\n        try {\n            resetPassword({ ...data, verify_code: verify, email: emailState })\n                .then((res) => {\n                    setLoading(false);\n                    if (!res.data.success) {\n                        setErrorAlerts(\n                            <Alert severity=\"error\" className=\"mb-4\">\n                                {res.message} !\n                            </Alert>\n                        );\n                    } else {\n                        toastService\n                            .showSuccess({\n                                toast: false,\n                                showConfirmButton: false,\n                                timer: 3000,\n                                timerProgressBar: true,\n                                icon: 'success',\n                                title: 'Successfully',\n                                text: res.data.message,\n                                didOpen: (toast) => {\n                                    toast.addEventListener('mouseenter', Swal.stopTimer);\n                                    toast.addEventListener('mouseleave', Swal.resumeTimer);\n                                }\n                            })\n                            .then((value) => {\n                                nativation(`/login`);\n                            });\n                    }\n                })\n                .catch((err) => {\n                    setLoading(false);\n                    setErrorAlerts(\n                        <Alert severity=\"error\" className=\"mb-4\">\n                            {err.message} !\n                        </Alert>\n                    );\n                });\n        } catch (err: any) {\n            setLoading(false);\n            setErrorAlerts(\n                <Alert severity=\"error\" className=\"mb-4\">\n                    {err.message} !\n                </Alert>\n            );\n        }\n    };\n    const reSubmitStep1 = () => onSubmitStep1(emailState);\n\n    const renderStep = (step: number) => {\n        switch (step) {\n            case 0:\n                return <Step1 loading={loading} onSubmit={onSubmitStep1} />;\n            case 1:\n                return <Step2 loading={loading} onSubmit={onSubmitStep2} reSubmitStep1={reSubmitStep1} />;\n            case 2:\n                return <Step3 loading={loading} onSubmit={onSubmitStep3} />;\n            default:\n                return <></>;\n        }\n    };\n    return (\n        <>\n            {errorAlerts}\n            <Stepper activeStep={activeStep} />\n            <>{renderStep(activeStep)}</>\n        </>\n    );\n};\n\nconst Step1 = ({ onSubmit, loading }: { onSubmit: (res) => void; loading: boolean }) => {\n    const theme = useTheme();\n    return (\n        <Formik\n            initialValues={{\n                email: '',\n                submit: null\n            }}\n            validationSchema={Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\n            })}\n            onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\n                onSubmit(_.get(values, 'email'));\n            }}\n        >\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                <form noValidate onSubmit={handleSubmit}>\n                    <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\n                        <InputLabel htmlFor=\"outlined-adornment-email-forgot\">Email Address / Username</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-email-forgot\"\n                            type=\"email\"\n                            value={values.email}\n                            name=\"email\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            label=\"Email Address / Username\"\n                        />\n                        {touched.email && errors.email && (\n                            <FormHelperText error id=\"standard-weight-helper-text-email-forgot\">\n                                {errors.email}\n                            </FormHelperText>\n                        )}\n                    </FormControl>\n\n                    <Box sx={{ mt: 2 }}>\n                        <AnimateButton>\n                            <LoadingButton\n                                disableElevation\n                                disabled={loading}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                endIcon={<ArrowForwardIcon />}\n                                loading={loading}\n                                loadingPosition=\"end\"\n                            >\n                                Send Mail\n                            </LoadingButton>\n                        </AnimateButton>\n                    </Box>\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nconst Step2 = ({ onSubmit, loading, reSubmitStep1 }: { onSubmit: (res) => void; loading: boolean; reSubmitStep1: () => void }) => {\n    const theme = useTheme();\n    return (\n        <Formik\n            initialValues={{\n                verify: '',\n                submit: null\n            }}\n            validationSchema={Yup.object().shape({\n                verify: Yup.string()\n                    .required('Verify code is required')\n                    .max(5, 'Verify code must be at most 5 characters')\n                    .min(5, 'Verify code must be at most 5 characters')\n                    .length(5, 'Verify code must be at most 5 characters')\n            })}\n            onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\n                onSubmit(_.get(values, 'verify'));\n            }}\n        >\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                <form noValidate onSubmit={handleSubmit}>\n                    <FormControl fullWidth error={Boolean(touched.verify && errors.verify)} sx={{ ...theme.typography.customInput }}>\n                        <InputLabel htmlFor=\"outlined-adornment-verify-forgot\">Verify Code</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-verify-forgot\"\n                            type=\"text\"\n                            value={values.verify}\n                            name=\"verify\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            label=\"Verify Code\"\n                            inputProps={{ maxLength: 5 }}\n                            placeholder=\"xxxxx\"\n                            endAdornment={\n                                <Countdown\n                                    date={Date.now() + 60000 * 5}\n                                    renderer={({ minutes, seconds, completed, formatted }) => (\n                                        <>\n                                            {!Boolean(loading) && (\n                                                <div>\n                                                    {/* {zeroPad(minutes)}:{zeroPad(seconds) */}\n                                                    {Boolean(completed) ? (\n                                                        <Button onClick={(e) => reSubmitStep1()}>\n                                                            {' '}\n                                                            <ReplayIcon /> Resend\n                                                        </Button>\n                                                    ) : (\n                                                        `${formatted.minutes}:${formatted.seconds}`\n                                                    )}\n                                                </div>\n                                            )}\n                                        </>\n                                    )}\n                                />\n                            }\n                        />\n                        {touched.verify && errors.verify && (\n                            <FormHelperText error id=\"standard-weight-helper-text-verify-forgot\">\n                                {errors.verify}\n                            </FormHelperText>\n                        )}\n                    </FormControl>\n                    <FormHelperText>\n                        Email didn&apos;t arrive.{' '}\n                        <Link onClick={(e) => reSubmitStep1()} color=\"secondary\" sx={{ cursor: 'pointer' }}>\n                            Resend!\n                        </Link>\n                    </FormHelperText>\n                    <Box sx={{ mt: 2 }}>\n                        <AnimateButton>\n                            <LoadingButton\n                                disableElevation\n                                disabled={loading}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                endIcon={<ArrowForwardIcon />}\n                                loading={loading}\n                                loadingPosition=\"end\"\n                            >\n                                Next\n                            </LoadingButton>\n                        </AnimateButton>\n                    </Box>\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nconst Step3 = ({ onSubmit, loading }: { onSubmit: (res) => void; loading: boolean }) => {\n    const theme = useTheme();\n    const [showPassword, setShowPassword] = React.useState(false);\n\n    const [strength, setStrength] = React.useState(0);\n    const [level, setLevel] = React.useState<StringColorProps>();\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event: React.SyntheticEvent) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value: string) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n    return (\n        <Formik\n            initialValues={{\n                password: '',\n                confirm_password: '',\n                submit: null\n            }}\n            validationSchema={Yup.object().shape({\n                password: Yup.string().max(255).required('Password is required'),\n                confirm_password: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match')\n            })}\n            onSubmit={(values) => {\n                onSubmit(_.omit(values, 'submit'));\n            }}\n        >\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                <form noValidate onSubmit={handleSubmit}>\n                    <FormControl fullWidth error={Boolean(touched.password && errors.password)} sx={{ ...theme.typography.customInput }}>\n                        <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-password-register\"\n                            type={showPassword ? 'text' : 'password'}\n                            value={values.password}\n                            name=\"password\"\n                            label=\"Password\"\n                            onBlur={handleBlur}\n                            onChange={(e) => {\n                                handleChange(e);\n                                changePassword(e.target.value);\n                            }}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                        edge=\"end\"\n                                        size=\"large\"\n                                    >\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            inputProps={{}}\n                        />\n                        {touched.password && errors.password && (\n                            <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                {errors.password}\n                            </FormHelperText>\n                        )}\n                    </FormControl>\n                    {strength !== 0 && (\n                        <FormControl fullWidth>\n                            <Box sx={{ mb: 2 }}>\n                                <Grid container spacing={2} alignItems=\"center\">\n                                    <Grid item>\n                                        <Box style={{ backgroundColor: level?.color }} sx={{ width: 85, height: 8, borderRadius: '7px' }} />\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                            {level?.label}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </FormControl>\n                    )}\n                    <FormControl\n                        fullWidth\n                        error={Boolean(touched.confirm_password && errors.confirm_password)}\n                        sx={{ ...theme.typography.customInput }}\n                    >\n                        <InputLabel htmlFor=\"outlined-adornment-confirm_password-register\">Confirm Password</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-confirm_password-register\"\n                            type={showPassword ? 'text' : 'password'}\n                            value={values.confirm_password}\n                            name=\"confirm_password\"\n                            label=\"Confirm Password\"\n                            onBlur={handleBlur}\n                            onChange={(e) => {\n                                handleChange(e);\n                                // changePassword(e.target.value);\n                            }}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle confirm_password visibility\"\n                                        onClick={handleClickShowPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                        edge=\"end\"\n                                        size=\"large\"\n                                    >\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            inputProps={{}}\n                        />\n                        {touched.confirm_password && errors.confirm_password && (\n                            <FormHelperText error id=\"standard-weight-helper-text-confirm_password-register\">\n                                {errors.confirm_password}\n                            </FormHelperText>\n                        )}\n                    </FormControl>\n\n                    <Box sx={{ mt: 2 }}>\n                        <AnimateButton>\n                            <LoadingButton\n                                disableElevation\n                                disabled={loading}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                loading={loading}\n                                loadingPosition=\"end\"\n                            >\n                                Submit\n                            </LoadingButton>\n                        </AnimateButton>\n                    </Box>\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nexport default React.memo(AuthForgotPassword);\n","import { Divider, Grid, Typography, useMediaQuery } from '@mui/material';\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport useAuth from 'hooks/useAuth';\nimport { Link } from 'react-router-dom';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\nimport Logo from 'ui-component/Logo';\nimport AuthForgotPassword from '../auth-forms/AuthForgotPassword';\nimport AuthCardWrapper from '../AuthCardWrapper';\n// project imports\nimport AuthWrapper from '../AuthWrapper';\n\n// ============================|| AUTH3 - FORGOT PASSWORD ||============================ //\n\nconst ForgotPassword = () => {\n    const theme = useTheme();\n    const { isLoggedIn } = useAuth();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper>\n            <Grid container direction=\"column\" justifyContent=\"center\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                            <Logo />\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" justifyContent=\"center\" textAlign=\"center\" spacing={2}>\n                                            <Grid item xs={12}>\n                                                <Typography\n                                                    color={theme.palette.primary.main}\n                                                    gutterBottom\n                                                    variant={matchDownSM ? 'h3' : 'h2'}\n                                                >\n                                                    Forgot password?\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <Typography variant=\"caption\" fontSize=\"16px\" textAlign=\"center\">\n                                                    Enter your email address below and we&apos;ll send verify code to reset password.\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <AuthForgotPassword />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to={isLoggedIn ? '/pages/login/login3' : '/login'}\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                                color=\"secondary\"\n                                            >\n                                                Already have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper>\n    );\n};\n\nexport default ForgotPassword;\n"],"sourceRoot":""}