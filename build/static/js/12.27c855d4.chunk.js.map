{"version":3,"sources":["assets/images/icons/download.svg","assets/images/icons/transfer.svg","assets/images/icons/trash.svg","assets/images/icons/upload.svg","views/tickets/create/FEDropDown.tsx","views/tickets/create/FETextField.tsx","views/repaymentcontrol/management/chart-data/index.tsx","views/repaymentcontrol/management/chart-data/revenue-chart.tsx","views/repaymentcontrol/management/chart-data/revenue-chart-red.tsx","views/repaymentcontrol/management/LimitationListActions/index.tsx","hooks/usePagination.ts","views/repaymentcontrol/management/List/LimitationList.tsx","views/repaymentcontrol/management/List/index.tsx","views/repaymentcontrol/management/RevenueChartCard.tsx","views/repaymentcontrol/management/RevenueChartCardRed.tsx","views/repaymentcontrol/management/index.tsx","views/repaymentcontrol/limitation/action-limit/data.ts","views/repaymentcontrol/limitation/action-limit/index.tsx","views/repaymentcontrol/limitation/UserList.tsx","views/repaymentcontrol/limitation/fillter-limit/SelectDropDown.tsx","views/repaymentcontrol/limitation/fillter-limit/index.tsx","views/repaymentcontrol/limitation/index.tsx","views/repaymentcontrol/waitinglist/WaitingListActions/index.tsx","views/repaymentcontrol/waitinglist/index.tsx","views/repaymentcontrol/index.tsx"],"names":["FEDropDown","formik","title","data","sx","color","fontWeight","marginBottom","style","height","fontSize","id","name","defaultValue","values","orderStatus","value","onChange","handleChange","map","item","index","errors","error","FETextField","required","width","borderRadius","border","borderColor","padding","marginTop","chartData","RevenueChartCardData","type","options","chart","dataLabels","enabled","labels","colors","legend","show","position","fontFamily","itemMargin","horizontal","vertical","series","RevenueChartCardDataRed","OutlineInputStyle","styled","OutlinedInput","shouldForwardProp","theme","marginLeft","marginRight","paddingLeft","paddingRight","background","breakpoints","down","palette","mode","dark","icons","TransferIcon","DownloadIcon","UploadIcon","TrashIcon","refActionKanban","createRef","LimitationListActions","onClickTransfer","urlAddTicket","useTheme","useState","toggleTransfer","setToggleTransfer","useImperativeHandle","Box","display","icon","Button","onClick","minWidth","marginX","mb","src","flexGrow","placeholder","startAdornment","InputAdornment","stroke","size","grey","inputProps","variant","startIcon","component","Link","to","usePagination","itemsPerPage","currentPage","setCurrentPage","maxPage","Math","ceil","length","next","currentPage_","min","prev","max","jump","page","pageNumber","currentData","begin","end","slice","createData","partner","pos","pos_list","product","tranx_limit","daily_limit","monthly_limit","created_by","status","duration","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","pl","Checkbox","indeterminate","checked","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","EnhancedTableToolbar","Toolbar","p","pr","secondary","main","Typography","Tooltip","IconButton","LimitationList","React","setOrder","setOrderBy","selected","setSelected","setPage","dense","emptyRows","count","dd","TableContainer","Table","target","newSelectedId","n","TableBody","row","isItemSelected","indexOf","labelId","hover","role","tabIndex","textDecoration","selectedIndex","newSelected","concat","handleClick","styles","cellText","colSpan","Stack","alignItems","mt","Pagination","newPage","LimitationListStylePage1","MainCard","content","RevenueChartCard","matchDownMd","useMediaQuery","matchDownXs","anchorEl","setAnchorEl","setOpen","handleClose","Grid","container","spacing","justifyContent","ButtonBase","className","currentTarget","disableRipple","Menu","keepMounted","open","Boolean","onClose","anchorOrigin","transformOrigin","MenuItem","xs","sm","md","verticalAlign","primary","RevenueChartCardRed","ManagementPage","dispatch","useDispatch","gridSpacing","lg","contentSX","setMode","province","district","ward","level","subPartner","productName","validationSchema","yup","invoiceNumber","customerName","customerEmail","email","customerPhone","customerAddress","refActionLimitation","ActionLimitation","useFormik","initialValues","onSubmit","Dialog","maxWidth","fullWidth","InputLabel","TextField","multiline","pt","partnerID","subPartnerID","posName","upperLevel","activeLimitation","deadline","UserList","SelectDropDown","Select","FormHelperText","FilterSelectLimitation","Limitation","WaitingListActions","subpartner","description","WaitingList","TabPanel","children","other","hidden","tabsOption","Profile1","setValue","Tabs","indicatorColor","textColor","newValue","minHeight","py","px","mr","flexDirection","bottom","tab","Tab","a11yProps"],"mappings":"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","file":"static/js/12.27c855d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/download.cbe09580.svg\";","export default __webpack_public_path__ + \"static/media/transfer.f4264e24.svg\";","export default __webpack_public_path__ + \"static/media/trash.7c6044b8.svg\";","export default __webpack_public_path__ + \"static/media/upload.7387d65f.svg\";","import { FormHelperText, InputLabel, MenuItem, Select, Stack } from '@mui/material';\r\nimport { map } from 'lodash';\r\nimport React from 'react';\r\n\r\ninterface Props {\r\n    formik: any;\r\n    title: string;\r\n    data?: any[];\r\n}\r\nconst FEDropDown = ({ formik, title = '', data = [] }: Props) => {\r\n    return (\r\n        <Stack>\r\n            <InputLabel sx={{ color: '#4C4C4C', fontWeight: 'bold', marginBottom: 1 }}>{title}</InputLabel>\r\n            <Select\r\n                style={{ height: 36, fontSize: 12, color: 'red !important' }}\r\n                id=\"orderStatus\"\r\n                name=\"orderStatus\"\r\n                defaultValue={formik.values.orderStatus}\r\n                value={formik.values.orderStatus}\r\n                onChange={formik.handleChange}\r\n            >\r\n                {map(data, (item, index) => (\r\n                    <MenuItem key={index} value={item}>\r\n                        {item}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n            {formik.errors.orderStatus && <FormHelperText error>{formik.errors.orderStatus}</FormHelperText>}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default FEDropDown;\r\n","import { TextField, InputLabel, MenuItem, Select, Stack, OutlinedInput } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst FETextField = ({ formik, title }) => {\r\n    return (\r\n        <div>\r\n            <InputLabel sx={{ color: '#4C4C4C', fontWeight: 'bold', marginBottom: 1 }} required>\r\n                {title}\r\n            </InputLabel>\r\n            <input\r\n                style={{\r\n                    width: '100%',\r\n                    height: 36,\r\n                    borderRadius: 8,\r\n                    border: '1px solid',\r\n                    borderColor: '#e5e5e5',\r\n                    padding: `4px 12px`,\r\n                    marginTop: 4\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FETextField;\r\n","// chart data\r\nimport RevenueChartCardData from './revenue-chart';\r\nimport RevenueChartCardDataRed from './revenue-chart-red';\r\n\r\n// ==============================|| WIDGET - CHART DATA OBJECT ||============================== //\r\n\r\nconst chartData = {\r\n    RevenueChartCardData,\r\n    RevenueChartCardDataRed\r\n};\r\n\r\nexport default chartData;\r\n","import { Props } from 'react-apexcharts';\r\n\r\n// ==============================|| WIDGET - REVENUE CHART ||============================== //\r\n\r\nconst chartData: Props = {\r\n    height: 228,\r\n    type: 'donut',\r\n    options: {\r\n        chart: {\r\n            id: 'revenue-chart'\r\n        },\r\n        dataLabels: {\r\n            enabled: true\r\n        },\r\n        labels: ['Daily Limit', 'Monthly Limit'],\r\n        colors: ['#2F80ED', '#BB6BD9'],\r\n        legend: {\r\n            show: false,\r\n            position: 'bottom',\r\n            fontFamily: 'inherit',\r\n            labels: {\r\n                colors: 'inherit'\r\n            },\r\n            itemMargin: {\r\n                horizontal: 10,\r\n                vertical: 10\r\n            }\r\n        }\r\n    },\r\n    series: [75, 25]\r\n};\r\nexport default chartData;\r\n","import { Props } from 'react-apexcharts';\r\n\r\n// ==============================|| WIDGET - REVENUE CHART ||============================== //\r\n\r\nconst chartData: Props = {\r\n    height: 228,\r\n    type: 'donut',\r\n    options: {\r\n        chart: {\r\n            id: 'revenue-chart-red'\r\n        },\r\n        dataLabels: {\r\n            enabled: true\r\n        },\r\n        labels: ['Daily Limit', 'Monthly Limit'],\r\n        colors: ['#f44336', '#F2994A'],\r\n        legend: {\r\n            show: false,\r\n            position: 'bottom',\r\n            fontFamily: 'inherit',\r\n            labels: {\r\n                colors: 'inherit'\r\n            },\r\n            itemMargin: {\r\n                horizontal: 10,\r\n                vertical: 10\r\n            }\r\n        }\r\n    },\r\n    series: [75, 25]\r\n};\r\nexport default chartData;\r\n","import { Box, Button, InputAdornment, OutlinedInput } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { shouldForwardProp } from '@mui/system';\r\nimport { IconPlus, IconSearch } from '@tabler/icons';\r\nimport DownloadIcon from 'assets/images/icons/download.svg';\r\nimport TransferIcon from 'assets/images/icons/transfer.svg';\r\nimport TrashIcon from 'assets/images/icons/trash.svg';\r\nimport UploadIcon from 'assets/images/icons/upload.svg';\r\nimport { map } from 'lodash';\r\nimport { createRef, useImperativeHandle, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FormControlSelect from 'ui-component/extended/Form/FormControlSelect';\r\n\r\nconst OutlineInputStyle = styled(OutlinedInput, { shouldForwardProp })(({ theme }) => ({\r\n    width: 434,\r\n    height: 36,\r\n    marginLeft: 16,\r\n    marginRight: 16,\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    '& input': {\r\n        background: 'transparent !important',\r\n        paddingLeft: '4px !important'\r\n    },\r\n    [theme.breakpoints.down('lg')]: {\r\n        width: 250\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n        width: 100,\r\n        // marginLeft: 4,\r\n        background: theme.palette.mode === 'dark' ? theme.palette.dark[800] : '#fff'\r\n    }\r\n}));\r\n\r\n// select options\r\nconst currencies = [\r\n    {\r\n        value: '',\r\n        label: 'None'\r\n    },\r\n    {\r\n        value: '1',\r\n        label: 'demo@company.com'\r\n    },\r\n    {\r\n        value: '2',\r\n        label: 'Lerrya@company.com'\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'judiya@company.com'\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'taju_diya@company.com'\r\n    },\r\n    {\r\n        value: '4',\r\n        label: 'judiyaLerrya@company.com'\r\n    }\r\n];\r\n\r\nconst icons = [TransferIcon, DownloadIcon, UploadIcon, TrashIcon];\r\n\r\nexport const refActionKanban = createRef();\r\nconst LimitationListActions = ({ onClickTransfer, urlAddTicket }) => {\r\n    const theme = useTheme();\r\n    const [toggleTransfer, setToggleTransfer] = useState(false);\r\n\r\n    useImperativeHandle(\r\n        refActionKanban,\r\n        () => ({\r\n            toggleTransfer: () => setToggleTransfer(!toggleTransfer)\r\n        }),\r\n        []\r\n    );\r\n    return (\r\n        <Box>\r\n            <div style={{ marginLeft: 8, marginBottom: 8, color: '#008345' }}>Limitation List</div>\r\n            <Box sx={{ display: 'flex' }}>\r\n                {map(icons, (icon, index) => (\r\n                    <Button\r\n                        onClick={() => {\r\n                            switch (index) {\r\n                                case 0:\r\n                                    onClickTransfer();\r\n                                    break;\r\n\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        }}\r\n                        key={index}\r\n                        sx={{ minWidth: 32, padding: 0, marginX: 1, mb: 1 }}\r\n                    >\r\n                        <img src={icon} />\r\n                    </Button>\r\n                ))}\r\n\r\n                <Box sx={{ flexGrow: 1 }} />\r\n\r\n                <Box sx={{ display: 'flex' }}>\r\n                    <OutlineInputStyle\r\n                        id=\"input-search-header\"\r\n                        // value={'value'}\r\n                        // onChange={(e) => setValue(e.target.value)}\r\n                        placeholder=\"Search\"\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\r\n                            </InputAdornment>\r\n                        }\r\n                        aria-describedby=\"search-helper-text\"\r\n                        inputProps={{ 'aria-label': 'weight' }}\r\n                        sx={{ height: 36 }}\r\n                    />\r\n                    {/* \r\n                    <FormControlSelect currencies={currencies} />\r\n                    <FormControlSelect currencies={currencies} /> */}\r\n                </Box>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    sx={{ borderColor: '#E5E5E5', color: '#008345', borderRadius: 2, height: 36, fontSize: 12, fontWeight: 'bold' }}\r\n                    startIcon={<IconPlus color=\"#008345\" size={18} />}\r\n                    component={Link}\r\n                    to={urlAddTicket}\r\n                >\r\n                    Add New\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default LimitationListActions;\r\n","import React, { useState } from 'react';\r\n\r\nfunction usePagination(data, itemsPerPage) {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const maxPage = Math.ceil(data.length / itemsPerPage);\r\n\r\n    function currentData() {\r\n        const begin = (currentPage - 1) * itemsPerPage;\r\n        const end = begin + itemsPerPage;\r\n        return data.slice(begin, end);\r\n    }\r\n\r\n    function next() {\r\n        setCurrentPage((currentPage_) => Math.min(currentPage_ + 1, maxPage));\r\n    }\r\n\r\n    function prev() {\r\n        setCurrentPage((currentPage_) => Math.max(currentPage_ - 1, 1));\r\n    }\r\n\r\n    function jump(page) {\r\n        const pageNumber = Math.max(1, page);\r\n        setCurrentPage((currentPage_) => Math.min(pageNumber, maxPage));\r\n    }\r\n\r\n    return { next, prev, jump, currentData, currentPage, maxPage };\r\n}\r\n\r\nexport default usePagination;\r\n","// assets\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n// material-ui\r\nimport {\r\n    Box,\r\n    Checkbox,\r\n    IconButton,\r\n    Pagination,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TableSortLabel,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography\r\n} from '@mui/material';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport usePagination from 'hooks/usePagination';\r\nimport * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArrangementOrder, EnhancedTableHeadProps, GetComparator, HeadCell, KeyedObject } from 'types';\r\nimport { LimitationListItem } from 'types/repaymentcontrol';\r\n\r\n// table data\r\ntype CreateDataType = {\r\n    name: number;\r\n    calories: number;\r\n    fat: number;\r\n    carbs: number;\r\n    protein: number;\r\n};\r\nfunction createData(\r\n    id: string,\r\n    partner: string,\r\n    pos: string,\r\n    pos_list: string,\r\n    product: string,\r\n    tranx_limit: number,\r\n    daily_limit: number,\r\n    monthly_limit?: number,\r\n    created_by?: string,\r\n    status?: 'Active' | 'Under Review' | 'Canceled' | 'No Start',\r\n    duration?: string\r\n) {\r\n    return {\r\n        id,\r\n        partner,\r\n        pos,\r\n        pos_list,\r\n        product,\r\n        tranx_limit,\r\n        daily_limit,\r\n        monthly_limit,\r\n        created_by,\r\n        status,\r\n        duration\r\n    };\r\n}\r\n\r\nconst rows: LimitationListItem[] = [\r\n    createData(\r\n        '123-01',\r\n        'SMARTNET',\r\n        'All Pos',\r\n        '560',\r\n        'All Product',\r\n        50000000,\r\n        350000000,\r\n        10235000000,\r\n        'Trang.Pham',\r\n        'Active',\r\n        '01/01/2021-31/12/2021'\r\n    ),\r\n    createData(\r\n        '123-01',\r\n        'SMARTNET',\r\n        'All Pos',\r\n        '560',\r\n        'All Product',\r\n        50000000,\r\n        350000000,\r\n        10235000000,\r\n        'Trang.Pham',\r\n        'Active',\r\n        '01/01/2021-31/12/2021'\r\n    ),\r\n    createData(\r\n        '123-01',\r\n        'SMARTNET',\r\n        'All Pos',\r\n        '560',\r\n        'All Product',\r\n        50000000,\r\n        350000000,\r\n        10235000000,\r\n        'Trang.Pham',\r\n        'Active',\r\n        '01/01/2021-31/12/2021'\r\n    ),\r\n    createData(\r\n        '123-01',\r\n        'SMARTNET',\r\n        'All Pos',\r\n        '560',\r\n        'All Product',\r\n        50000000,\r\n        350000000,\r\n        10235000000,\r\n        'Trang.Pham',\r\n        'Active',\r\n        '01/01/2021-31/12/2021'\r\n    ),\r\n    createData(\r\n        '123-01',\r\n        'SMARTNET',\r\n        'All Pos',\r\n        '560',\r\n        'All Product',\r\n        50000000,\r\n        350000000,\r\n        10235000000,\r\n        'Trang.Pham',\r\n        'Active',\r\n        '01/01/2021-31/12/2021'\r\n    )\r\n];\r\n\r\n// table filter\r\nfunction descendingComparator(a: KeyedObject, b: KeyedObject, orderBy: string) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst getComparator: GetComparator = (order, orderBy) =>\r\n    order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n\r\nfunction stableSort(array: LimitationListItem[], comparator: (a: KeyedObject, b: KeyedObject) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0] as LimitationListItem, b[0] as LimitationListItem);\r\n        if (order !== 0) return order;\r\n        return (a[1] as number) - (b[1] as number);\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// table header\r\nconst headCells: HeadCell[] = [\r\n    {\r\n        id: 'id',\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: 'No'\r\n    },\r\n    {\r\n        id: 'partner',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Partner'\r\n    },\r\n    {\r\n        id: 'pos',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'POS#'\r\n    },\r\n    {\r\n        id: 'pos_list',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'POS List'\r\n    },\r\n    {\r\n        id: 'product',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Product'\r\n    },\r\n    {\r\n        id: 'tranx_limit',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Tranx Limit'\r\n    },\r\n    {\r\n        id: 'daily_limit',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Daily Limit'\r\n    },\r\n    {\r\n        id: 'monthly_limit',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Monthly Limit'\r\n    },\r\n    {\r\n        id: 'created_by',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Created by'\r\n    },\r\n    {\r\n        id: 'status',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Status'\r\n    },\r\n    {\r\n        id: 'duration',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Duration'\r\n    }\r\n];\r\n\r\n// ==============================|| TABLE - HEADER ||============================== //\r\n\r\ninterface TableDataEnhancedTableHead extends EnhancedTableHeadProps {}\r\n\r\nfunction EnhancedTableHead({ onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort }: TableDataEnhancedTableHead) {\r\n    const createSortHandler = (property: string) => (event: React.SyntheticEvent) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\r\n                    <Checkbox\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align=\"center\"\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <Box component=\"span\" sx={visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </Box>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\n// ==============================|| TABLE - HEADER TOOLBAR ||============================== //\r\n\r\nconst EnhancedTableToolbar = ({ numSelected }: { numSelected: number }) => (\r\n    <Toolbar\r\n        sx={{\r\n            p: 0,\r\n            pl: 1,\r\n            pr: 1,\r\n            ...(numSelected > 0 && {\r\n                color: (theme) => theme.palette.secondary.main\r\n            })\r\n        }}\r\n    >\r\n        <Typography variant=\"h6\" id=\"tableTitle\">\r\n            POS List - {numSelected} Selected\r\n        </Typography>\r\n\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        {numSelected > 0 && (\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton size=\"large\">\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n);\r\n\r\n// ==============================|| TABLE - DATA TABLE ||============================== //\r\n\r\nexport default function LimitationList() {\r\n    const [order, setOrder] = React.useState<ArrangementOrder>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<string>('calories');\r\n    const [selected, setSelected] = React.useState<string[]>([]);\r\n    const [page, setPage] = React.useState(1);\r\n    const [dense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleRequestSort = (event: React.SyntheticEvent, property: string) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.checked) {\r\n            const newSelectedId: string[] = rows.map((n) => n.id);\r\n            setSelected(newSelectedId);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLTableRowElement> | undefined, name: string) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected: string[] = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event: any, newPage: number) => {\r\n        setPage(newPage);\r\n        dd.jump(newPage);\r\n    };\r\n\r\n    const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows = page > 0 ? Math.max(0, page * 3 - rows.length) : 0;\r\n    const PER_PAGE = 3;\r\n    const count = Math.ceil(rows.length / PER_PAGE);\r\n    const dd = usePagination(rows, PER_PAGE);\r\n\r\n    return (\r\n        <div>\r\n            <EnhancedTableToolbar numSelected={selected.length} />\r\n\r\n            {/* table */}\r\n            <TableContainer>\r\n                <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\" size={dense ? 'small' : 'medium'}>\r\n                    <EnhancedTableHead\r\n                        numSelected={selected.length}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onSelectAllClick={handleSelectAllClick}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={rows.length}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(dd.currentData(), getComparator(order, orderBy)).map((row, index) => {\r\n                            /** Make sure no display bugs if row isn't an OrderData object */\r\n                            if (typeof row === 'number') return null;\r\n                            const isItemSelected = isSelected(row.id);\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n                            return (\r\n                                <TableRow\r\n                                    hover\r\n                                    component={Link}\r\n                                    to={`/tickets/${row.id}`}\r\n                                    role=\"checkbox\"\r\n                                    aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    selected={isItemSelected}\r\n                                    sx={{ textDecoration: 'none' }}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\" sx={{ pl: 3 }} onClick={(event: any) => handleClick(event, row.id)}>\r\n                                        <Checkbox\r\n                                            size=\"small\"\r\n                                            color=\"primary\"\r\n                                            checked={isItemSelected}\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"left\">\r\n                                        {row.id}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"left\">\r\n                                        {row.partner}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"left\">\r\n                                        {row.pos}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.pos_list}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.product}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.tranx_limit}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.daily_limit}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.monthly_limit}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.created_by}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.status}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.duration}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                        {emptyRows > 0 && (\r\n                            <TableRow\r\n                                style={{\r\n                                    height: (dense ? 33 : 53) * emptyRows\r\n                                }}\r\n                            >\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {/* table data */}\r\n            <Stack sx={{ alignItems: 'center', mt: 2 }}>\r\n                <Pagination count={count} color=\"primary\" page={page} onChange={handleChangePage} />\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    cellText: {\r\n        fontSize: 10\r\n    }\r\n};\r\n","// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport React from 'react';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport LimitationList from './LimitationList';\r\n\r\n// ==============================|| USER LIST STYLE 1 ||============================== //\r\n\r\nconst LimitationListStylePage1 = () => {\r\n    const theme = useTheme();\r\n    const [anchorEl, setAnchorEl] = React.useState<Element | ((element: Element) => Element) | null | undefined>(null);\r\n    const handleClick = (event: React.MouseEvent) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return (\r\n        <MainCard content={false} border={false}>\r\n            <LimitationList />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default LimitationListStylePage1;\r\n","// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, ButtonBase, Divider, Grid, IconButton, Menu, MenuItem, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// third party\r\nimport Chart, { Props as ChartProps } from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { useState } from 'react';\r\n\r\n// assets\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\nimport RectangleRoundedIcon from '@mui/icons-material/RectangleRounded';\r\n\r\n// ===========================|| REVENUE CHART CARD ||=========================== //\r\n\r\nconst RevenueChartCard = ({ chartData }: { chartData: ChartProps }) => {\r\n    const theme = useTheme();\r\n    const matchDownMd = useMediaQuery(theme.breakpoints.down('md'));\r\n    const matchDownXs = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const blockSXBlue = {\r\n        p: 1,\r\n        border: 1,\r\n        borderColor: '#E5E5E5'\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = useState<Element | ((element: Element) => Element) | null | undefined>(null);\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement> | undefined) => {\r\n        setAnchorEl(event?.currentTarget);\r\n    };\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const iconSXBlue = {\r\n        fontSize: '0.875rem',\r\n        marginRight: 0.2,\r\n        verticalAlign: 'sub',\r\n        color: '#2F80ED'\r\n    };\r\n\r\n    const iconSXPurple = {\r\n        fontSize: '0.875rem',\r\n        marginRight: 0.2,\r\n        verticalAlign: 'sub',\r\n        color: '#BB6BD9'\r\n    };\r\n\r\n    return (\r\n        <MainCard sx={blockSXBlue}>\r\n            <Grid container spacing={2} direction={matchDownMd && !matchDownXs ? 'row' : 'column'}>\r\n                <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\" color=\"error.main\">\r\n                            SMARTNET\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        123-01\r\n                        <ButtonBase\r\n                            className=\"more-button\"\r\n                            sx={{ borderRadius: '12px' }}\r\n                            onClick={handleClick}\r\n                            aria-controls=\"menu-comment\"\r\n                            aria-haspopup=\"true\"\r\n                        >\r\n                            <IconButton component=\"span\" size=\"small\" disableRipple>\r\n                                <MoreVertTwoToneIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                        </ButtonBase>\r\n                        <Menu\r\n                            id=\"menu-comment\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                            variant=\"selectedMenu\"\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right'\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right'\r\n                            }}\r\n                        >\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    // handlerDetails();\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    setOpen(true);\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </MenuItem>\r\n                        </Menu>\r\n                        {/* <Menu\r\n                            id=\"menu-popular-card\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                            variant=\"selectedMenu\"\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right'\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right'\r\n                            }}\r\n                        >\r\n                            <MenuItem onClick={handleClose}> Today</MenuItem>\r\n                            <MenuItem onClick={handleClose}> This Month</MenuItem>\r\n                            <MenuItem onClick={handleClose}> This Year </MenuItem>\r\n                        </Menu> */}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={7} md={12}>\r\n                    <Chart {...chartData} />\r\n                </Grid>\r\n                {/* <Box sx={{ display: { xs: 'none', sm: 'block', md: 'none' } }}>\r\n                    <Grid item>\r\n                        <Divider />\r\n                    </Grid>\r\n                </Box> */}\r\n                <Grid item container justifyContent=\"space-around\" alignItems=\"center\" xs={12} sm={5} md={12}>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\">\r\n                                <RectangleRoundedIcon sx={iconSXBlue} />\r\n                                Daily Limit\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\" align=\"right\">\r\n                                75%\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Grid container direction=\"column\">\r\n                            <Box sx={{ color: theme.palette.primary.main }}>\r\n                                <Typography variant=\"h4\" align=\"right\" style={{ color: '#2F80ED' }}>\r\n                                    $263,040,000\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"space-around\" alignItems=\"center\" xs={12} sm={5} md={12}>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\">\r\n                                <RectangleRoundedIcon sx={iconSXPurple} /> Monthly Limit\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\" align=\"right\">\r\n                                25%\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Grid container direction=\"column\">\r\n                            <Box sx={{ color: theme.palette.primary.main }}>\r\n                                <Typography variant=\"h4\" align=\"right\" color=\"inherit\" style={{ color: '#BB6BD9' }}>\r\n                                    $263,040,000\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"space-around\" alignItems=\"center\" xs={12} sm={5} md={12}>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\">Successfull:</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\" align=\"right\">\r\n                                768,148\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"space-around\" alignItems=\"center\" xs={12} sm={5} md={12}>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\">Failed:</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\" align=\"right\">\r\n                                154\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default RevenueChartCard;\r\n","// material-ui\r\n// assets\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\nimport RectangleRoundedIcon from '@mui/icons-material/RectangleRounded';\r\nimport { Box, ButtonBase, Grid, IconButton, Menu, MenuItem, Typography, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useState } from 'react';\r\n// third party\r\nimport Chart, { Props as ChartProps } from 'react-apexcharts';\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ===========================|| REVENUE CHART CARD ||=========================== //\r\n\r\nconst RevenueChartCardRed = ({ chartData }: { chartData: ChartProps }) => {\r\n    const theme = useTheme();\r\n    const matchDownMd = useMediaQuery(theme.breakpoints.down('md'));\r\n    const matchDownXs = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const blockSXWarning = {\r\n        p: 1,\r\n        border: 1,\r\n        borderColor: 'error.main'\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = useState<Element | ((element: Element) => Element) | null | undefined>(null);\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement> | undefined) => {\r\n        setAnchorEl(event?.currentTarget);\r\n    };\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const iconSXWarning = {\r\n        fontSize: '0.875rem',\r\n        marginRight: 0.2,\r\n        verticalAlign: 'sub',\r\n        color: 'error.main'\r\n    };\r\n\r\n    const iconSXOrange = {\r\n        fontSize: '0.875rem',\r\n        marginRight: 0.2,\r\n        verticalAlign: 'sub',\r\n        color: '#F2994A'\r\n    };\r\n\r\n    return (\r\n        <MainCard sx={blockSXWarning}>\r\n            <Grid container spacing={2} direction={matchDownMd && !matchDownXs ? 'row' : 'column'}>\r\n                <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\" color=\"error.main\">\r\n                            VIETTEL\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        123-01\r\n                        <ButtonBase\r\n                            className=\"more-button\"\r\n                            sx={{ borderRadius: '12px' }}\r\n                            onClick={handleClick}\r\n                            aria-controls=\"menu-comment\"\r\n                            aria-haspopup=\"true\"\r\n                        >\r\n                            <IconButton component=\"span\" size=\"small\" disableRipple>\r\n                                <MoreVertTwoToneIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                        </ButtonBase>\r\n                        <Menu\r\n                            id=\"menu-comment\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                            variant=\"selectedMenu\"\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right'\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right'\r\n                            }}\r\n                        >\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    // handlerDetails();\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    setOpen(true);\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </MenuItem>\r\n                        </Menu>\r\n                        {/* <Menu\r\n                            id=\"menu-popular-card\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                            variant=\"selectedMenu\"\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right'\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right'\r\n                            }}\r\n                        >\r\n                            <MenuItem onClick={handleClose}> Today</MenuItem>\r\n                            <MenuItem onClick={handleClose}> This Month</MenuItem>\r\n                            <MenuItem onClick={handleClose}> This Year </MenuItem>\r\n                        </Menu> */}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={7} md={12}>\r\n                    <Chart {...chartData} />\r\n                </Grid>\r\n                {/* <Box sx={{ display: { xs: 'none', sm: 'block', md: 'none' } }}>\r\n                    <Grid item>\r\n                        <Divider />\r\n                    </Grid>\r\n                </Box> */}\r\n                <Grid item container justifyContent=\"space-around\" alignItems=\"center\" xs={12} sm={5} md={12}>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\">\r\n                                <RectangleRoundedIcon sx={iconSXWarning} />\r\n                                Daily Limit\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\" align=\"right\">\r\n                                75%\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Grid container direction=\"column\">\r\n                            <Box sx={{ color: theme.palette.primary.main }}>\r\n                                <Typography variant=\"h4\" align=\"right\" style={{ color: theme.palette.error.main }}>\r\n                                    $263,040,000\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"space-around\" alignItems=\"center\" xs={12} sm={5} md={12}>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\">\r\n                                <RectangleRoundedIcon sx={iconSXOrange} /> Monthly Limit\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\" align=\"right\">\r\n                                25%\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Grid container direction=\"column\">\r\n                            <Box sx={{ color: theme.palette.primary.main }}>\r\n                                <Typography variant=\"h4\" align=\"right\" color=\"inherit\" style={{ color: '#F2994A' }}>\r\n                                    $263,040,000\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"space-around\" alignItems=\"center\" xs={12} sm={5} md={12}>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\">Successfull:</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\" align=\"right\">\r\n                                768,148\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"space-around\" alignItems=\"center\" xs={12} sm={5} md={12}>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\">Failed:</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography variant=\"h6\" align=\"right\">\r\n                                154\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default RevenueChartCardRed;\r\n","import { Grid } from '@mui/material';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { setMode } from 'store/slices/kanban';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n// chart data\r\nimport chartData from './chart-data';\r\nimport LimitationListActions from './LimitationListActions';\r\nimport LimitationListStylePage1 from './List';\r\nimport RevenueChartCard from './RevenueChartCard';\r\nimport RevenueChartCardRed from './RevenueChartCardRed';\r\n\r\n// ================================|| CHART ||================================ //\r\nexport default function ManagementPage() {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={gridSpacing} alignItems=\"center\">\r\n                <Grid item xs={12} sm={6} lg={3}>\r\n                    <RevenueChartCard chartData={chartData.RevenueChartCardData} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} lg={3}>\r\n                    <RevenueChartCard chartData={chartData.RevenueChartCardData} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} lg={3}>\r\n                    <RevenueChartCardRed chartData={chartData.RevenueChartCardDataRed} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} lg={3}>\r\n                    <RevenueChartCard chartData={chartData.RevenueChartCardData} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Grid item xs={12}>\r\n                        <Box sx={{ display: 'flex' }}>\r\n                            <Grid container>\r\n                                <Grid item xs={12}>\r\n                                    <MainCard contentSX={{ p: 2 }}>\r\n                                        <LimitationListActions\r\n                                            onClickTransfer={() => dispatch(setMode())}\r\n                                            urlAddTicket=\"/tickets/create-ticket\"\r\n                                        />\r\n                                        <LimitationListStylePage1 />\r\n                                    </MainCard>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","const province = ['TP. HCM', 'Ha Noi'];\r\nconst district = ['Hóc Môn', 'Củ Chi', 'Quận 1'];\r\nconst ward = ['Tân Xuân', 'Aribank'];\r\nconst level = ['Smartpay ', 'TGDĐ', 'Viettel ', ' Circle K'];\r\n\r\nconst partner = ['VietCombank', 'Aribank'];\r\n\r\nconst subPartner = ['Smartpay ', 'TGDĐ', 'Viettel ', ' Circle K'];\r\nconst productName = ['By Teller’s mistake', 'By Customer’s request', 'By Banca’s team'];\r\n\r\nexport { province, district, ward, level, partner, subPartner, productName };\r\n","import {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Divider,\r\n    Grid,\r\n    InputAdornment,\r\n    InputLabel,\r\n    MenuItem,\r\n    OutlinedInput,\r\n    Paper,\r\n    PaperProps,\r\n    Select,\r\n    SelectChangeEvent,\r\n    Stack,\r\n    TextField,\r\n    Typography\r\n} from '@mui/material';\r\nimport TransferIcon from 'assets/images/icons/transfer.svg';\r\nimport DownloadIcon from 'assets/images/icons/download.svg';\r\nimport UploadIcon from 'assets/images/icons/upload.svg';\r\nimport TrashIcon from 'assets/images/icons/trash.svg';\r\nimport { map } from 'lodash';\r\nimport { padding, shouldForwardProp } from '@mui/system';\r\nimport { IconSearch, IconPlus } from '@tabler/icons';\r\nimport React, { createRef, useImperativeHandle, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { LocalizationProvider } from '@mui/lab';\r\nimport FEDropDown from 'views/tickets/create/FEDropDown';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport FETextField from 'views/tickets/create/FETextField';\r\nimport { useFormik } from 'formik';\r\nimport { Theme, useTheme, styled } from '@mui/material/styles';\r\nimport product from 'store/slices/product';\r\nimport { partner, productName, subPartner } from './data';\r\n\r\nconst validationSchema = yup.object({\r\n    invoiceNumber: yup.string().required('Invoice Number is Required'),\r\n    customerName: yup.string().required('Customer Name is Required'),\r\n    customerEmail: yup.string().email('Enter a valid email').required('Customer Email is Required'),\r\n    customerPhone: yup.string().min(10, 'Phone number should be of minimum 10 characters').required('Customer Phone is Required'),\r\n    customerAddress: yup.string().required('Customer Address is Required'),\r\n    orderStatus: yup.string().required('Order Status is required')\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250\r\n        }\r\n    }\r\n};\r\nconst OutlineInputStyle = styled(OutlinedInput, { shouldForwardProp })(({ theme }) => ({\r\n    width: 434,\r\n    height: 36,\r\n    marginLeft: 16,\r\n    marginRight: 16,\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    '& input': {\r\n        background: 'transparent !important',\r\n        paddingLeft: '4px !important'\r\n    },\r\n    [theme.breakpoints.down('lg')]: {\r\n        width: 250\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n        width: 100,\r\n        // marginLeft: 4,\r\n        background: theme.palette.mode === 'dark' ? theme.palette.dark[800] : '#fff'\r\n    }\r\n}));\r\n\r\nconst icons = [TransferIcon, DownloadIcon, UploadIcon, TrashIcon];\r\n\r\nfunction getStyles(name: string, provinceName: readonly string[], theme: Theme) {\r\n    return {\r\n        fontWeight: provinceName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\r\n    };\r\n}\r\n\r\nexport const refActionLimitation = createRef();\r\nconst ActionLimitation = ({ onClickTransfer, urlAddTicket }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            invoiceNumber: '',\r\n            customerName: '',\r\n            customerEmail: '',\r\n            customerPhone: '',\r\n            customerAddress: '',\r\n            orderStatus: 'pending'\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            if (values) {\r\n                setOpen(true);\r\n            }\r\n        }\r\n    });\r\n\r\n    const theme = useTheme();\r\n    const [toggleTransfer, setToggleTransfer] = useState(false);\r\n\r\n    useImperativeHandle(\r\n        refActionLimitation,\r\n        () => ({\r\n            toggleTransfer: () => setToggleTransfer(!toggleTransfer)\r\n        }),\r\n        []\r\n    );\r\n    return (\r\n        <Box>\r\n            <Box sx={{ display: 'flex' }}>\r\n                {map(icons, (icon, index) => (\r\n                    <Button\r\n                        onClick={() => {\r\n                            switch (index) {\r\n                                case 0:\r\n                                    onClickTransfer();\r\n                                    break;\r\n\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        }}\r\n                        key={index}\r\n                        sx={{ minWidth: 32, padding: 0, marginX: 1, mb: 1 }}\r\n                    >\r\n                        <img src={icon} />\r\n                    </Button>\r\n                ))}\r\n\r\n                <Box sx={{ flexGrow: 1 }} />\r\n\r\n                <Box sx={{}}>\r\n                    <OutlineInputStyle\r\n                        id=\"input-search-header\"\r\n                        // value={'value'}\r\n                        // onChange={(e) => setValue(e.target.value)}\r\n                        placeholder=\"Search\"\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\r\n                            </InputAdornment>\r\n                        }\r\n                        aria-describedby=\"search-helper-text\"\r\n                        inputProps={{ 'aria-label': 'weight' }}\r\n                        sx={{ height: 36 }}\r\n                    />\r\n                </Box>\r\n\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    sx={{ borderColor: '#E5E5E5', color: '#008345', borderRadius: 2, height: 36, fontSize: 12, fontWeight: 'bold' }}\r\n                    startIcon={<IconPlus color=\"#008345\" size={18} />}\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    Add New\r\n                </Button>\r\n            </Box>\r\n\r\n            {open && (\r\n                <div style={{}}>\r\n                    <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" fullWidth>\r\n                        <MainCard open={open} onClose={handleClose} sx={{ marginBottom: '-11px !important', marginTop: '-12px' }}>\r\n                            <form>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} md={6} mb={3}>\r\n                                        <h3 style={{ color: '#27AE60' }}> Add New Limitation</h3>\r\n                                        <p>\r\n                                            Limitation number: <strong>11122</strong>\r\n                                        </p>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={2}>\r\n                                        <FEDropDown formik={formik} title=\"Partner\" data={partner} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={2}>\r\n                                        <FEDropDown formik={formik} title=\"Sub-Partner\" data={subPartner} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={2}>\r\n                                        <FETextField formik={formik} title=\"POS#\" />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Stack>\r\n                                            <InputLabel sx={{ color: '#4C4C4C', fontWeight: 'bold', marginBottom: 1 }}>\r\n                                                Description\r\n                                            </InputLabel>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                id=\"customerAddress\"\r\n                                                name=\"customerAddress\"\r\n                                                defaultValue=\"I acknowledge terms and conditions.\"\r\n                                                multiline\r\n                                                rows={4}\r\n                                                placeholder=\"Enter Description\"\r\n                                            />\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                    <Grid container spacing={2} pt={4}>\r\n                                        <Grid item xs={12} md={2.5}>\r\n                                            <FEDropDown formik={formik} title=\"Product\" data={productName} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} md={2.5}>\r\n                                            <FETextField formik={formik} title=\"Transaction Limitation\" />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} md={2.5}>\r\n                                            <FETextField formik={formik} title=\"Daily Limitation\" />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} md={2.5}>\r\n                                            <FETextField formik={formik} title=\"Monthly Limitation\" />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} md={2}>\r\n                                            <FETextField formik={formik} title=\"Duration\" />\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid item sx={{ display: 'flex', justifyContent: 'flex-end' }} xs={12}>\r\n                                        <Button variant=\"contained\" sx={{ background: '#B3B3B3', fontSize: 12 }} onClick={handleClose}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button variant=\"contained\" sx={{ marginX: 1, fontSize: 12 }}>\r\n                                            Save as Draft\r\n                                        </Button>\r\n                                        <Button sx={{ background: '#27AE60', fontSize: 12 }} variant=\"contained\" type=\"submit\">\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        </MainCard>\r\n                    </Dialog>\r\n                </div>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ActionLimitation;\r\n","import * as React from 'react';\r\n\r\n// material-ui\r\nimport {\r\n    Box,\r\n    Checkbox,\r\n    IconButton,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableSortLabel,\r\n    TableRow,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography,\r\n    Pagination,\r\n    Grid,\r\n    Stack\r\n} from '@mui/material';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { KeyedObject, ArrangementOrder, EnhancedTableHeadProps, GetComparator, HeadCell } from 'types';\r\n\r\n// assets\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport usePagination from 'hooks/usePagination';\r\nimport { Link } from 'react-router-dom';\r\nimport { ListLimitation } from './Limititation';\r\nimport ActionLimitation from './action-limit';\r\nimport { dispatch } from 'store';\r\nimport { setMode } from 'store/slices/kanban';\r\n\r\n// table data\r\ntype CreateDataType = {\r\n    name: number;\r\n    calories: number;\r\n    fat: number;\r\n    carbs: number;\r\n    protein: number;\r\n};\r\nfunction createData(\r\n    id: string,\r\n    partnerID: any,\r\n    subPartnerID: any,\r\n    posName: any,\r\n    ward: any,\r\n    district: any,\r\n    province: string,\r\n    upperLevel: string,\r\n    activeLimitation: string,\r\n    deadline: any\r\n) {\r\n    return {\r\n        id,\r\n        partnerID,\r\n        subPartnerID,\r\n        posName,\r\n        ward,\r\n        district,\r\n        province,\r\n        upperLevel,\r\n        activeLimitation,\r\n        deadline\r\n    };\r\n}\r\n\r\nconst rows: ListLimitation[] = [\r\n    createData(\r\n        '1',\r\n        '12345',\r\n        '12345',\r\n        'Payoo',\r\n        'Nguyen Tran Thu Trang',\r\n        'Pham Nguyen Huong Giang',\r\n        'Repayment',\r\n        'Adjust Amount',\r\n        'Loan',\r\n        'Tran Thu Anh'\r\n    ),\r\n    createData(\r\n        '2',\r\n        '12345',\r\n        '12345',\r\n        'Payoo',\r\n        'Nguyen Tran Thu Trang',\r\n        'Pham Nguyen Huong Giang',\r\n        'Repayment',\r\n        'Adjust Amount',\r\n        'Loan',\r\n        'Tran Thu Anh'\r\n    ),\r\n    createData(\r\n        '3',\r\n        '12345',\r\n        '12345',\r\n        'Payoo',\r\n        'Nguyen Tran Thu Trang',\r\n        'Pham Nguyen Huong Giang',\r\n        'Repayment',\r\n        'Adjust Amount',\r\n        'Loan',\r\n        'Tran Thu Anh'\r\n    ),\r\n    createData(\r\n        '4',\r\n        '12345',\r\n        '12345',\r\n        'Payoo',\r\n        'Nguyen Tran Thu Trang',\r\n        'Pham Nguyen Huong Giang',\r\n        'Repayment',\r\n        'Adjust Amount',\r\n        'Loan',\r\n        'Tran Thu Anh'\r\n    ),\r\n    createData(\r\n        '5',\r\n        '12345',\r\n        '12345',\r\n        'Payoo',\r\n        'Nguyen Tran Thu Trang',\r\n        'Pham Nguyen Huong Giang',\r\n        'Repayment',\r\n        'Adjust Amount',\r\n        'Loan',\r\n        'Tran Thu Anh'\r\n    ),\r\n    createData(\r\n        '6',\r\n        '12345',\r\n        '12345',\r\n        'Payoo',\r\n        'Nguyen Tran Thu Trang',\r\n        'Pham Nguyen Huong Giang',\r\n        'Repayment',\r\n        'Adjust Amount',\r\n        'Loan',\r\n        'Tran Thu Anh'\r\n    ),\r\n    createData(\r\n        '7',\r\n        '12345',\r\n        '12345',\r\n        'Payoo',\r\n        'Nguyen Tran Thu Trang',\r\n        'Pham Nguyen Huong Giang',\r\n        'Repayment',\r\n        'Adjust Amount',\r\n        'Loan',\r\n        'Tran Thu Anh'\r\n    ),\r\n    createData(\r\n        '8',\r\n        '123422225',\r\n        '12345',\r\n        'Payoo',\r\n        'Nguyen Tran Thu Trang',\r\n        'Pham Nguyen Huong Giang',\r\n        'Repayment',\r\n        'Adjust Amount',\r\n        'Loan',\r\n        'Tran Thu Anh'\r\n    ),\r\n    createData(\r\n        '9',\r\n        '123453333',\r\n        '12345',\r\n        'Payoo',\r\n        'Nguyen Tran Thu Trang',\r\n        'Pham Nguyen Huong Giang',\r\n        'Repayment',\r\n        'Adjust Amount',\r\n        'Loan',\r\n        'Tran Thu Anh'\r\n    )\r\n];\r\n\r\n// table filter\r\nfunction descendingComparator(a: KeyedObject, b: KeyedObject, orderBy: string) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst getComparator: GetComparator = (order, orderBy) =>\r\n    order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n\r\nfunction stableSort(array: ListLimitation[], comparator: (a: KeyedObject, b: KeyedObject) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0] as ListLimitation, b[0] as ListLimitation);\r\n        if (order !== 0) return order;\r\n        return (a[1] as number) - (b[1] as number);\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// table header\r\nconst headCells: HeadCell[] = [\r\n    {\r\n        id: 'partnerID',\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: 'Partner ID'\r\n    },\r\n    {\r\n        id: 'subPartnerID',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Sub-Partner ID'\r\n    },\r\n    {\r\n        id: 'posName',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'POS name'\r\n    },\r\n    {\r\n        id: 'ward',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Ward'\r\n    },\r\n    {\r\n        id: 'district',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'District'\r\n    },\r\n    {\r\n        id: 'province',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Province'\r\n    },\r\n    {\r\n        id: 'upperLevel',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Upper Level'\r\n    },\r\n    {\r\n        id: 'activeLimitation',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Active Limitation'\r\n    },\r\n    {\r\n        id: 'deadline',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Deadline'\r\n    }\r\n];\r\n\r\n// ==============================|| TABLE - HEADER ||============================== //\r\n\r\ninterface TableDataEnhancedTableHead extends EnhancedTableHeadProps {}\r\n\r\nfunction EnhancedTableHead({ onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort }: TableDataEnhancedTableHead) {\r\n    const createSortHandler = (property: string) => (event: React.SyntheticEvent) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\r\n                    <Checkbox\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align=\"center\"\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <Box component=\"span\" sx={visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </Box>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\n// ==============================|| TABLE - HEADER TOOLBAR ||============================== //\r\n\r\nconst EnhancedTableToolbar = ({ numSelected }: { numSelected: number }) => (\r\n    <Toolbar\r\n        sx={{\r\n            p: 0,\r\n            pl: 1,\r\n            pr: 1,\r\n            ...(numSelected > 0 && {\r\n                color: (theme) => theme.palette.secondary.main\r\n            })\r\n        }}\r\n    >\r\n        <Typography variant=\"h6\" id=\"tableTitle\">\r\n            POS List - {numSelected} Selected\r\n        </Typography>\r\n\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        {numSelected > 0 && (\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton size=\"large\">\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n);\r\n\r\n// ==============================|| TABLE - DATA TABLE ||============================== //\r\n\r\nexport default function UserList() {\r\n    const [order, setOrder] = React.useState<ArrangementOrder>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<string>('calories');\r\n    const [selected, setSelected] = React.useState<string[]>([]);\r\n    const [page, setPage] = React.useState(1);\r\n    const [dense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleRequestSort = (event: React.SyntheticEvent, property: string) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.checked) {\r\n            const newSelectedId: string[] = rows.map((n) => n.id);\r\n            setSelected(newSelectedId);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLTableRowElement> | undefined, name: string) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected: string[] = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event: any, newPage: number) => {\r\n        setPage(newPage);\r\n        dd.jump(newPage);\r\n    };\r\n\r\n    const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows = page > 0 ? Math.max(0, page * 3 - rows.length) : 0;\r\n    const PER_PAGE = 3;\r\n    const count = Math.ceil(rows.length / PER_PAGE);\r\n    const dd = usePagination(rows, PER_PAGE);\r\n\r\n    return (\r\n        <div style={{ marginTop: '70px' }}>\r\n            <EnhancedTableToolbar numSelected={selected.length} />\r\n            <ActionLimitation onClickTransfer={() => dispatch(setMode())} urlAddTicket=\"/tickets/create-ticket\" />\r\n            <TableContainer>\r\n                <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\" size={dense ? 'small' : 'medium'}>\r\n                    <EnhancedTableHead\r\n                        numSelected={selected.length}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onSelectAllClick={handleSelectAllClick}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={rows.length}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(dd.currentData(), getComparator(order, orderBy)).map((row, index) => {\r\n                            /** Make sure no display bugs if row isn't an OrderData object */\r\n                            if (typeof row === 'number') return null;\r\n                            const isItemSelected = isSelected(row.id);\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n                            return (\r\n                                <TableRow\r\n                                    hover\r\n                                    component={Link}\r\n                                    to={`/tickets/${row.id}`}\r\n                                    role=\"checkbox\"\r\n                                    aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    selected={isItemSelected}\r\n                                    sx={{ textDecoration: 'none' }}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\" sx={{ pl: 3 }} onClick={(event: any) => handleClick(event, row.id)}>\r\n                                        <Checkbox\r\n                                            size=\"small\"\r\n                                            color=\"primary\"\r\n                                            checked={isItemSelected}\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </TableCell>\r\n\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.partnerID}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.subPartnerID}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.posName}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.ward}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.district}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.province}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.upperLevel}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.activeLimitation}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.deadline}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                        {emptyRows > 0 && (\r\n                            <TableRow\r\n                                style={{\r\n                                    height: (dense ? 33 : 53) * emptyRows\r\n                                }}\r\n                            >\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {/* table data */}\r\n            <Stack sx={{ alignItems: 'center', mt: 2 }}>\r\n                <Pagination count={count} color=\"primary\" page={page} onChange={handleChangePage} />\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    cellText: {\r\n        fontSize: 10\r\n    }\r\n};\r\n","import { FormHelperText, InputLabel, MenuItem, Select, Stack } from '@mui/material';\r\nimport { map } from 'lodash';\r\nimport React from 'react';\r\n\r\ninterface Props {\r\n    formik: any;\r\n    title: string;\r\n    data?: any[];\r\n}\r\nconst SelectDropDown = ({ formik, title = '', data = [] }: Props) => {\r\n    return (\r\n        <Stack>\r\n            <InputLabel sx={{ color: '#4C4C4C', fontWeight: 'bold', marginBottom: 1 }}>{title}</InputLabel>\r\n            <Select\r\n                style={{ height: 36, fontSize: 12, color: 'red !important' }}\r\n                id=\"orderStatus\"\r\n                name=\"orderStatus\"\r\n                defaultValue={formik.values.orderStatus}\r\n                value={formik.values.orderStatus}\r\n                onChange={formik.handleChange}\r\n            >\r\n                {map(data, (item, index) => (\r\n                    <MenuItem key={index} value={item}>\r\n                        {item}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n            {formik.errors.orderStatus && <FormHelperText error>{formik.errors.orderStatus}</FormHelperText>}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default SelectDropDown;\r\n","import * as React from 'react';\r\nimport { Theme, useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport { Grid, Button, Typography } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport FEDropDown from 'views/tickets/create/FEDropDown';\r\nimport { district, level, province, ward } from '../action-limit/data';\r\nimport * as yup from 'yup';\r\nimport SelectDropDown from './SelectDropDown';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250\r\n        }\r\n    }\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n    invoiceNumber: yup.string().required('Invoice Number is Required'),\r\n    customerName: yup.string().required('Customer Name is Required'),\r\n    customerEmail: yup.string().email('Enter a valid email').required('Customer Email is Required'),\r\n    customerPhone: yup.string().min(10, 'Phone number should be of minimum 10 characters').required('Customer Phone is Required'),\r\n    customerAddress: yup.string().required('Customer Address is Required'),\r\n    orderStatus: yup.string().required('Order Status is required')\r\n});\r\nexport default function FilterSelectLimitation() {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            invoiceNumber: '',\r\n            customerName: '',\r\n            customerEmail: '',\r\n            customerPhone: '',\r\n            customerAddress: '',\r\n            orderStatus: 'pending'\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            if (values) {\r\n                setOpen(true);\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <div>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12} md={2.5}>\r\n                    <SelectDropDown formik={formik} title=\"Province\" data={province} />\r\n                </Grid>\r\n                <Grid item xs={12} md={2.5}>\r\n                    <SelectDropDown formik={formik} title=\"District\" data={district} />\r\n                </Grid>\r\n                <Grid item xs={12} md={2.5}>\r\n                    <SelectDropDown formik={formik} title=\"Ward\" data={ward} />\r\n                </Grid>\r\n                <Grid item xs={12} md={2.5}>\r\n                    <SelectDropDown formik={formik} title=\"Level\" data={level} />\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        sx={{ display: 'flex', mt: 3, background: '#008345', '&:hover': { background: '#008345' } }}\r\n                    >\r\n                        Apply\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { dispatch } from 'store';\r\nimport { setMode } from 'store/slices/kanban';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport ActionLimitation from './action-limit';\r\nimport UserList from './UserList';\r\nimport FilterSelectLimitation from './fillter-limit/index';\r\n\r\nexport default function Limitation() {\r\n    return (\r\n        <MainCard content={false} border={false}>\r\n            <FilterSelectLimitation />\r\n            <UserList />\r\n        </MainCard>\r\n    );\r\n}\r\n","import { Box, Button, InputAdornment, OutlinedInput } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { shouldForwardProp } from '@mui/system';\r\nimport { IconPlus, IconSearch } from '@tabler/icons';\r\nimport DownloadIcon from 'assets/images/icons/download.svg';\r\nimport TransferIcon from 'assets/images/icons/transfer.svg';\r\nimport TrashIcon from 'assets/images/icons/trash.svg';\r\nimport UploadIcon from 'assets/images/icons/upload.svg';\r\nimport { map } from 'lodash';\r\nimport { createRef, useImperativeHandle, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FormControlSelect from 'ui-component/extended/Form/FormControlSelect';\r\n\r\nconst OutlineInputStyle = styled(OutlinedInput, { shouldForwardProp })(({ theme }) => ({\r\n    width: 434,\r\n    height: 36,\r\n    marginLeft: 16,\r\n    marginRight: 16,\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    '& input': {\r\n        background: 'transparent !important',\r\n        paddingLeft: '4px !important'\r\n    },\r\n    [theme.breakpoints.down('lg')]: {\r\n        width: 250\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n        width: 100,\r\n        // marginLeft: 4,\r\n        background: theme.palette.mode === 'dark' ? theme.palette.dark[800] : '#fff'\r\n    }\r\n}));\r\n\r\n// select options\r\nconst currencies = [\r\n    {\r\n        value: '',\r\n        label: 'None'\r\n    },\r\n    {\r\n        value: '1',\r\n        label: 'demo@company.com'\r\n    },\r\n    {\r\n        value: '2',\r\n        label: 'Lerrya@company.com'\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'judiya@company.com'\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'taju_diya@company.com'\r\n    },\r\n    {\r\n        value: '4',\r\n        label: 'judiyaLerrya@company.com'\r\n    }\r\n];\r\n\r\nconst icons = [TransferIcon, DownloadIcon, UploadIcon, TrashIcon];\r\n\r\nexport const refActionKanban = createRef();\r\nconst WaitingListActions = ({ onClickTransfer, urlAddTicket }) => {\r\n    const theme = useTheme();\r\n    const [toggleTransfer, setToggleTransfer] = useState(false);\r\n\r\n    useImperativeHandle(\r\n        refActionKanban,\r\n        () => ({\r\n            toggleTransfer: () => setToggleTransfer(!toggleTransfer)\r\n        }),\r\n        []\r\n    );\r\n    return (\r\n        <Box>\r\n            <div style={{ marginLeft: 8, marginBottom: 8, color: '#008345' }}>Waiting List</div>\r\n            <Box sx={{ display: 'flex' }}>\r\n                {map(icons, (icon, index) => (\r\n                    <Button\r\n                        onClick={() => {\r\n                            switch (index) {\r\n                                case 0:\r\n                                    onClickTransfer();\r\n                                    break;\r\n\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        }}\r\n                        key={index}\r\n                        sx={{ minWidth: 32, padding: 0, marginX: 1, mb: 1 }}\r\n                    >\r\n                        <img src={icon} />\r\n                    </Button>\r\n                ))}\r\n\r\n                <Box sx={{ flexGrow: 1 }} />\r\n\r\n                <Box sx={{ display: 'flex' }}>\r\n                    <OutlineInputStyle\r\n                        id=\"input-search-header\"\r\n                        // value={'value'}\r\n                        // onChange={(e) => setValue(e.target.value)}\r\n                        placeholder=\"Search\"\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\r\n                            </InputAdornment>\r\n                        }\r\n                        aria-describedby=\"search-helper-text\"\r\n                        inputProps={{ 'aria-label': 'weight' }}\r\n                        sx={{ height: 36 }}\r\n                    />\r\n                    {/* \r\n                    <FormControlSelect currencies={currencies} />\r\n                    <FormControlSelect currencies={currencies} /> */}\r\n                </Box>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    sx={{ borderColor: '#E5E5E5', color: '#008345', borderRadius: 2, height: 36, fontSize: 12, fontWeight: 'bold' }}\r\n                    startIcon={<IconPlus color=\"#008345\" size={18} />}\r\n                    component={Link}\r\n                    to={urlAddTicket}\r\n                >\r\n                    Add New\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default WaitingListActions;\r\n","// assets\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n// material-ui\r\nimport { useDispatch } from 'react-redux';\r\nimport { setMode } from 'store/slices/kanban';\r\n\r\nimport {\r\n    Box,\r\n    Checkbox,\r\n    IconButton,\r\n    Pagination,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TableSortLabel,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography\r\n} from '@mui/material';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport usePagination from 'hooks/usePagination';\r\nimport * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArrangementOrder, EnhancedTableHeadProps, GetComparator, HeadCell, KeyedObject } from 'types';\r\nimport { WaitingListItem } from 'types/repaymentcontrol';\r\nimport WaitingListActions from './WaitingListActions';\r\n\r\n// table data\r\ntype CreateDataType = {\r\n    name: number;\r\n    calories: number;\r\n    fat: number;\r\n    carbs: number;\r\n    protein: number;\r\n};\r\nfunction createData(\r\n    id: string,\r\n    partner: string,\r\n    subpartner: string,\r\n    pos: string,\r\n    description: string,\r\n    product: string,\r\n    tranx_limit: number,\r\n    daily_limit: number,\r\n    monthly_limit?: number,\r\n    duration?: string\r\n) {\r\n    return {\r\n        id,\r\n        partner,\r\n        subpartner,\r\n        pos,\r\n        description,\r\n        product,\r\n        tranx_limit,\r\n        daily_limit,\r\n        monthly_limit,\r\n        duration\r\n    };\r\n}\r\n\r\nconst rows: WaitingListItem[] = [\r\n    createData(\r\n        '123-01',\r\n        'SMARTNET',\r\n        'SMARTNET',\r\n        'All Pos',\r\n        '560',\r\n        'All Product',\r\n        50000000,\r\n        350000000,\r\n        10235000000,\r\n        '01/01/2021-31/12/2021'\r\n    ),\r\n    createData(\r\n        '123-01',\r\n        'SMARTNET',\r\n        'SMARTNET',\r\n        'All Pos',\r\n        '560',\r\n        'All Product',\r\n        50000000,\r\n        350000000,\r\n        10235000000,\r\n        '01/01/2021-31/12/2021'\r\n    ),\r\n    createData(\r\n        '123-01',\r\n        'SMARTNET',\r\n        'SMARTNET',\r\n        'All Pos',\r\n        '560',\r\n        'All Product',\r\n        50000000,\r\n        350000000,\r\n        10235000000,\r\n        '01/01/2021-31/12/2021'\r\n    ),\r\n    createData(\r\n        '123-01',\r\n        'SMARTNET',\r\n        'SMARTNET',\r\n        'All Pos',\r\n        '560',\r\n        'All Product',\r\n        50000000,\r\n        350000000,\r\n        10235000000,\r\n        '01/01/2021-31/12/2021'\r\n    ),\r\n    createData(\r\n        '123-01',\r\n        'SMARTNET',\r\n        'SMARTNET',\r\n        'All Pos',\r\n        '560',\r\n        'All Product',\r\n        50000000,\r\n        350000000,\r\n        10235000000,\r\n        '01/01/2021-31/12/2021'\r\n    ),\r\n    createData(\r\n        '123-01',\r\n        'SMARTNET',\r\n        'SMARTNET',\r\n        'All Pos',\r\n        '560',\r\n        'All Product',\r\n        50000000,\r\n        350000000,\r\n        10235000000,\r\n        '01/01/2021-31/12/2021'\r\n    ),\r\n    createData('123-01', 'SMARTNET', 'SMARTNET', 'All Pos', '560', 'All Product', 50000000, 350000000, 10235000000, '01/01/2021-31/12/2021')\r\n];\r\n\r\n// table filter\r\nfunction descendingComparator(a: KeyedObject, b: KeyedObject, orderBy: string) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst getComparator: GetComparator = (order, orderBy) =>\r\n    order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n\r\nfunction stableSort(array: WaitingListItem[], comparator: (a: KeyedObject, b: KeyedObject) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0] as WaitingListItem, b[0] as WaitingListItem);\r\n        if (order !== 0) return order;\r\n        return (a[1] as number) - (b[1] as number);\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// table header\r\nconst headCells: HeadCell[] = [\r\n    {\r\n        id: 'id',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: '#'\r\n    },\r\n    {\r\n        id: 'partner',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Partner'\r\n    },\r\n    {\r\n        id: 'subpartner',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'subpartner'\r\n    },\r\n    {\r\n        id: 'pos',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'POS#'\r\n    },\r\n    {\r\n        id: 'description',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Description'\r\n    },\r\n    {\r\n        id: 'product',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Product'\r\n    },\r\n    {\r\n        id: 'tranx_limit',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Tranx Limit'\r\n    },\r\n    {\r\n        id: 'daily_limit',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Daily Limit'\r\n    },\r\n    {\r\n        id: 'monthly_limit',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Monthly Limit'\r\n    },\r\n    {\r\n        id: 'duration',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Duration'\r\n    }\r\n];\r\n\r\n// ==============================|| TABLE - HEADER ||============================== //\r\n\r\ninterface TableDataEnhancedTableHead extends EnhancedTableHeadProps {}\r\n\r\nfunction EnhancedTableHead({ onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort }: TableDataEnhancedTableHead) {\r\n    const createSortHandler = (property: string) => (event: React.SyntheticEvent) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\r\n                    <Checkbox\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align=\"center\"\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <Box component=\"span\" sx={visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </Box>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\n// ==============================|| TABLE - HEADER TOOLBAR ||============================== //\r\n\r\nconst EnhancedTableToolbar = ({ numSelected }: { numSelected: number }) => (\r\n    <Toolbar\r\n        sx={{\r\n            p: 0,\r\n            pl: 1,\r\n            pr: 1,\r\n            ...(numSelected > 0 && {\r\n                color: (theme) => theme.palette.secondary.main\r\n            })\r\n        }}\r\n    >\r\n        <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Waiting List - {numSelected} Selected\r\n        </Typography>\r\n\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        {numSelected > 0 && (\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton size=\"large\">\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n);\r\n\r\n// ==============================|| TABLE - DATA TABLE ||============================== //\r\n\r\nexport default function WaitingList() {\r\n    const [order, setOrder] = React.useState<ArrangementOrder>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<string>('calories');\r\n    const [selected, setSelected] = React.useState<string[]>([]);\r\n    const [page, setPage] = React.useState(1);\r\n    const [dense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const dispatch = useDispatch();\r\n    const handleRequestSort = (event: React.SyntheticEvent, property: string) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.checked) {\r\n            const newSelectedId: string[] = rows.map((n) => n.id);\r\n            setSelected(newSelectedId);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLTableRowElement> | undefined, name: string) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected: string[] = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event: any, newPage: number) => {\r\n        setPage(newPage);\r\n        dd.jump(newPage);\r\n    };\r\n\r\n    const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows = page > 0 ? Math.max(0, page * 3 - rows.length) : 0;\r\n    const PER_PAGE = 3;\r\n    const count = Math.ceil(rows.length / PER_PAGE);\r\n    const dd = usePagination(rows, PER_PAGE);\r\n\r\n    return (\r\n        <div>\r\n            <WaitingListActions onClickTransfer={() => dispatch(setMode())} urlAddTicket=\"/tickets/create-ticket\" />\r\n            <EnhancedTableToolbar numSelected={selected.length} />\r\n\r\n            {/* table */}\r\n            <TableContainer>\r\n                <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\" size={dense ? 'small' : 'medium'}>\r\n                    <EnhancedTableHead\r\n                        numSelected={selected.length}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onSelectAllClick={handleSelectAllClick}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={rows.length}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(dd.currentData(), getComparator(order, orderBy)).map((row, index) => {\r\n                            /** Make sure no display bugs if row isn't an OrderData object */\r\n                            if (typeof row === 'number') return null;\r\n                            const isItemSelected = isSelected(row.id);\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n                            return (\r\n                                <TableRow\r\n                                    hover\r\n                                    component={Link}\r\n                                    to={`/tickets/${row.id}`}\r\n                                    role=\"checkbox\"\r\n                                    aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row.id}\r\n                                    selected={isItemSelected}\r\n                                    sx={{ textDecoration: 'none' }}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\" sx={{ pl: 3 }} onClick={(event: any) => handleClick(event, row.id)}>\r\n                                        <Checkbox\r\n                                            size=\"small\"\r\n                                            color=\"primary\"\r\n                                            checked={isItemSelected}\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"left\">\r\n                                        {row.id}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"left\">\r\n                                        {row.partner}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"left\">\r\n                                        {row.subpartner}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"left\">\r\n                                        {row.pos}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"left\">\r\n                                        {row.description}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.product}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.tranx_limit}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.daily_limit}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.monthly_limit}\r\n                                    </TableCell>\r\n                                    <TableCell sx={styles.cellText} align=\"center\">\r\n                                        {row.duration}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                        {emptyRows > 0 && (\r\n                            <TableRow\r\n                                style={{\r\n                                    height: (dense ? 33 : 53) * emptyRows\r\n                                }}\r\n                            >\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {/* table data */}\r\n            <Stack sx={{ alignItems: 'center', mt: 2 }}>\r\n                <Pagination count={count} color=\"primary\" page={page} onChange={handleChangePage} />\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    cellText: {\r\n        fontSize: 10\r\n    }\r\n};\r\n","import { useState, SyntheticEvent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Grid, Tab, Tabs } from '@mui/material';\r\n\r\n// // project imports\r\nimport ManagementPage from './management';\r\nimport LimitationPage from './limitation';\r\nimport WaitingListPage from './waitinglist';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport AccountCircleTwoToneIcon from '@mui/icons-material/AccountCircleTwoTone';\r\nimport DescriptionTwoToneIcon from '@mui/icons-material/DescriptionTwoTone';\r\nimport LibraryBooksTwoToneIcon from '@mui/icons-material/LibraryBooksTwoTone';\r\nimport LockTwoToneIcon from '@mui/icons-material/LockTwoTone';\r\nimport MailTwoToneIcon from '@mui/icons-material/MailTwoTone';\r\n\r\n// types\r\nimport { TabsProps } from 'types';\r\n\r\n// tabs panel\r\nfunction TabPanel({ children, value, index, ...other }: TabsProps) {\r\n    return (\r\n        <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\r\n            {value === index && <Box sx={{ p: 0 }}>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index: number) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`\r\n    };\r\n}\r\n\r\n// tabs option\r\nconst tabsOption = [\r\n    {\r\n        label: 'Management',\r\n        icon: ''\r\n    },\r\n    {\r\n        label: 'Limitation',\r\n        icon: ''\r\n    },\r\n    {\r\n        label: 'Waiting List',\r\n        icon: ''\r\n    }\r\n];\r\n\r\n// ==============================|| PROFILE 1 ||============================== //\r\n\r\nconst Profile1 = () => {\r\n    const theme = useTheme();\r\n\r\n    const [value, setValue] = useState<number>(0);\r\n    const handleChange = (event: SyntheticEvent, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <MainCard>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Tabs\r\n                        value={value}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={handleChange}\r\n                        aria-label=\"simple tabs example\"\r\n                        variant=\"scrollable\"\r\n                        sx={{\r\n                            mb: 3,\r\n                            '& a': {\r\n                                minHeight: 'auto',\r\n                                minWidth: 10,\r\n                                py: 1.5,\r\n                                px: 1,\r\n                                mr: 2.25,\r\n                                color: theme.palette.grey[600],\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center'\r\n                            },\r\n                            '& a.Mui-selected': {\r\n                                color: theme.palette.primary.main\r\n                            },\r\n                            '& .MuiTabs-indicator': {\r\n                                bottom: 2\r\n                            },\r\n                            '& a > svg': {\r\n                                marginBottom: '0px !important',\r\n                                mr: 1.25\r\n                            }\r\n                        }}\r\n                    >\r\n                        {tabsOption.map((tab, index) => (\r\n                            <Tab key={index} component={Link} to=\"#\" icon={tab.icon} label={tab.label} {...a11yProps(index)} />\r\n                        ))}\r\n                    </Tabs>\r\n                    <TabPanel value={value} index={0}>\r\n                        <ManagementPage />\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <LimitationPage />\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={2}>\r\n                        <WaitingListPage />\r\n                    </TabPanel>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default Profile1;\r\n"],"sourceRoot":""}