{"version":3,"sources":["views/dashboard/components/CardInfo.tsx","views/dashboard/components/CardOnlineChart.tsx","ui-component/cards/Skeleton/PopularCard.tsx","views/dashboard/components/ChannelDetail.tsx","views/dashboard/components/RepaymentChart.tsx","views/dashboard/components/RepaymentStatistic.tsx","views/dashboard/components/RepaymentControl.tsx","views/dashboard/BodyDashboard.tsx","views/dashboard/HeaderDashboard.tsx","views/dashboard/index.tsx"],"names":["CardInfo","title","color","value","percentValue","yesterdayValue","arrowUpwardIcon","fontSize","sx","width","height","arrowDownwardIcon","numberValue","val","formatValue","res","numeral","format","duration","MainCard","boxShadow","shadow","border","contentSX","padding","Grid","container","justifyContent","direction","item","sm","Box","display","alignItems","Typography","variant","lineHeight","fontWeight","Stack","spacing","Boolean","textAlign","my","CardOnlineChart","datas","option","useTheme","grid","left","right","top","bottom","tooltip","trigger","legend","orient","series","type","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","formatter","percent","emphasis","data","style","PopularCard","Card","CardContent","gridSpacing","xs","zeroMinWidth","Skeleton","p","pt","ChannelDetail","isLoading","theme","React","useState","anchorEl","setAnchorEl","handleClose","content","alignContent","palette","primary","cursor","onClick","event","currentTarget","Menu","id","keepMounted","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Avatar","backgroundColor","success","light","dark","ml","Divider","orange","marginLeft","CardActions","Button","size","disableElevation","RepaymentChart","labels","shadowColor","shadowBlur","itemGap","icon","textStyle","text","secondary","fontFamily","axisPointer","toolbox","feature","mark","dataView","readOnly","magicType","restore","saveAsImage","xAxis","nameLocation","axisLine","axisTick","axisLabel","yAxis","splitLine","_","map","barGap","focus","memo","RepaymentStatistic","RepaymentControl","dataType","xx","useMemo","handleClick","useCallback","name","Math","floor","random","BodyDashboard","setLoading","useEffect","mb","lg","error","main","md","a11yProps","index","HeaderDashboard","onChangeTab","useConfig","setValue","Tabs","onChange","newValue","orientation","borderBottom","mode","grey","minHeight","flexDirection","background","marginBottom","marginRight","marginTop","Tab","tab","setFilter","v4","key","setKey","e","v"],"mappings":"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","file":"static/js/28.1303b247.chunk.js","sourcesContent":["import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\n// material-ui\nimport { Box, Grid, Stack, Typography } from '@mui/material';\n// project imports\nimport AnimatedNumber from 'animated-number-react';\nimport numeral from 'numeral';\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ============================|| HOVER DATA CARD ||============================ //\n\ninterface CardInfoProps {\n    title?: string | any;\n    value?: number | any;\n    percentValue?: number | any;\n    yesterdayValue?: number | any;\n    color?: string;\n}\n\nconst DURATION = 500;\nconst CardInfo = ({ title, color, value, percentValue, yesterdayValue }: CardInfoProps) => {\n    const arrowUpwardIcon = <ArrowUpwardIcon fontSize=\"small\" sx={{ width: 16, height: 16, color }} />;\n    const arrowDownwardIcon = <ArrowDownwardIcon fontSize=\"small\" sx={{ width: 16, height: 16, color }} />;\n    const numberValue = (val: number) => (\n        <AnimatedNumber value={val} formatValue={(res) => numeral(res).format('0,0')} duration={DURATION} />\n    );\n    return (\n        <MainCard\n            boxShadow\n            shadow=\"0px 4px 4px rgba(0, 0, 0, 0.05)\"\n            sx={{\n                boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.05)',\n                border: '1px solid #E5E5E5 !important'\n            }}\n            contentSX={{ padding: '16px 12px !important' }}\n        >\n            <Grid container justifyContent=\"space-between\" direction=\"column\">\n                <Grid item sm={12}>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Box>\n                            <Typography variant=\"inherit\" color=\"inherit\" sx={{ fontSize: 12, lineHeight: '28px', fontWeight: 700 }}>\n                                {title}\n                            </Typography>\n                        </Box>\n                        <Box>\n                            <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\n                                <Typography variant=\"inherit\" sx={{ fontSize: 12, lineHeight: '28px', color }}>\n                                    {numberValue(percentValue)}%\n                                </Typography>\n                                {Boolean(percentValue > 0) && arrowUpwardIcon}\n                                {Boolean(percentValue < 0) && arrowDownwardIcon}\n                            </Stack>\n                        </Box>\n                    </Box>\n                </Grid>\n                <Grid item sm={12} textAlign=\"center\" sx={{ my: '16px' }}>\n                    <Typography variant=\"inherit\" color=\"inherit\" sx={{ fontSize: 26, lineHeight: '40px', fontWeight: 700, color }}>\n                        {numberValue(value)}\n                    </Typography>\n                </Grid>\n                <Grid item sm={12}>\n                    <Typography variant=\"body2\" color=\"textSecondary\" sx={{ fontSize: 10, lineHeight: '28px' }}>\n                        <b>Yesterday: </b>\n                        {numberValue(yesterdayValue)}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </MainCard>\n    );\n};\n\nexport default CardInfo;\n","// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { EChartsOption, PieSeriesOption } from 'echarts';\nimport ReactEcharts from 'echarts-for-react';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ===========================|| REVENUE CHART CARD ||=========================== //\ninterface Props {\n    datas?: PieSeriesOption['data'];\n}\nconst CardOnlineChart = ({ datas }: Props) => {\n    const theme = useTheme();\n    const option: EChartsOption = {\n        grid: {\n            left: '0',\n            right: '0',\n            top: '0',\n            bottom: '0'\n        },\n        tooltip: {\n            trigger: 'item'\n        },\n        legend: {\n            left: 'left',\n            orient: 'vertical'\n        },\n        series: [\n            {\n                type: 'pie',\n                color: ['#F1C40F', '#f8d54866'],\n                radius: ['40%', '80%'],\n                avoidLabelOverlap: true,\n                itemStyle: {\n                    borderRadius: 8,\n                    borderColor: '#fff',\n                    borderWidth: 2\n                },\n                label: {\n                    show: true,\n                    formatter: (val: any) => `${val.percent}%`,\n                    color: '#333'\n                },\n                emphasis: {\n                    label: {\n                        show: true,\n                        fontSize: '16',\n                        fontWeight: 'bold'\n                    }\n                },\n                data: datas\n            }\n        ]\n    };\n    return (\n        <MainCard\n            boxShadow\n            shadow=\"0px 4px 4px rgba(0, 0, 0, 0.05)\"\n            contentSX={{ padding: '0px 0px !important', height: '100%' }}\n            sx={{ height: '160px', boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.05)', border: '1px solid #E5E5E5 !important' }}\n        >\n            <ReactEcharts style={{ width: '100%', height: '160px' }} option={option} />\n        </MainCard>\n    );\n};\n\nexport default CardOnlineChart;\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\n\n// ==============================|| SKELETON - POPULAR CARD ||============================== //\n\nconst PopularCard = () => (\n    <Card>\n        <CardContent>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                        <Grid item xs zeroMinWidth>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" height={20} width={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Skeleton variant=\"rectangular\" height={150} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>\n        <CardContent sx={{ p: 1.25, display: 'flex', pt: 0, justifyContent: 'center' }}>\n            <Skeleton variant=\"rectangular\" height={25} width={75} />\n        </CardContent>\n    </Card>\n);\n\nexport default PopularCard;\n","// assets\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\nimport KeyboardArrowUpOutlinedIcon from '@mui/icons-material/KeyboardArrowUpOutlined';\nimport MoreVertOutlinedIcon from '@mui/icons-material/MoreVertOutlined';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@mui/material';\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport React from 'react';\nimport { gridSpacing } from 'store/constant';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\nimport axiosServices from 'utils/axios';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\ninterface ChannelDetailProps {\n    isLoading: boolean;\n    title?: string | any;\n}\n\nconst ChannelDetail = ({ isLoading, title }: ChannelDetailProps) => {\n    const theme = useTheme();\n\n    const [anchorEl, setAnchorEl] = React.useState<Element | ((element: Element) => Element) | null | undefined>(null);\n\n    const handleClick = (event: React.SyntheticEvent) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    // const featchChannelDetail = async () => {\n    //     try {\n    //         const res = await axiosServices.get('/api/dashboard/channeldetails');\n    //         console.log(res);\n    //     } catch (error) {\n    //         console.log(error);\n    //     }\n    // };\n    // React.useEffect(() => {\n    //     featchChannelDetail();\n    // }, []);\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard\n                    content={false}\n                    boxShadow\n                    shadow=\"0px 4px 4px rgba(0, 0, 0, 0.05)\"\n                    sx={{\n                        boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.05)',\n                        border: '1px solid #E5E5E5 !important'\n                    }}\n                >\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">{title}</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreVertOutlinedIcon\n                                            fontSize=\"small\"\n                                            sx={{\n                                                color: theme.palette.primary[200],\n                                                cursor: 'pointer'\n                                            }}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={handleClose}> Today</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Month</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Year </MenuItem>\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            {/* <Grid item xs={12} sx={{ pt: '16px !important' }}></Grid> */}\n                            <Grid item xs={12}>\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Bajaj Finery\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $1839.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar\n                                                            variant=\"rounded\"\n                                                            sx={{\n                                                                width: 16,\n                                                                height: 16,\n                                                                borderRadius: '5px',\n                                                                backgroundColor: theme.palette.success.light,\n                                                                color: theme.palette.success.dark,\n                                                                ml: 2\n                                                            }}\n                                                        >\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'success.dark' }}>\n                                            10% Profit\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider sx={{ my: 1.5 }} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TTML\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $100.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar\n                                                            variant=\"rounded\"\n                                                            sx={{\n                                                                width: 16,\n                                                                height: 16,\n                                                                borderRadius: '5px',\n                                                                backgroundColor: theme.palette.orange.light,\n                                                                color: theme.palette.orange.dark,\n                                                                marginLeft: 1.875\n                                                            }}\n                                                        >\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.orange.dark }}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider sx={{ my: 1.5 }} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Reliance\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $200.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar\n                                                            variant=\"rounded\"\n                                                            sx={{\n                                                                width: 16,\n                                                                height: 16,\n                                                                borderRadius: '5px',\n                                                                backgroundColor: theme.palette.success.light,\n                                                                color: theme.palette.success.dark,\n                                                                ml: 2\n                                                            }}\n                                                        >\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.success.dark }}>\n                                            10% Profit\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider sx={{ my: 1.5 }} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TTML\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $189.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar\n                                                            variant=\"rounded\"\n                                                            sx={{\n                                                                width: 16,\n                                                                height: 16,\n                                                                borderRadius: '5px',\n                                                                backgroundColor: theme.palette.orange.light,\n                                                                color: theme.palette.orange.dark,\n                                                                ml: 2\n                                                            }}\n                                                        >\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.orange.dark }}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider sx={{ my: 1.5 }} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Stolon\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $189.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar\n                                                            variant=\"rounded\"\n                                                            sx={{\n                                                                width: 16,\n                                                                height: 16,\n                                                                borderRadius: '5px',\n                                                                backgroundColor: theme.palette.orange.light,\n                                                                color: theme.palette.orange.dark,\n                                                                ml: 2\n                                                            }}\n                                                        >\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.orange.dark }}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions sx={{ p: 1.25, pt: 0, justifyContent: 'center' }}>\n                        <Button size=\"small\" disableElevation>\n                            View All\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions>\n                </MainCard>\n            )}\n        </>\n    );\n};\n\nexport default ChannelDetail;\n","import { useTheme } from '@mui/material/styles';\nimport { BarSeriesOption, EChartsOption } from 'echarts';\nimport ReactEcharts from 'echarts-for-react';\nimport React from 'react';\n\ninterface Props {\n    series?: EChartsOption['series'];\n    labels?: string[];\n}\n\nconst RepaymentChart = ({ series, labels }: Props) => {\n    const theme = useTheme();\n    const option: EChartsOption = {\n        grid: {\n            top: '15%',\n            bottom: '10%',\n            shadowColor: 'rgba(0, 0, 0, 0.5)',\n            shadowBlur: 5\n        },\n        legend: {\n            itemGap: 20,\n            itemStyle: {\n                shadowColor: 'rgba(0, 0, 0, 0.5)',\n                shadowBlur: 5\n            },\n            icon: 'roundRect',\n            orient: 'horizontal',\n            textStyle: {\n                color: theme.palette.text.secondary,\n                fontSize: 13,\n                fontFamily: 'roboto'\n            }\n        },\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                type: 'shadow'\n            }\n        },\n        toolbox: {\n            show: true,\n            orient: 'vertical',\n            left: 'right',\n            top: 'center',\n            feature: {\n                mark: { show: true },\n                dataView: { show: true, readOnly: false },\n                magicType: { show: true, type: ['line', 'bar', 'stack'] },\n                restore: { show: false },\n                saveAsImage: { show: true }\n            }\n        },\n        xAxis: {\n            type: 'category',\n            data: labels,\n            nameLocation: 'start',\n            axisLine: {\n                show: false\n            },\n            axisTick: {\n                show: false\n            },\n            axisLabel: {\n                color: theme.palette.text.secondary,\n                fontSize: 14,\n                fontFamily: 'roboto'\n            }\n        },\n        yAxis: {\n            type: 'value',\n            nameLocation: 'start',\n            axisLine: {\n                show: false\n            },\n            axisTick: {\n                show: false\n            },\n            splitLine: {\n                show: false\n            },\n            axisLabel: {\n                color: theme.palette.text.secondary,\n                fontSize: 13,\n                fontFamily: 'roboto'\n            }\n        },\n        series: _.map(series, (item: BarSeriesOption) => {\n            return {\n                type: 'bar',\n                barGap: 0.1,\n                color: '#2f80ed99',\n                emphasis: {\n                    focus: 'series'\n                },\n                itemStyle: {\n                    borderRadius: 5\n                },\n                ...item\n            };\n        })\n    };\n    return <ReactEcharts option={option} />;\n};\n\nexport default React.memo(RepaymentChart);\n","import React from 'react';\n\nconst RepaymentStatistic = () => {\n    return <div>RepaymentStatistic</div>;\n};\n\nexport default RepaymentStatistic;\n","import MoreVertOutlinedIcon from '@mui/icons-material/MoreVertOutlined';\nimport { CardContent, Grid, Menu, MenuItem, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport React from 'react';\nimport { gridSpacing } from 'store/constant';\nimport MainCard from 'ui-component/cards/MainCard';\nimport RepaymentChart from './RepaymentChart';\nimport RepaymentStatistic from './RepaymentStatistic';\n\ninterface Props {\n    data?: any[];\n    dataType?: any[];\n    title?: string | any;\n}\n\nconst RepaymentControl = ({ data = [], dataType = [], title = 'xx' }: Props) => {\n    const theme = useTheme();\n    const xx = React.useMemo(() => ['July', 'August', 'September', 'October', 'November', 'December'], []);\n\n    const [anchorEl, setAnchorEl] = React.useState<Element | ((element: Element) => Element) | null | undefined>(null);\n\n    const handleClick = React.useCallback(\n        (event: React.SyntheticEvent) => {\n            setAnchorEl(event.currentTarget);\n        },\n        [anchorEl]\n    );\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <MainCard\n            content={false}\n            boxShadow\n            shadow=\"0px 4px 4px rgba(0, 0, 0, 0.05)\"\n            sx={{\n                boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.05)',\n                border: '1px solid #E5E5E5 !important'\n            }}\n        >\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Typography variant=\"h4\">{title}</Typography>\n                            </Grid>\n                            <Grid item>\n                                <MoreVertOutlinedIcon\n                                    fontSize=\"small\"\n                                    sx={{\n                                        color: theme.palette.primary[200],\n                                        cursor: 'pointer'\n                                    }}\n                                    aria-controls=\"menu-popular-card\"\n                                    aria-haspopup=\"true\"\n                                    onClick={handleClick}\n                                />\n                                <Menu\n                                    id=\"menu-popular-card\"\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={handleClose}\n                                    variant=\"selectedMenu\"\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right'\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right'\n                                    }}\n                                >\n                                    <MenuItem onClick={handleClose}> Today</MenuItem>\n                                    <MenuItem onClick={handleClose}> This Month</MenuItem>\n                                    <MenuItem onClick={handleClose}> This Year </MenuItem>\n                                </Menu>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <RepaymentChart\n                            labels={xx}\n                            series={[\n                                {\n                                    name: 'Cash',\n                                    color: '#27ae60cc',\n                                    data: [\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000)\n                                    ]\n                                },\n                                {\n                                    name: 'E-Wallet',\n                                    color: '#FF0015',\n                                    data: [\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000)\n                                    ]\n                                },\n                                {\n                                    name: 'l2B/M2B',\n                                    color: '#2F80ED',\n                                    data: [\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000)\n                                    ]\n                                },\n                                {\n                                    name: 'ATM/CDM',\n                                    color: '#2f80ed99',\n                                    data: [\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000),\n                                        Math.floor(Math.random() * 1000000)\n                                    ]\n                                }\n                            ]}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <RepaymentStatistic />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </MainCard>\n    );\n};\n\nexport default React.memo(RepaymentControl);\n","// material-ui\nimport { Grid, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport _ from 'lodash';\nimport { memo, useEffect, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { gridSpacing } from 'store/constant';\nimport CardInfo from './components/CardInfo';\nimport CardOnlineChart from './components/CardOnlineChart';\nimport ChannelDetail from './components/ChannelDetail';\nimport RepaymentControl from './components/RepaymentControl';\n\nconst BodyDashboard = () => {\n    const theme = useTheme();\n    const [isLoading, setLoading] = useState(true);\n    useEffect(() => {\n        setLoading(false);\n    }, []);\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Typography variant=\"h3\" sx={{ mb: 3 }}>\n                    <FormattedMessage id=\"all_channel_transaction\" />\n                </Typography>\n                <Grid container spacing={gridSpacing}>\n                    {_.map(['total_transactions', 'total_offline', 'total_online'], (item) => (\n                        <Grid item xs={12} lg={3} sm={6} key={item}>\n                            <CardInfo\n                                title={<FormattedMessage id={item} />}\n                                value={Math.floor(Math.random() * 1000000)}\n                                percentValue={Math.floor(-200 + Math.random() * (200 + 1 - -200))}\n                                yesterdayValue={Math.floor(Math.random() * 1000)}\n                                color={theme.palette.error.main}\n                            />\n                        </Grid>\n                    ))}\n                    <Grid item xs={12} lg={3} sm={6}>\n                        <CardOnlineChart\n                            datas={[\n                                { value: Math.floor(Math.random() * 1000000), name: 'Offline' },\n                                { value: Math.floor(Math.random() * 1000000), name: 'Online' }\n                            ]}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"h3\" sx={{ mb: 3 }}>\n                    <FormattedMessage id=\"all_channel_repayment\" />\n                </Typography>\n                <Grid container spacing={gridSpacing}>\n                    {_.map(['total_e_wallet', 'total_l2b', 'total_auto_deduct', 'total_cash'], (item) => (\n                        <Grid item xs={12} lg={3} sm={6} key={item}>\n                            <CardInfo\n                                title={<FormattedMessage id={item} />}\n                                value={Math.floor(Math.random() * 1000000)}\n                                percentValue={Math.floor(-200 + Math.random() * (200 + 1 - -200))}\n                                yesterdayValue={Math.floor(Math.random() * 1000)}\n                                color={theme.palette.error.main}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"h3\" sx={{ mb: 3 }}>\n                    <FormattedMessage id=\"all_channel_bucket\" />\n                </Typography>\n                <Grid container spacing={gridSpacing}>\n                    {_.map(['total_pre_due', 'total_b1', 'total_b2', 'total_b3_b6'], (item) => (\n                        <Grid item xs={12} lg={3} sm={6} key={item}>\n                            <CardInfo\n                                title={<FormattedMessage id={item} />}\n                                value={Math.floor(Math.random() * 1000000)}\n                                percentValue={Math.floor(-200 + Math.random() * (200 + 1 - -200))}\n                                yesterdayValue={Math.floor(Math.random() * 1000)}\n                                color={theme.palette.error.main}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12} md={8}>\n                        <RepaymentControl title={<FormattedMessage id=\"repayment_control\" />} />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <ChannelDetail isLoading={isLoading} title={<FormattedMessage id=\"channel_detail\" />} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default memo(BodyDashboard);\n","import { Grid, Tab, Tabs, Typography } from '@mui/material';\n// material-ui\nimport { useTheme } from '@mui/material/styles';\n// project imports\nimport useConfig from 'hooks/useConfig';\nimport React from 'react';\nimport MainCard from 'ui-component/cards/MainCard';\n\nfunction a11yProps(index: number) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`\n    };\n}\n\nexport default function HeaderDashboard({ onChangeTab }: { onChangeTab: (e, v) => void }) {\n    const theme = useTheme();\n    const { borderRadius } = useConfig();\n\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n        setValue(newValue);\n        onChangeTab(event, newValue);\n    };\n\n    return (\n        <MainCard\n            boxShadow\n            shadow=\"0px 4px 4px rgba(0, 0, 0, 0.05)\"\n            sx={{\n                boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.05)',\n                border: '1px solid #E5E5E5 !important'\n            }}\n            contentSX={{ padding: '8px !important' }}\n        >\n            <Tabs\n                value={value}\n                onChange={handleChange}\n                orientation=\"horizontal\"\n                variant=\"standard\"\n                sx={{\n                    '& .MuiTabs-flexContainer': {\n                        borderBottom: 'none'\n                    },\n                    '& button': {\n                        borderRadius: `${borderRadius}px`,\n                        color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : theme.palette.grey[600],\n                        minHeight: 'auto',\n                        display: 'flex',\n                        flexDirection: 'row',\n                        alignItems: 'flex-start',\n                        textAlign: 'center',\n                        justifyContent: 'flex-start'\n                    },\n                    '& button.Mui-selected': {\n                        color: theme.palette.primary.main,\n                        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50]\n                    },\n                    '& button > svg': {\n                        marginBottom: '0px !important',\n                        marginRight: 1.25,\n                        marginTop: 1.25,\n                        height: 20,\n                        width: 20\n                    },\n                    '& button > div > span': {\n                        display: 'block'\n                    },\n                    '& > div > span': {\n                        display: 'none'\n                    }\n                }}\n            >\n                <Tab\n                    label={\n                        <Grid container direction=\"column\">\n                            <Typography variant=\"subtitle1\" color=\"inherit\">\n                                Daily\n                            </Typography>\n                        </Grid>\n                    }\n                    {...a11yProps(0)}\n                />\n                <Tab\n                    label={\n                        <Grid container direction=\"column\">\n                            <Typography variant=\"subtitle1\" color=\"inherit\">\n                                Weekly\n                            </Typography>\n                        </Grid>\n                    }\n                    {...a11yProps(1)}\n                />\n                <Tab\n                    label={\n                        <Grid container direction=\"column\">\n                            <Typography variant=\"subtitle1\" color=\"inherit\">\n                                Monthly\n                            </Typography>\n                        </Grid>\n                    }\n                    {...a11yProps(2)}\n                />\n            </Tabs>\n        </MainCard>\n    );\n}\n","import { Grid } from '@mui/material';\nimport React, { useState } from 'react';\nimport { gridSpacing } from 'store/constant';\nimport BodyDashboard from './BodyDashboard';\nimport HeaderDashboard from './HeaderDashboard';\n\ninterface IFilter {\n    id: number;\n    tab: 'Daily' | 'Weekly' | 'Monthly';\n}\nexport default () => {\n    const [filter, setFilter] = useState<IFilter>({ id: 0, tab: 'Daily' });\n    const [key, setKey] = useState(v4());\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={12} md={12}>\n                <HeaderDashboard\n                    onChangeTab={(e, v) => {\n                        setKey(v4());\n                        switch (v) {\n                            case 0:\n                                setFilter({ id: 0, tab: 'Daily' });\n                                break;\n                            case 1:\n                                setFilter({ id: 0, tab: 'Weekly' });\n                                break;\n                            case 2:\n                                setFilter({ id: 0, tab: 'Monthly' });\n                                break;\n                            default:\n                                break;\n                        }\n                    }}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <BodyDashboard key={key} />\n            </Grid>\n        </Grid>\n    );\n};\n"],"sourceRoot":""}