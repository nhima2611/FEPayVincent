{"version":3,"sources":["services/core/toast.service.ts","ui-component/extended/AnimateButton.tsx","hooks/useScriptRef.ts","views/pages/authentication/AuthCardWrapper.tsx","views/pages/authentication/AuthWrapper.tsx","views/pages/authentication/auth-forms/AuthLogin.tsx","views/pages/authentication/authentication3/Login.tsx"],"names":["showConfirm","args","a","Swal","fire","backdrop","title","text","icon","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","onConfirm","isDenied","onDenied","toast","position","background","color","showConfirmButton","timer","timerProgressBar","didOpen","toastr","addEventListener","stopTimer","resumeTimer","showDeleteConfirm","confirmButtonColor","cancelButtonColor","showError","showSuccess","AnimateButton","React","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","useScriptRef","scripted","useRef","useEffect","current","AuthCardWrapper","other","boxShadow","shadow","sx","border","borderRadius","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","theme","backgroundImage","backgroundSize","minHeight","recaptchaRef","createRef","AuthLogin","loginProp","others","useTheme","scriptedRef","useMediaQuery","breakpoints","down","useConfig","useState","checked","setChecked","login","useAuth","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","initialValues","email","password","token","submit","validationSchema","Yup","shape","max","required","nullable","onSubmit","values","setErrors","setStatus","setSubmitting","console","log","res","catch","err","toastService","status","message","success","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","setValues","noValidate","FormControl","fullWidth","error","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","IconButton","onClick","onMouseDown","edge","size","Stack","alignItems","justifyContent","spacing","FormControlLabel","control","Checkbox","target","Typography","variant","component","Link","to","textDecoration","Box","mt","onExpired","reset","sitekey","process","style","display","my","Button","disabled","Login","matchDownSM","isLoggedIn","AuthWrapper","Grid","container","item","m","mb","Logo","palette","secondary","main","gutterBottom","fontSize","textAlign","Divider"],"mappings":"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","file":"static/js/24.31099b90.chunk.js","sourcesContent":["import Swal, { SweetAlertIcon, SweetAlertOptions, SweetAlertPosition, SweetAlertResult } from 'sweetalert2';\r\n\r\ninterface SweetAlertConfirm {\r\n    onConfirm: () => Promise<void>;\r\n    onDenied?: () => Promise<void>;\r\n}\r\n\r\nconst toast = (icon: SweetAlertIcon, title: string, position?: SweetAlertPosition): Promise<any> => {\r\n    let background = '#ffffff';\r\n    switch (icon) {\r\n        case 'success':\r\n            background = '#5cb85c';\r\n            break;\r\n\r\n        case 'error':\r\n            background = '#d9534f';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Swal.fire({\r\n        icon,\r\n        title,\r\n        toast: true,\r\n        position: position || 'bottom-end',\r\n        background,\r\n        color: 'white',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        didOpen: (toastr: HTMLElement) => {\r\n            toastr.addEventListener('mouseenter', Swal.stopTimer);\r\n            toastr.addEventListener('mouseleave', Swal.resumeTimer);\r\n        }\r\n    });\r\n};\r\n\r\nconst showSuccess = (args: SweetAlertOptions): Promise<any> => {\r\n    return Swal.fire({\r\n        ...args,\r\n        icon: 'success'\r\n    });\r\n};\r\n\r\nconst showError = (args: SweetAlertOptions): Promise<any> => {\r\n    return Swal.fire({\r\n        ...args,\r\n        icon: 'error'\r\n    });\r\n};\r\n\r\nconst showConfirm = async (args: SweetAlertOptions & SweetAlertConfirm): Promise<any> => {\r\n    return Swal.fire({\r\n        backdrop: true,\r\n        title: args.title || 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'info',\r\n        showCancelButton: true,\r\n        confirmButtonText: args.confirmButtonText ?? 'Ok',\r\n        denyButtonText: args.denyButtonText ?? 'Cancel'\r\n    }).then((result: SweetAlertResult<any>) => {\r\n        /* Read more about isConfirmed, isDenied below */\r\n        if (result.isConfirmed) {\r\n            return args.onConfirm?.();\r\n        }\r\n        if (result.isDenied) {\r\n            return args.onDenied?.();\r\n        }\r\n        return args.onDenied?.();\r\n    });\r\n};\r\n\r\nconst showDeleteConfirm = (args: SweetAlertOptions & SweetAlertConfirm): Promise<any> => {\r\n    return Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n        /* Read more about isConfirmed, isDenied below */\r\n        if (result.isConfirmed) {\r\n            return args.onConfirm?.();\r\n        }\r\n        if (result.isDenied) {\r\n            return args.onDenied?.();\r\n        }\r\n        return args.onDenied?.();\r\n    });\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    toast,\r\n    showConfirm,\r\n    showDeleteConfirm,\r\n    showError,\r\n    showSuccess\r\n};\r\n","import React, { Ref } from 'react';\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\ninterface ScaleProps {\r\n    hover: number | string | undefined;\r\n    tap: number | string | undefined;\r\n}\r\n\r\ninterface AnimateButtonProps {\r\n    children?: React.ReactNode;\r\n    type?: 'slide' | 'scale' | 'rotate';\r\n    direction?: 'up' | 'down' | 'left' | 'right';\r\n    offset?: number;\r\n    scale?: ScaleProps;\r\n}\r\n\r\n// ==============================|| ANIMATION BUTTON ||============================== //\r\n\r\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }: AnimateButtonProps, ref: Ref<HTMLDivElement>) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'down':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ y: y !== undefined ? y : '' }}\r\n                        onHoverEnd={() => cycleY()}\r\n                        onHoverStart={() => cycleY()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n            return (\r\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// material-ui\r\nimport { Box } from '@mui/material';\r\n// project import\r\nimport MainCard, { MainCardProps } from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => (\r\n    <MainCard\r\n        boxShadow\r\n        shadow=\"0px 4px 16px rgba(0, 0, 0, 0.25)\"\r\n        sx={{\r\n            boxShadow: '0px 4px 16px rgba(0, 0, 0, 0.25)',\r\n            border: '1px solid #CCCCCC',\r\n            borderRadius: '24px',\r\n            maxWidth: { xs: 450, lg: 420 },\r\n            margin: { xs: 1.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    // backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    backgroundImage: 'url(images/img_bg_login.png)',\r\n    backgroundSize: 'cover',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Formik } from 'formik';\r\nimport useAuth from 'hooks/useAuth';\r\n// project imports\r\nimport useConfig from 'hooks/useConfig';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport React from 'react';\r\n// third party\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\nimport { Link } from 'react-router-dom';\r\nimport toastService from 'services/core/toast.service';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport * as Yup from 'yup';\r\n\r\n// ============================|| LOGIN ||============================ //\r\n\r\nconst recaptchaRef: any = React.createRef();\r\n\r\nconst AuthLogin = ({ loginProp, ...others }: { loginProp?: number }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const { borderRadius } = useConfig();\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const { login } = useAuth();\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={{\r\n                    email: 'ntcnet@gmail.com',\r\n                    password: '123456',\r\n                    token: null,\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required'),\r\n                    token: Yup.string().required().nullable()\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    console.log(1);\r\n                    try {\r\n                        login(values.email, values.password)\r\n                            .then((res) => {})\r\n                            .catch((err) => {\r\n                                toastService.showError({\r\n                                    title: err.status,\r\n                                    text: err.message,\r\n                                    position: 'center-start'\r\n                                });\r\n                            });\r\n\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err: any) {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values, setValues }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address / Username\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={loginProp ? `/pages/forgot-password/forgot-password${loginProp}` : '/forgot'}\r\n                                color=\"secondary\"\r\n                                sx={{ textDecoration: 'none' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n                        <FormControl fullWidth error={Boolean(touched.token && errors.token)} sx={{ ...theme.typography.customInput }}>\r\n                            <ReCAPTCHA\r\n                                ref={recaptchaRef}\r\n                                onExpired={() => (recaptchaRef.current as any)?.reset()}\r\n                                sitekey={process.env.REACT_APP_SITE_KEY!}\r\n                                onChange={(value: any) => {\r\n                                    setValues({ ...values, token: value });\r\n                                }}\r\n                                size=\"normal\"\r\n                                style={{ margin: '0 auto', display: 'table' }}\r\n                            />\r\n                        </FormControl>\r\n                        <Box sx={{ my: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    sx={{ borderRadius: '8px' }}\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthLogin;\r\n","import { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthLogin from '../auth-forms/AuthLogin';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\n// project imports\r\nimport AuthWrapper from '../AuthWrapper';\r\n\r\n// assets\r\n\r\n// ================================|| AUTH3 - LOGIN ||================================ //\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const { isLoggedIn } = useAuth();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" sx={{ minHeight: '100vh', borderRadius: '24px' }}>\r\n                <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                    <AuthCardWrapper>\r\n                        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                            <Grid item sx={{ mb: 1 }}>\r\n                                <Link to=\"#\">\r\n                                    <Logo />\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid\r\n                                    container\r\n                                    direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                    alignItems=\"center\"\r\n                                    justifyContent=\"center\"\r\n                                >\r\n                                    <Grid item>\r\n                                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                            <Typography\r\n                                                color={theme.palette.secondary.main}\r\n                                                gutterBottom\r\n                                                variant={matchDownSM ? 'h3' : 'h2'}\r\n                                            >\r\n                                                Hello\r\n                                            </Typography>\r\n                                            <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : 'inherit'}>\r\n                                                Please Sign In Your Account\r\n                                            </Typography>\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <AuthLogin />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Divider />\r\n                            </Grid>\r\n                            {/* <Grid item xs={12}>\r\n                                <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                    <Typography\r\n                                        component={Link}\r\n                                        to={isLoggedIn ? '' : '/register'}\r\n                                        variant=\"subtitle1\"\r\n                                        sx={{ textDecoration: 'none' }}\r\n                                    >\r\n                                        Don&apos;t have account?\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid> */}\r\n                        </Grid>\r\n                    </AuthCardWrapper>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}